{
	"id": "bb89284168fed7a9d4cdb0ffafbe2916",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"MetaCraftersAssesment6-main/contracts/DegenToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DegenToken is ERC20, Ownable {\n    // Structure to represent an in-game item\n    struct GameItem {\n        uint256 itemId;\n        string itemName;\n        uint256 itemCost;\n    }\n\n    GameItem[] public gameItems; // List of in-game items\n\n    // Mapping to store owned items for each address\n    mapping(address => GameItem[]) private ownedItems;\n\n    constructor() ERC20(\"Degen\", \"DGN\") Ownable(msg.sender) {\n        // Initialize some game items with different values\n        gameItems.push(GameItem(1, \"Endless Batlle\", 100));\n        gameItems.push(GameItem(2, \"Demon Hunter Sword\", 150));\n        gameItems.push(GameItem(3, \"Windtalker\", 250));\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 0; // No fractional tokens\n    }\n\n    function getBalance() external view returns (uint256) {\n        return this.balanceOf(msg.sender);\n    }\n\n    function burnTokens(uint256 amount) public {\n        require(\n            balanceOf(_msgSender()) >= amount,\n            \"You do not have enough Degen Tokens\"\n        );\n        _burn(_msgSender(), amount);\n    }\n\n    function transferTokens(address recipient, uint256 amount) external {\n        require(\n            balanceOf(_msgSender()) >= amount,\n            \"Transfer failed: insufficient balance\"\n        );\n        approve(msg.sender, amount);\n        transferFrom(msg.sender, recipient, amount);\n    }\n\n    // Redeem tokens for a specific game item\n    function redeem(uint256 itemId) external {\n        require(itemId > 0 && itemId <= gameItems.length, \"Invalid item ID\");\n        GameItem memory item = gameItems[itemId - 1]; // Adjust index (1-based ID)\n\n        require(\n            balanceOf(msg.sender) >= item.itemCost,\n            \"Insufficient balance to redeem\"\n        );\n\n        _burn(msg.sender, item.itemCost);\n\n        // Add the item to the user's owned items\n        ownedItems[msg.sender].push(item);\n\n        // Emit an event for the redemption\n        emit ItemRedeemed(\n            msg.sender,\n            item.itemId,\n            item.itemName,\n            item.itemCost\n        );\n    }\n\n    // Fetch all available game items\n    function getGameItems() external view returns (GameItem[] memory) {\n        return gameItems;\n    }\n\n    // Fetch owned items for the caller\n    function getOwnedItems() external view returns (GameItem[] memory) {\n        return ownedItems[msg.sender];\n    }\n\n    // Event to log redemption\n    event ItemRedeemed(\n        address indexed redeemer,\n        uint256 itemId,\n        string itemName,\n        uint256 itemCost\n    );\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MetaCraftersAssesment6-main/contracts/DegenToken.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "redeemer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemCost",
									"type": "uint256"
								}
							],
							"name": "ItemRedeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gameItems",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "itemCost",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGameItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "itemName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "itemCost",
											"type": "uint256"
										}
									],
									"internalType": "struct DegenToken.GameItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwnedItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "itemName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "itemCost",
											"type": "uint256"
										}
									],
									"internalType": "struct DegenToken.GameItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":168:2854  contract DegenToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":530:833  constructor() ERC20(\"Degen\", \"DGN\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":574:584  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":656:665  gameItems */\n  0x06\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":671:705  GameItem(1, \"Endless Batlle\", 100) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":680:681  1 */\n  0x01\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":671:705  GameItem(1, \"Endless Batlle\", 100) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x456e646c657373204261746c6c65000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":701:704  100 */\n  0x64\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":671:705  GameItem(1, \"Endless Batlle\", 100) */\n  dup2\n  mstore\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":656:706  gameItems.push(GameItem(1, \"Endless Batlle\", 100)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_17\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_17:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":716:725  gameItems */\n  0x06\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":731:769  GameItem(2, \"Demon Hunter Sword\", 150) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":740:741  2 */\n  0x02\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":731:769  GameItem(2, \"Demon Hunter Sword\", 150) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x44656d6f6e2048756e7465722053776f72640000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":765:768  150 */\n  0x96\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":731:769  GameItem(2, \"Demon Hunter Sword\", 150) */\n  dup2\n  mstore\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":716:770  gameItems.push(GameItem(2, \"Demon Hunter Sword\", 150)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_19:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":780:789  gameItems */\n  0x06\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":795:825  GameItem(3, \"Windtalker\", 250) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":804:805  3 */\n  0x03\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":795:825  GameItem(3, \"Windtalker\", 250) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x57696e6474616c6b657200000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":821:824  250 */\n  0xfa\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":795:825  GameItem(3, \"Windtalker\", 250) */\n  dup2\n  mstore\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":780:826  gameItems.push(GameItem(3, \"Windtalker\", 250)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_21:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":168:2854  contract DegenToken is ERC20, Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_24:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_25:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_26:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_27:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_52:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_54\n  tag_26\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":714:798   */\ntag_53:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_28:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_29:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_30:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_31:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_59\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1429:1468   */\n  tag_60\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_32:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_33:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_34:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_64\n    /* \"#utility.yul\":1818:1852   */\n  tag_65\n    /* \"#utility.yul\":1827:1851   */\n  tag_66\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_32\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1818:1852   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1800:1853   */\n  tag_32\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_35:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_36:\n    /* \"#utility.yul\":2056:2095   */\n  tag_69\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2208   */\n  tag_70\n    /* \"#utility.yul\":2166:2207   */\n  tag_71\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_31\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_37:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_38:\n    /* \"#utility.yul\":2377:2409   */\n  tag_74\n  tag_37\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2418:2483   */\n  tag_75\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_36\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_39:\n    /* \"#utility.yul\":2555:2675   */\ntag_77:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_80\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_38\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_40:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_83\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_28\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2906:2935   */\n  tag_84\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_85:\n    /* \"#utility.yul\":3133:3213   */\n  tag_86\n    /* \"#utility.yul\":3189:3211   */\n  tag_87\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_29\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_82:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_41:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_42:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_90\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_41\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_43:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_92\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_94\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_96\n  tag_25\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4038:4094   */\ntag_95:\n    /* \"#utility.yul\":4118:4156   */\n  tag_97\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_27\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4203:4270   */\n  tag_98\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_40\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_101:\n    /* \"#utility.yul\":5144:5211   */\n  tag_102\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_43\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_99)\n    /* \"#utility.yul\":4365:4983   */\ntag_100:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_103\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_28\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_104:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_108\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_42\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_107:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_99:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_44:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_45:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_111\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_44\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_46:\n    /* \"#utility.yul\":5555:5579   */\n  tag_113\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_45\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_115\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_46\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":168:2854  contract DegenToken is ERC20, Ownable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":168:2854  contract DegenToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7a97840d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8cffa21c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x430074c2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6d1b229d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1050:1154  function getBalance() external view returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":938:1044  function decimals() public pure override returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":839:932  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":362:389  GameItem[] public gameItems */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1160:1372  function burnTokens(uint256 amount) public {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2423:2522  function getGameItems() external view returns (GameItem[] memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2568:2681  function getOwnedItems() external view returns (GameItem[] memory) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1378:1670  function transferTokens(address recipient, uint256 amount) external {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1722:2379  function redeem(uint256 itemId) external {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1050:1154  function getBalance() external view returns (uint256) {... */\n    tag_37:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1095:1102  uint256 */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1121:1125  this */\n      address\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1121:1135  this.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1136:1146  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1121:1147  this.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1114:1147  return this.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1050:1154  function getBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":938:1044  function decimals() public pure override returns (uint8) {... */\n    tag_49:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":988:993  uint8 */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":938:1044  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":839:932  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":908:925  _mint(to, amount) */\n      tag_133\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":914:916  to */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":918:924  amount */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":908:913  _mint */\n      tag_134\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":908:925  _mint(to, amount) */\n      jump\t// in\n    tag_133:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":839:932  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":362:389  GameItem[] public gameItems */\n    tag_58:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_105\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_105\n      jump\t// in\n    tag_138:\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1160:1372  function burnTokens(uint256 amount) public {... */\n    tag_63:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1261:1267  amount */\n      dup1\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1234:1257  balanceOf(_msgSender()) */\n      tag_143\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1244:1256  _msgSender() */\n      tag_144\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1244:1254  _msgSender */\n      tag_112\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1244:1256  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1234:1243  balanceOf */\n      tag_67\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1234:1257  balanceOf(_msgSender()) */\n      jump\t// in\n    tag_143:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1234:1267  balanceOf(_msgSender()) >= amount */\n      lt\n      iszero\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1213:1328  require(... */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1338:1365  _burn(_msgSender(), amount) */\n      tag_148\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1344:1356  _msgSender() */\n      tag_149\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1344:1354  _msgSender */\n      tag_112\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1344:1356  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1358:1364  amount */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1338:1343  _burn */\n      tag_150\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1338:1365  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_148:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1160:1372  function burnTokens(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2423:2522  function getGameItems() external view returns (GameItem[] memory) {... */\n    tag_72:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2470:2487  GameItem[] memory */\n      0x60\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2506:2515  gameItems */\n      0x06\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2499:2515  return gameItems */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_158:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_159\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_105\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_105\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_158)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2423:2522  function getGameItems() external view returns (GameItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2568:2681  function getOwnedItems() external view returns (GameItem[] memory) {... */\n    tag_76:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2616:2633  GameItem[] memory */\n      0x60\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2652:2662  ownedItems */\n      0x07\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2652:2674  ownedItems[msg.sender] */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2663:2673  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2652:2674  ownedItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2645:2674  return ownedItems[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_167:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_168\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_105\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_105\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_167)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2568:2681  function getOwnedItems() external view returns (GameItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_105\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_105\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1378:1670  function transferTokens(address recipient, uint256 amount) external {... */\n    tag_91:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1504:1510  amount */\n      dup1\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1477:1500  balanceOf(_msgSender()) */\n      tag_186\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1487:1499  _msgSender() */\n      tag_187\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1487:1497  _msgSender */\n      tag_112\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1487:1499  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1477:1486  balanceOf */\n      tag_67\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1477:1500  balanceOf(_msgSender()) */\n      jump\t// in\n    tag_186:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1477:1510  balanceOf(_msgSender()) >= amount */\n      lt\n      iszero\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1456:1573  require(... */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1583:1610  approve(msg.sender, amount) */\n      tag_191\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1591:1601  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1603:1609  amount */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1583:1590  approve */\n      tag_33\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1583:1610  approve(msg.sender, amount) */\n      jump\t// in\n    tag_191:\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1620:1663  transferFrom(msg.sender, recipient, amount) */\n      tag_192\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1633:1643  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1645:1654  recipient */\n      dup4\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1656:1662  amount */\n      dup4\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1620:1632  transferFrom */\n      tag_46\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1620:1663  transferFrom(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_192:\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1378:1670  function transferTokens(address recipient, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1722:2379  function redeem(uint256 itemId) external {... */\n    tag_94:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1790:1791  0 */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1781:1787  itemId */\n      dup2\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1781:1791  itemId > 0 */\n      gt\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1781:1821  itemId > 0 && itemId <= gameItems.length */\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1805:1814  gameItems */\n      0x06\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1805:1821  gameItems.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1795:1801  itemId */\n      dup2\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1795:1821  itemId <= gameItems.length */\n      gt\n      iszero\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1781:1821  itemId > 0 && itemId <= gameItems.length */\n    tag_194:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1773:1841  require(itemId > 0 && itemId <= gameItems.length, \"Invalid item ID\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1851:1871  GameItem memory item */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1874:1883  gameItems */\n      0x06\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1893:1894  1 */\n      0x01\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1884:1890  itemId */\n      dup4\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1884:1894  itemId - 1 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1874:1895  gameItems[itemId - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1851:1895  GameItem memory item = gameItems[itemId - 1] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_105\n      jump\t// in\n    tag_204:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_205\n      swap1\n      tag_105\n      jump\t// in\n    tag_205:\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1981:1985  item */\n      dup1\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1981:1994  item.itemCost */\n      0x40\n      add\n      mload\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1956:1977  balanceOf(msg.sender) */\n      tag_209\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1966:1976  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1956:1965  balanceOf */\n      tag_67\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1956:1977  balanceOf(msg.sender) */\n      jump\t// in\n    tag_209:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1956:1994  balanceOf(msg.sender) >= item.itemCost */\n      lt\n      iszero\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1935:2050  require(... */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2061:2093  _burn(msg.sender, item.itemCost) */\n      tag_213\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2067:2077  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2079:2083  item */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2079:2092  item.itemCost */\n      0x40\n      add\n      mload\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2061:2066  _burn */\n      tag_150\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2061:2093  _burn(msg.sender, item.itemCost) */\n      jump\t// in\n    tag_213:\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2154:2164  ownedItems */\n      0x07\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2154:2176  ownedItems[msg.sender] */\n      0x00\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2165:2175  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2154:2176  ownedItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2182:2186  item */\n      dup2\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2154:2187  ownedItems[msg.sender].push(item) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2273:2283  msg.sender */\n      caller\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2247:2372  ItemRedeemed(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2748aed474e8b2615b65f003a5fac4b64d8c9eb9c911daf175b6103f3802cd4c\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2297:2301  item */\n      dup3\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2297:2308  item.itemId */\n      0x00\n      add\n      mload\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2322:2326  item */\n      dup4\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2322:2335  item.itemName */\n      0x20\n      add\n      mload\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2349:2353  item */\n      dup5\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2349:2362  item.itemCost */\n      0x40\n      add\n      mload\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":2247:2372  ItemRedeemed(... */\n      mload(0x40)\n      tag_217\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1763:2379  {... */\n      pop\n        /* \"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":1722:2379  function redeem(uint256 itemId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_264\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_269)\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_273)\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_275:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_276:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_277:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_278:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_279:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_339\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_275\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":711:782   */\n      tag_340\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_276\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_341\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_277\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":881:910   */\n      tag_342\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_278\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_29:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_344\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_279\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_281:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_283:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_284:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_350\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_283\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_285:\n        /* \"#utility.yul\":1876:1900   */\n      tag_352\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_284\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_353:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_286:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_355\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_285\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_287:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_288:\n        /* \"#utility.yul\":2232:2256   */\n      tag_358\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_287\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_359:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_289:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_361\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_288\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_364\n      tag_281\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2525:2644   */\n    tag_363:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_365\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_286\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_366\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_289\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_290:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_291:\n        /* \"#utility.yul\":3089:3110   */\n      tag_369\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_290\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_371\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_291\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_292:\n        /* \"#utility.yul\":3426:3450   */\n      tag_373\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_287\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_39:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_375\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_292\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_45:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_378\n      tag_281\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3801:3920   */\n    tag_377:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_379\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_286\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_380\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_286\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_381\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_289\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_293:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_294:\n        /* \"#utility.yul\":4491:4513   */\n      tag_384\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_293\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_51:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_386\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_294\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_389\n      tag_281\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4822:4941   */\n    tag_388:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_390\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_289\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5614   */\n    tag_60:\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5288:5290   */\n      0x60\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5273:5291   */\n      add\n        /* \"#utility.yul\":5265:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5372   */\n      tag_392\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5358:5367   */\n      dup4\n        /* \"#utility.yul\":5354:5371   */\n      add\n        /* \"#utility.yul\":5345:5351   */\n      dup7\n        /* \"#utility.yul\":5301:5372   */\n      tag_292\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5419:5428   */\n      dup2\n        /* \"#utility.yul\":5413:5417   */\n      dup2\n        /* \"#utility.yul\":5409:5429   */\n      sub\n        /* \"#utility.yul\":5404:5406   */\n      0x20\n        /* \"#utility.yul\":5393:5402   */\n      dup4\n        /* \"#utility.yul\":5389:5407   */\n      add\n        /* \"#utility.yul\":5382:5430   */\n      mstore\n        /* \"#utility.yul\":5447:5525   */\n      tag_393\n        /* \"#utility.yul\":5520:5524   */\n      dup2\n        /* \"#utility.yul\":5511:5517   */\n      dup6\n        /* \"#utility.yul\":5447:5525   */\n      tag_279\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5439:5525   */\n      swap1\n      pop\n        /* \"#utility.yul\":5535:5607   */\n      tag_394\n        /* \"#utility.yul\":5603:5605   */\n      0x40\n        /* \"#utility.yul\":5592:5601   */\n      dup4\n        /* \"#utility.yul\":5588:5606   */\n      add\n        /* \"#utility.yul\":5579:5585   */\n      dup5\n        /* \"#utility.yul\":5535:5607   */\n      tag_292\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5081:5614   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5620:5949   */\n    tag_66:\n        /* \"#utility.yul\":5679:5685   */\n      0x00\n        /* \"#utility.yul\":5728:5730   */\n      0x20\n        /* \"#utility.yul\":5716:5725   */\n      dup3\n        /* \"#utility.yul\":5707:5714   */\n      dup5\n        /* \"#utility.yul\":5703:5726   */\n      sub\n        /* \"#utility.yul\":5699:5731   */\n      slt\n        /* \"#utility.yul\":5696:5815   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":5734:5813   */\n      tag_397\n      tag_281\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5696:5815   */\n    tag_396:\n        /* \"#utility.yul\":5854:5855   */\n      0x00\n        /* \"#utility.yul\":5879:5932   */\n      tag_398\n        /* \"#utility.yul\":5924:5931   */\n      dup5\n        /* \"#utility.yul\":5915:5921   */\n      dup3\n        /* \"#utility.yul\":5904:5913   */\n      dup6\n        /* \"#utility.yul\":5900:5922   */\n      add\n        /* \"#utility.yul\":5879:5932   */\n      tag_286\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5869:5932   */\n      swap2\n      pop\n        /* \"#utility.yul\":5825:5942   */\n      pop\n        /* \"#utility.yul\":5620:5949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6094   */\n    tag_295:\n        /* \"#utility.yul\":6047:6053   */\n      0x00\n        /* \"#utility.yul\":6081:6086   */\n      dup2\n        /* \"#utility.yul\":6075:6087   */\n      mload\n        /* \"#utility.yul\":6065:6087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5955:6094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6309   */\n    tag_296:\n        /* \"#utility.yul\":6224:6235   */\n      0x00\n        /* \"#utility.yul\":6258:6264   */\n      dup3\n        /* \"#utility.yul\":6253:6256   */\n      dup3\n        /* \"#utility.yul\":6246:6265   */\n      mstore\n        /* \"#utility.yul\":6298:6302   */\n      0x20\n        /* \"#utility.yul\":6293:6296   */\n      dup3\n        /* \"#utility.yul\":6289:6303   */\n      add\n        /* \"#utility.yul\":6274:6303   */\n      swap1\n      pop\n        /* \"#utility.yul\":6100:6309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6315:6472   */\n    tag_297:\n        /* \"#utility.yul\":6407:6411   */\n      0x00\n        /* \"#utility.yul\":6430:6433   */\n      dup2\n        /* \"#utility.yul\":6422:6433   */\n      swap1\n      pop\n        /* \"#utility.yul\":6460:6464   */\n      0x20\n        /* \"#utility.yul\":6455:6458   */\n      dup3\n        /* \"#utility.yul\":6451:6465   */\n      add\n        /* \"#utility.yul\":6443:6465   */\n      swap1\n      pop\n        /* \"#utility.yul\":6315:6472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6586   */\n    tag_298:\n        /* \"#utility.yul\":6555:6579   */\n      tag_403\n        /* \"#utility.yul\":6573:6578   */\n      dup2\n        /* \"#utility.yul\":6555:6579   */\n      tag_287\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6550:6553   */\n      dup3\n        /* \"#utility.yul\":6543:6580   */\n      mstore\n        /* \"#utility.yul\":6478:6586   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6592:6751   */\n    tag_299:\n        /* \"#utility.yul\":6666:6677   */\n      0x00\n        /* \"#utility.yul\":6700:6706   */\n      dup3\n        /* \"#utility.yul\":6695:6698   */\n      dup3\n        /* \"#utility.yul\":6688:6707   */\n      mstore\n        /* \"#utility.yul\":6740:6744   */\n      0x20\n        /* \"#utility.yul\":6735:6738   */\n      dup3\n        /* \"#utility.yul\":6731:6745   */\n      add\n        /* \"#utility.yul\":6716:6745   */\n      swap1\n      pop\n        /* \"#utility.yul\":6592:6751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6757:7114   */\n    tag_300:\n        /* \"#utility.yul\":6835:6838   */\n      0x00\n        /* \"#utility.yul\":6863:6902   */\n      tag_406\n        /* \"#utility.yul\":6896:6901   */\n      dup3\n        /* \"#utility.yul\":6863:6902   */\n      tag_275\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6918:6979   */\n      tag_407\n        /* \"#utility.yul\":6972:6978   */\n      dup2\n        /* \"#utility.yul\":6967:6970   */\n      dup6\n        /* \"#utility.yul\":6918:6979   */\n      tag_299\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6911:6979   */\n      swap4\n      pop\n        /* \"#utility.yul\":6988:7053   */\n      tag_408\n        /* \"#utility.yul\":7046:7052   */\n      dup2\n        /* \"#utility.yul\":7041:7044   */\n      dup6\n        /* \"#utility.yul\":7034:7038   */\n      0x20\n        /* \"#utility.yul\":7027:7032   */\n      dup7\n        /* \"#utility.yul\":7023:7039   */\n      add\n        /* \"#utility.yul\":6988:7053   */\n      tag_277\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7078:7107   */\n      tag_409\n        /* \"#utility.yul\":7100:7106   */\n      dup2\n        /* \"#utility.yul\":7078:7107   */\n      tag_278\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7073:7076   */\n      dup5\n        /* \"#utility.yul\":7069:7108   */\n      add\n        /* \"#utility.yul\":7062:7108   */\n      swap2\n      pop\n        /* \"#utility.yul\":6839:7114   */\n      pop\n        /* \"#utility.yul\":6757:7114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7184:7964   */\n    tag_301:\n        /* \"#utility.yul\":7293:7296   */\n      0x00\n        /* \"#utility.yul\":7329:7333   */\n      0x60\n        /* \"#utility.yul\":7324:7327   */\n      dup4\n        /* \"#utility.yul\":7320:7334   */\n      add\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7411:7416   */\n      dup4\n        /* \"#utility.yul\":7407:7423   */\n      add\n        /* \"#utility.yul\":7401:7424   */\n      mload\n        /* \"#utility.yul\":7437:7500   */\n      tag_411\n        /* \"#utility.yul\":7494:7498   */\n      0x00\n        /* \"#utility.yul\":7489:7492   */\n      dup7\n        /* \"#utility.yul\":7485:7499   */\n      add\n        /* \"#utility.yul\":7471:7483   */\n      dup3\n        /* \"#utility.yul\":7437:7500   */\n      tag_298\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7344:7510   */\n      pop\n        /* \"#utility.yul\":7596:7600   */\n      0x20\n        /* \"#utility.yul\":7589:7594   */\n      dup4\n        /* \"#utility.yul\":7585:7601   */\n      add\n        /* \"#utility.yul\":7579:7602   */\n      mload\n        /* \"#utility.yul\":7649:7652   */\n      dup5\n        /* \"#utility.yul\":7643:7647   */\n      dup3\n        /* \"#utility.yul\":7639:7653   */\n      sub\n        /* \"#utility.yul\":7632:7636   */\n      0x20\n        /* \"#utility.yul\":7627:7630   */\n      dup7\n        /* \"#utility.yul\":7623:7637   */\n      add\n        /* \"#utility.yul\":7616:7654   */\n      mstore\n        /* \"#utility.yul\":7675:7748   */\n      tag_412\n        /* \"#utility.yul\":7743:7747   */\n      dup3\n        /* \"#utility.yul\":7729:7741   */\n      dup3\n        /* \"#utility.yul\":7675:7748   */\n      tag_300\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7667:7748   */\n      swap2\n      pop\n        /* \"#utility.yul\":7520:7759   */\n      pop\n        /* \"#utility.yul\":7845:7849   */\n      0x40\n        /* \"#utility.yul\":7838:7843   */\n      dup4\n        /* \"#utility.yul\":7834:7850   */\n      add\n        /* \"#utility.yul\":7828:7851   */\n      mload\n        /* \"#utility.yul\":7864:7927   */\n      tag_413\n        /* \"#utility.yul\":7921:7925   */\n      0x40\n        /* \"#utility.yul\":7916:7919   */\n      dup7\n        /* \"#utility.yul\":7912:7926   */\n      add\n        /* \"#utility.yul\":7898:7910   */\n      dup3\n        /* \"#utility.yul\":7864:7927   */\n      tag_298\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7769:7937   */\n      pop\n        /* \"#utility.yul\":7954:7958   */\n      dup1\n        /* \"#utility.yul\":7947:7958   */\n      swap2\n      pop\n        /* \"#utility.yul\":7298:7964   */\n      pop\n        /* \"#utility.yul\":7184:7964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7970:8226   */\n    tag_302:\n        /* \"#utility.yul\":8089:8099   */\n      0x00\n        /* \"#utility.yul\":8124:8220   */\n      tag_415\n        /* \"#utility.yul\":8216:8219   */\n      dup4\n        /* \"#utility.yul\":8208:8214   */\n      dup4\n        /* \"#utility.yul\":8124:8220   */\n      tag_301\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8110:8220   */\n      swap1\n      pop\n        /* \"#utility.yul\":7970:8226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8232:8370   */\n    tag_303:\n        /* \"#utility.yul\":8327:8331   */\n      0x00\n        /* \"#utility.yul\":8359:8363   */\n      0x20\n        /* \"#utility.yul\":8354:8357   */\n      dup3\n        /* \"#utility.yul\":8350:8364   */\n      add\n        /* \"#utility.yul\":8342:8364   */\n      swap1\n      pop\n        /* \"#utility.yul\":8232:8370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:9555   */\n    tag_304:\n        /* \"#utility.yul\":8613:8616   */\n      0x00\n        /* \"#utility.yul\":8642:8721   */\n      tag_418\n        /* \"#utility.yul\":8715:8720   */\n      dup3\n        /* \"#utility.yul\":8642:8721   */\n      tag_295\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8737:8848   */\n      tag_419\n        /* \"#utility.yul\":8841:8847   */\n      dup2\n        /* \"#utility.yul\":8836:8839   */\n      dup6\n        /* \"#utility.yul\":8737:8848   */\n      tag_296\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8730:8848   */\n      swap4\n      pop\n        /* \"#utility.yul\":8874:8877   */\n      dup4\n        /* \"#utility.yul\":8919:8923   */\n      0x20\n        /* \"#utility.yul\":8911:8917   */\n      dup3\n        /* \"#utility.yul\":8907:8924   */\n      mul\n        /* \"#utility.yul\":8902:8905   */\n      dup6\n        /* \"#utility.yul\":8898:8925   */\n      add\n        /* \"#utility.yul\":8949:9030   */\n      tag_420\n        /* \"#utility.yul\":9024:9029   */\n      dup6\n        /* \"#utility.yul\":8949:9030   */\n      tag_297\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9053:9060   */\n      dup1\n        /* \"#utility.yul\":9084:9085   */\n      0x00\n        /* \"#utility.yul\":9069:9510   */\n    tag_421:\n        /* \"#utility.yul\":9094:9100   */\n      dup6\n        /* \"#utility.yul\":9091:9092   */\n      dup2\n        /* \"#utility.yul\":9088:9101   */\n      lt\n        /* \"#utility.yul\":9069:9510   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9165:9174   */\n      dup5\n        /* \"#utility.yul\":9159:9163   */\n      dup5\n        /* \"#utility.yul\":9155:9175   */\n      sub\n        /* \"#utility.yul\":9150:9153   */\n      dup10\n        /* \"#utility.yul\":9143:9176   */\n      mstore\n        /* \"#utility.yul\":9216:9222   */\n      dup2\n        /* \"#utility.yul\":9210:9223   */\n      mload\n        /* \"#utility.yul\":9244:9358   */\n      tag_424\n        /* \"#utility.yul\":9353:9357   */\n      dup6\n        /* \"#utility.yul\":9338:9351   */\n      dup3\n        /* \"#utility.yul\":9244:9358   */\n      tag_302\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9236:9358   */\n      swap5\n      pop\n        /* \"#utility.yul\":9381:9466   */\n      tag_425\n        /* \"#utility.yul\":9459:9465   */\n      dup4\n        /* \"#utility.yul\":9381:9466   */\n      tag_303\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9371:9466   */\n      swap3\n      pop\n        /* \"#utility.yul\":9495:9499   */\n      0x20\n        /* \"#utility.yul\":9490:9493   */\n      dup11\n        /* \"#utility.yul\":9486:9500   */\n      add\n        /* \"#utility.yul\":9479:9500   */\n      swap10\n      pop\n        /* \"#utility.yul\":9129:9510   */\n      pop\n        /* \"#utility.yul\":9116:9117   */\n      0x01\n        /* \"#utility.yul\":9113:9114   */\n      dup2\n        /* \"#utility.yul\":9109:9118   */\n      add\n        /* \"#utility.yul\":9104:9118   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9510   */\n      jump(tag_421)\n    tag_423:\n        /* \"#utility.yul\":9073:9087   */\n      pop\n        /* \"#utility.yul\":9526:9530   */\n      dup3\n        /* \"#utility.yul\":9519:9530   */\n      swap8\n      pop\n        /* \"#utility.yul\":9546:9549   */\n      dup8\n        /* \"#utility.yul\":9539:9549   */\n      swap6\n      pop\n        /* \"#utility.yul\":8618:9555   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8444:9555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9561:10034   */\n    tag_74:\n        /* \"#utility.yul\":9754:9758   */\n      0x00\n        /* \"#utility.yul\":9792:9794   */\n      0x20\n        /* \"#utility.yul\":9781:9790   */\n      dup3\n        /* \"#utility.yul\":9777:9795   */\n      add\n        /* \"#utility.yul\":9769:9795   */\n      swap1\n      pop\n        /* \"#utility.yul\":9841:9850   */\n      dup2\n        /* \"#utility.yul\":9835:9839   */\n      dup2\n        /* \"#utility.yul\":9831:9851   */\n      sub\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9816:9825   */\n      dup4\n        /* \"#utility.yul\":9812:9829   */\n      add\n        /* \"#utility.yul\":9805:9852   */\n      mstore\n        /* \"#utility.yul\":9869:10027   */\n      tag_427\n        /* \"#utility.yul\":10022:10026   */\n      dup2\n        /* \"#utility.yul\":10013:10019   */\n      dup5\n        /* \"#utility.yul\":9869:10027   */\n      tag_304\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9861:10027   */\n      swap1\n      pop\n        /* \"#utility.yul\":9561:10034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10040:10158   */\n    tag_305:\n        /* \"#utility.yul\":10127:10151   */\n      tag_429\n        /* \"#utility.yul\":10145:10150   */\n      dup2\n        /* \"#utility.yul\":10127:10151   */\n      tag_284\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10122:10125   */\n      dup3\n        /* \"#utility.yul\":10115:10152   */\n      mstore\n        /* \"#utility.yul\":10040:10158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10386   */\n    tag_81:\n        /* \"#utility.yul\":10257:10261   */\n      0x00\n        /* \"#utility.yul\":10295:10297   */\n      0x20\n        /* \"#utility.yul\":10284:10293   */\n      dup3\n        /* \"#utility.yul\":10280:10298   */\n      add\n        /* \"#utility.yul\":10272:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10308:10379   */\n      tag_431\n        /* \"#utility.yul\":10376:10377   */\n      0x00\n        /* \"#utility.yul\":10365:10374   */\n      dup4\n        /* \"#utility.yul\":10361:10378   */\n      add\n        /* \"#utility.yul\":10352:10358   */\n      dup5\n        /* \"#utility.yul\":10308:10379   */\n      tag_305\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10164:10386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10392:10866   */\n    tag_97:\n        /* \"#utility.yul\":10460:10466   */\n      0x00\n        /* \"#utility.yul\":10468:10474   */\n      dup1\n        /* \"#utility.yul\":10517:10519   */\n      0x40\n        /* \"#utility.yul\":10505:10514   */\n      dup4\n        /* \"#utility.yul\":10496:10503   */\n      dup6\n        /* \"#utility.yul\":10492:10515   */\n      sub\n        /* \"#utility.yul\":10488:10520   */\n      slt\n        /* \"#utility.yul\":10485:10604   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10523:10602   */\n      tag_434\n      tag_281\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10485:10604   */\n    tag_433:\n        /* \"#utility.yul\":10643:10644   */\n      0x00\n        /* \"#utility.yul\":10668:10721   */\n      tag_435\n        /* \"#utility.yul\":10713:10720   */\n      dup6\n        /* \"#utility.yul\":10704:10710   */\n      dup3\n        /* \"#utility.yul\":10693:10702   */\n      dup7\n        /* \"#utility.yul\":10689:10711   */\n      add\n        /* \"#utility.yul\":10668:10721   */\n      tag_286\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10658:10721   */\n      swap3\n      pop\n        /* \"#utility.yul\":10614:10731   */\n      pop\n        /* \"#utility.yul\":10770:10772   */\n      0x20\n        /* \"#utility.yul\":10796:10849   */\n      tag_436\n        /* \"#utility.yul\":10841:10848   */\n      dup6\n        /* \"#utility.yul\":10832:10838   */\n      dup3\n        /* \"#utility.yul\":10821:10830   */\n      dup7\n        /* \"#utility.yul\":10817:10839   */\n      add\n        /* \"#utility.yul\":10796:10849   */\n      tag_286\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10786:10849   */\n      swap2\n      pop\n        /* \"#utility.yul\":10741:10859   */\n      pop\n        /* \"#utility.yul\":10392:10866   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10872:11052   */\n    tag_306:\n        /* \"#utility.yul\":10920:10997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10910:10998   */\n      mstore\n        /* \"#utility.yul\":11017:11021   */\n      0x22\n        /* \"#utility.yul\":11014:11015   */\n      0x04\n        /* \"#utility.yul\":11007:11022   */\n      mstore\n        /* \"#utility.yul\":11041:11045   */\n      0x24\n        /* \"#utility.yul\":11038:11039   */\n      0x00\n        /* \"#utility.yul\":11031:11046   */\n      revert\n        /* \"#utility.yul\":11058:11378   */\n    tag_105:\n        /* \"#utility.yul\":11102:11108   */\n      0x00\n        /* \"#utility.yul\":11139:11140   */\n      0x02\n        /* \"#utility.yul\":11133:11137   */\n      dup3\n        /* \"#utility.yul\":11129:11141   */\n      div\n        /* \"#utility.yul\":11119:11141   */\n      swap1\n      pop\n        /* \"#utility.yul\":11186:11187   */\n      0x01\n        /* \"#utility.yul\":11180:11184   */\n      dup3\n        /* \"#utility.yul\":11176:11188   */\n      and\n        /* \"#utility.yul\":11207:11225   */\n      dup1\n        /* \"#utility.yul\":11197:11278   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":11263:11267   */\n      0x7f\n        /* \"#utility.yul\":11255:11261   */\n      dup3\n        /* \"#utility.yul\":11251:11268   */\n      and\n        /* \"#utility.yul\":11241:11268   */\n      swap2\n      pop\n        /* \"#utility.yul\":11197:11278   */\n    tag_439:\n        /* \"#utility.yul\":11325:11327   */\n      0x20\n        /* \"#utility.yul\":11317:11323   */\n      dup3\n        /* \"#utility.yul\":11314:11328   */\n      lt\n        /* \"#utility.yul\":11294:11312   */\n      dup2\n        /* \"#utility.yul\":11291:11329   */\n      sub\n        /* \"#utility.yul\":11288:11372   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":11344:11362   */\n      tag_441\n      tag_306\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11288:11372   */\n    tag_440:\n        /* \"#utility.yul\":11109:11378   */\n      pop\n        /* \"#utility.yul\":11058:11378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11384:11527   */\n    tag_307:\n        /* \"#utility.yul\":11441:11446   */\n      0x00\n        /* \"#utility.yul\":11472:11478   */\n      dup2\n        /* \"#utility.yul\":11466:11479   */\n      mload\n        /* \"#utility.yul\":11457:11479   */\n      swap1\n      pop\n        /* \"#utility.yul\":11488:11521   */\n      tag_443\n        /* \"#utility.yul\":11515:11520   */\n      dup2\n        /* \"#utility.yul\":11488:11521   */\n      tag_288\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11384:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11884   */\n    tag_120:\n        /* \"#utility.yul\":11603:11609   */\n      0x00\n        /* \"#utility.yul\":11652:11654   */\n      0x20\n        /* \"#utility.yul\":11640:11649   */\n      dup3\n        /* \"#utility.yul\":11631:11638   */\n      dup5\n        /* \"#utility.yul\":11627:11650   */\n      sub\n        /* \"#utility.yul\":11623:11655   */\n      slt\n        /* \"#utility.yul\":11620:11739   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11658:11737   */\n      tag_446\n      tag_281\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11620:11739   */\n    tag_445:\n        /* \"#utility.yul\":11778:11779   */\n      0x00\n        /* \"#utility.yul\":11803:11867   */\n      tag_447\n        /* \"#utility.yul\":11859:11866   */\n      dup5\n        /* \"#utility.yul\":11850:11856   */\n      dup3\n        /* \"#utility.yul\":11839:11848   */\n      dup6\n        /* \"#utility.yul\":11835:11857   */\n      add\n        /* \"#utility.yul\":11803:11867   */\n      tag_307\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11793:11867   */\n      swap2\n      pop\n        /* \"#utility.yul\":11749:11877   */\n      pop\n        /* \"#utility.yul\":11533:11884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11890:12112   */\n    tag_308:\n        /* \"#utility.yul\":12030:12064   */\n      0x596f7520646f206e6f74206861766520656e6f75676820446567656e20546f6b\n        /* \"#utility.yul\":12026:12027   */\n      0x00\n        /* \"#utility.yul\":12018:12024   */\n      dup3\n        /* \"#utility.yul\":12014:12028   */\n      add\n        /* \"#utility.yul\":12007:12065   */\n      mstore\n        /* \"#utility.yul\":12099:12104   */\n      0x656e730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12094:12096   */\n      0x20\n        /* \"#utility.yul\":12086:12092   */\n      dup3\n        /* \"#utility.yul\":12082:12097   */\n      add\n        /* \"#utility.yul\":12075:12105   */\n      mstore\n        /* \"#utility.yul\":11890:12112   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12118:12484   */\n    tag_309:\n        /* \"#utility.yul\":12260:12263   */\n      0x00\n        /* \"#utility.yul\":12281:12348   */\n      tag_450\n        /* \"#utility.yul\":12345:12347   */\n      0x23\n        /* \"#utility.yul\":12340:12343   */\n      dup4\n        /* \"#utility.yul\":12281:12348   */\n      tag_276\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12274:12348   */\n      swap2\n      pop\n        /* \"#utility.yul\":12357:12450   */\n      tag_451\n        /* \"#utility.yul\":12446:12449   */\n      dup3\n        /* \"#utility.yul\":12357:12450   */\n      tag_308\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12475:12477   */\n      0x40\n        /* \"#utility.yul\":12470:12473   */\n      dup3\n        /* \"#utility.yul\":12466:12478   */\n      add\n        /* \"#utility.yul\":12459:12478   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12490:12909   */\n    tag_147:\n        /* \"#utility.yul\":12656:12660   */\n      0x00\n        /* \"#utility.yul\":12694:12696   */\n      0x20\n        /* \"#utility.yul\":12683:12692   */\n      dup3\n        /* \"#utility.yul\":12679:12697   */\n      add\n        /* \"#utility.yul\":12671:12697   */\n      swap1\n      pop\n        /* \"#utility.yul\":12743:12752   */\n      dup2\n        /* \"#utility.yul\":12737:12741   */\n      dup2\n        /* \"#utility.yul\":12733:12753   */\n      sub\n        /* \"#utility.yul\":12729:12730   */\n      0x00\n        /* \"#utility.yul\":12718:12727   */\n      dup4\n        /* \"#utility.yul\":12714:12731   */\n      add\n        /* \"#utility.yul\":12707:12754   */\n      mstore\n        /* \"#utility.yul\":12771:12902   */\n      tag_453\n        /* \"#utility.yul\":12897:12901   */\n      dup2\n        /* \"#utility.yul\":12771:12902   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12763:12902   */\n      swap1\n      pop\n        /* \"#utility.yul\":12490:12909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12915:13139   */\n    tag_310:\n        /* \"#utility.yul\":13055:13089   */\n      0x5472616e73666572206661696c65643a20696e73756666696369656e74206261\n        /* \"#utility.yul\":13051:13052   */\n      0x00\n        /* \"#utility.yul\":13043:13049   */\n      dup3\n        /* \"#utility.yul\":13039:13053   */\n      add\n        /* \"#utility.yul\":13032:13090   */\n      mstore\n        /* \"#utility.yul\":13124:13131   */\n      0x6c616e6365000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13119:13121   */\n      0x20\n        /* \"#utility.yul\":13111:13117   */\n      dup3\n        /* \"#utility.yul\":13107:13122   */\n      add\n        /* \"#utility.yul\":13100:13132   */\n      mstore\n        /* \"#utility.yul\":12915:13139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13145:13511   */\n    tag_311:\n        /* \"#utility.yul\":13287:13290   */\n      0x00\n        /* \"#utility.yul\":13308:13375   */\n      tag_456\n        /* \"#utility.yul\":13372:13374   */\n      0x25\n        /* \"#utility.yul\":13367:13370   */\n      dup4\n        /* \"#utility.yul\":13308:13375   */\n      tag_276\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13301:13375   */\n      swap2\n      pop\n        /* \"#utility.yul\":13384:13477   */\n      tag_457\n        /* \"#utility.yul\":13473:13476   */\n      dup3\n        /* \"#utility.yul\":13384:13477   */\n      tag_310\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13502:13504   */\n      0x40\n        /* \"#utility.yul\":13497:13500   */\n      dup3\n        /* \"#utility.yul\":13493:13505   */\n      add\n        /* \"#utility.yul\":13486:13505   */\n      swap1\n      pop\n        /* \"#utility.yul\":13145:13511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13517:13936   */\n    tag_190:\n        /* \"#utility.yul\":13683:13687   */\n      0x00\n        /* \"#utility.yul\":13721:13723   */\n      0x20\n        /* \"#utility.yul\":13710:13719   */\n      dup3\n        /* \"#utility.yul\":13706:13724   */\n      add\n        /* \"#utility.yul\":13698:13724   */\n      swap1\n      pop\n        /* \"#utility.yul\":13770:13779   */\n      dup2\n        /* \"#utility.yul\":13764:13768   */\n      dup2\n        /* \"#utility.yul\":13760:13780   */\n      sub\n        /* \"#utility.yul\":13756:13757   */\n      0x00\n        /* \"#utility.yul\":13745:13754   */\n      dup4\n        /* \"#utility.yul\":13741:13758   */\n      add\n        /* \"#utility.yul\":13734:13781   */\n      mstore\n        /* \"#utility.yul\":13798:13929   */\n      tag_459\n        /* \"#utility.yul\":13924:13928   */\n      dup2\n        /* \"#utility.yul\":13798:13929   */\n      tag_311\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13790:13929   */\n      swap1\n      pop\n        /* \"#utility.yul\":13517:13936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13942:14107   */\n    tag_312:\n        /* \"#utility.yul\":14082:14099   */\n      0x496e76616c6964206974656d2049440000000000000000000000000000000000\n        /* \"#utility.yul\":14078:14079   */\n      0x00\n        /* \"#utility.yul\":14070:14076   */\n      dup3\n        /* \"#utility.yul\":14066:14080   */\n      add\n        /* \"#utility.yul\":14059:14100   */\n      mstore\n        /* \"#utility.yul\":13942:14107   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14113:14479   */\n    tag_313:\n        /* \"#utility.yul\":14255:14258   */\n      0x00\n        /* \"#utility.yul\":14276:14343   */\n      tag_462\n        /* \"#utility.yul\":14340:14342   */\n      0x0f\n        /* \"#utility.yul\":14335:14338   */\n      dup4\n        /* \"#utility.yul\":14276:14343   */\n      tag_276\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14269:14343   */\n      swap2\n      pop\n        /* \"#utility.yul\":14352:14445   */\n      tag_463\n        /* \"#utility.yul\":14441:14444   */\n      dup3\n        /* \"#utility.yul\":14352:14445   */\n      tag_312\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14470:14472   */\n      0x20\n        /* \"#utility.yul\":14465:14468   */\n      dup3\n        /* \"#utility.yul\":14461:14473   */\n      add\n        /* \"#utility.yul\":14454:14473   */\n      swap1\n      pop\n        /* \"#utility.yul\":14113:14479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14485:14904   */\n    tag_197:\n        /* \"#utility.yul\":14651:14655   */\n      0x00\n        /* \"#utility.yul\":14689:14691   */\n      0x20\n        /* \"#utility.yul\":14678:14687   */\n      dup3\n        /* \"#utility.yul\":14674:14692   */\n      add\n        /* \"#utility.yul\":14666:14692   */\n      swap1\n      pop\n        /* \"#utility.yul\":14738:14747   */\n      dup2\n        /* \"#utility.yul\":14732:14736   */\n      dup2\n        /* \"#utility.yul\":14728:14748   */\n      sub\n        /* \"#utility.yul\":14724:14725   */\n      0x00\n        /* \"#utility.yul\":14713:14722   */\n      dup4\n        /* \"#utility.yul\":14709:14726   */\n      add\n        /* \"#utility.yul\":14702:14749   */\n      mstore\n        /* \"#utility.yul\":14766:14897   */\n      tag_465\n        /* \"#utility.yul\":14892:14896   */\n      dup2\n        /* \"#utility.yul\":14766:14897   */\n      tag_313\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14758:14897   */\n      swap1\n      pop\n        /* \"#utility.yul\":14485:14904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14910:15090   */\n    tag_314:\n        /* \"#utility.yul\":14958:15035   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14955:14956   */\n      0x00\n        /* \"#utility.yul\":14948:15036   */\n      mstore\n        /* \"#utility.yul\":15055:15059   */\n      0x11\n        /* \"#utility.yul\":15052:15053   */\n      0x04\n        /* \"#utility.yul\":15045:15060   */\n      mstore\n        /* \"#utility.yul\":15079:15083   */\n      0x24\n        /* \"#utility.yul\":15076:15077   */\n      0x00\n        /* \"#utility.yul\":15069:15084   */\n      revert\n        /* \"#utility.yul\":15096:15290   */\n    tag_199:\n        /* \"#utility.yul\":15136:15140   */\n      0x00\n        /* \"#utility.yul\":15156:15176   */\n      tag_468\n        /* \"#utility.yul\":15174:15175   */\n      dup3\n        /* \"#utility.yul\":15156:15176   */\n      tag_287\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15151:15176   */\n      swap2\n      pop\n        /* \"#utility.yul\":15190:15210   */\n      tag_469\n        /* \"#utility.yul\":15208:15209   */\n      dup4\n        /* \"#utility.yul\":15190:15210   */\n      tag_287\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15185:15210   */\n      swap3\n      pop\n        /* \"#utility.yul\":15234:15235   */\n      dup3\n        /* \"#utility.yul\":15231:15232   */\n      dup3\n        /* \"#utility.yul\":15227:15236   */\n      sub\n        /* \"#utility.yul\":15219:15236   */\n      swap1\n      pop\n        /* \"#utility.yul\":15258:15259   */\n      dup2\n        /* \"#utility.yul\":15252:15256   */\n      dup2\n        /* \"#utility.yul\":15249:15260   */\n      gt\n        /* \"#utility.yul\":15246:15283   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":15263:15281   */\n      tag_471\n      tag_314\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15246:15283   */\n    tag_470:\n        /* \"#utility.yul\":15096:15290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15296:15476   */\n    tag_202:\n        /* \"#utility.yul\":15344:15421   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15341:15342   */\n      0x00\n        /* \"#utility.yul\":15334:15422   */\n      mstore\n        /* \"#utility.yul\":15441:15445   */\n      0x32\n        /* \"#utility.yul\":15438:15439   */\n      0x04\n        /* \"#utility.yul\":15431:15446   */\n      mstore\n        /* \"#utility.yul\":15465:15469   */\n      0x24\n        /* \"#utility.yul\":15462:15463   */\n      0x00\n        /* \"#utility.yul\":15455:15470   */\n      revert\n        /* \"#utility.yul\":15482:15662   */\n    tag_315:\n        /* \"#utility.yul\":15622:15654   */\n      0x496e73756666696369656e742062616c616e636520746f2072656465656d0000\n        /* \"#utility.yul\":15618:15619   */\n      0x00\n        /* \"#utility.yul\":15610:15616   */\n      dup3\n        /* \"#utility.yul\":15606:15620   */\n      add\n        /* \"#utility.yul\":15599:15655   */\n      mstore\n        /* \"#utility.yul\":15482:15662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15668:16034   */\n    tag_316:\n        /* \"#utility.yul\":15810:15813   */\n      0x00\n        /* \"#utility.yul\":15831:15898   */\n      tag_475\n        /* \"#utility.yul\":15895:15897   */\n      0x1e\n        /* \"#utility.yul\":15890:15893   */\n      dup4\n        /* \"#utility.yul\":15831:15898   */\n      tag_276\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15824:15898   */\n      swap2\n      pop\n        /* \"#utility.yul\":15907:16000   */\n      tag_476\n        /* \"#utility.yul\":15996:15999   */\n      dup3\n        /* \"#utility.yul\":15907:16000   */\n      tag_315\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16025:16027   */\n      0x20\n        /* \"#utility.yul\":16020:16023   */\n      dup3\n        /* \"#utility.yul\":16016:16028   */\n      add\n        /* \"#utility.yul\":16009:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":15668:16034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16040:16459   */\n    tag_212:\n        /* \"#utility.yul\":16206:16210   */\n      0x00\n        /* \"#utility.yul\":16244:16246   */\n      0x20\n        /* \"#utility.yul\":16233:16242   */\n      dup3\n        /* \"#utility.yul\":16229:16247   */\n      add\n        /* \"#utility.yul\":16221:16247   */\n      swap1\n      pop\n        /* \"#utility.yul\":16293:16302   */\n      dup2\n        /* \"#utility.yul\":16287:16291   */\n      dup2\n        /* \"#utility.yul\":16283:16303   */\n      sub\n        /* \"#utility.yul\":16279:16280   */\n      0x00\n        /* \"#utility.yul\":16268:16277   */\n      dup4\n        /* \"#utility.yul\":16264:16281   */\n      add\n        /* \"#utility.yul\":16257:16304   */\n      mstore\n        /* \"#utility.yul\":16321:16452   */\n      tag_478\n        /* \"#utility.yul\":16447:16451   */\n      dup2\n        /* \"#utility.yul\":16321:16452   */\n      tag_316\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16313:16452   */\n      swap1\n      pop\n        /* \"#utility.yul\":16040:16459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16465:16645   */\n    tag_317:\n        /* \"#utility.yul\":16513:16590   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16510:16511   */\n      0x00\n        /* \"#utility.yul\":16503:16591   */\n      mstore\n        /* \"#utility.yul\":16610:16614   */\n      0x41\n        /* \"#utility.yul\":16607:16608   */\n      0x04\n        /* \"#utility.yul\":16600:16615   */\n      mstore\n        /* \"#utility.yul\":16634:16638   */\n      0x24\n        /* \"#utility.yul\":16631:16632   */\n      0x00\n        /* \"#utility.yul\":16624:16639   */\n      revert\n        /* \"#utility.yul\":16651:16792   */\n    tag_318:\n        /* \"#utility.yul\":16700:16704   */\n      0x00\n        /* \"#utility.yul\":16723:16726   */\n      dup2\n        /* \"#utility.yul\":16715:16726   */\n      swap1\n      pop\n        /* \"#utility.yul\":16746:16749   */\n      dup2\n        /* \"#utility.yul\":16743:16744   */\n      0x00\n        /* \"#utility.yul\":16736:16750   */\n      mstore\n        /* \"#utility.yul\":16780:16784   */\n      0x20\n        /* \"#utility.yul\":16777:16778   */\n      0x00\n        /* \"#utility.yul\":16767:16785   */\n      keccak256\n        /* \"#utility.yul\":16759:16785   */\n      swap1\n      pop\n        /* \"#utility.yul\":16651:16792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16798:16891   */\n    tag_319:\n        /* \"#utility.yul\":16835:16841   */\n      0x00\n        /* \"#utility.yul\":16882:16884   */\n      0x20\n        /* \"#utility.yul\":16877:16879   */\n      0x1f\n        /* \"#utility.yul\":16870:16875   */\n      dup4\n        /* \"#utility.yul\":16866:16880   */\n      add\n        /* \"#utility.yul\":16862:16885   */\n      div\n        /* \"#utility.yul\":16852:16885   */\n      swap1\n      pop\n        /* \"#utility.yul\":16798:16891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16897:17004   */\n    tag_320:\n        /* \"#utility.yul\":16941:16949   */\n      0x00\n        /* \"#utility.yul\":16991:16996   */\n      dup3\n        /* \"#utility.yul\":16985:16989   */\n      dup3\n        /* \"#utility.yul\":16981:16997   */\n      shl\n        /* \"#utility.yul\":16960:16997   */\n      swap1\n      pop\n        /* \"#utility.yul\":16897:17004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17010:17403   */\n    tag_321:\n        /* \"#utility.yul\":17079:17085   */\n      0x00\n        /* \"#utility.yul\":17129:17130   */\n      0x08\n        /* \"#utility.yul\":17117:17127   */\n      dup4\n        /* \"#utility.yul\":17113:17131   */\n      mul\n        /* \"#utility.yul\":17152:17249   */\n      tag_484\n        /* \"#utility.yul\":17182:17248   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17171:17180   */\n      dup3\n        /* \"#utility.yul\":17152:17249   */\n      tag_320\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17270:17309   */\n      tag_485\n        /* \"#utility.yul\":17300:17308   */\n      dup7\n        /* \"#utility.yul\":17289:17298   */\n      dup4\n        /* \"#utility.yul\":17270:17309   */\n      tag_320\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17258:17309   */\n      swap6\n      pop\n        /* \"#utility.yul\":17342:17346   */\n      dup1\n        /* \"#utility.yul\":17338:17347   */\n      not\n        /* \"#utility.yul\":17331:17336   */\n      dup5\n        /* \"#utility.yul\":17327:17348   */\n      and\n        /* \"#utility.yul\":17318:17348   */\n      swap4\n      pop\n        /* \"#utility.yul\":17391:17395   */\n      dup1\n        /* \"#utility.yul\":17381:17389   */\n      dup7\n        /* \"#utility.yul\":17377:17396   */\n      and\n        /* \"#utility.yul\":17370:17375   */\n      dup5\n        /* \"#utility.yul\":17367:17397   */\n      or\n        /* \"#utility.yul\":17357:17397   */\n      swap3\n      pop\n        /* \"#utility.yul\":17086:17403   */\n      pop\n      pop\n        /* \"#utility.yul\":17010:17403   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17409:17469   */\n    tag_322:\n        /* \"#utility.yul\":17437:17440   */\n      0x00\n        /* \"#utility.yul\":17458:17463   */\n      dup2\n        /* \"#utility.yul\":17451:17463   */\n      swap1\n      pop\n        /* \"#utility.yul\":17409:17469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17475:17617   */\n    tag_323:\n        /* \"#utility.yul\":17525:17534   */\n      0x00\n        /* \"#utility.yul\":17558:17611   */\n      tag_488\n        /* \"#utility.yul\":17576:17610   */\n      tag_489\n        /* \"#utility.yul\":17585:17609   */\n      tag_490\n        /* \"#utility.yul\":17603:17608   */\n      dup5\n        /* \"#utility.yul\":17585:17609   */\n      tag_287\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":17576:17610   */\n      tag_322\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17558:17611   */\n      tag_287\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":17545:17611   */\n      swap1\n      pop\n        /* \"#utility.yul\":17475:17617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17623:17698   */\n    tag_324:\n        /* \"#utility.yul\":17666:17669   */\n      0x00\n        /* \"#utility.yul\":17687:17692   */\n      dup2\n        /* \"#utility.yul\":17680:17692   */\n      swap1\n      pop\n        /* \"#utility.yul\":17623:17698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17704:17973   */\n    tag_325:\n        /* \"#utility.yul\":17814:17853   */\n      tag_493\n        /* \"#utility.yul\":17845:17852   */\n      dup4\n        /* \"#utility.yul\":17814:17853   */\n      tag_323\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":17875:17966   */\n      tag_494\n        /* \"#utility.yul\":17924:17965   */\n      tag_495\n        /* \"#utility.yul\":17948:17964   */\n      dup3\n        /* \"#utility.yul\":17924:17965   */\n      tag_324\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17916:17922   */\n      dup5\n        /* \"#utility.yul\":17909:17913   */\n      dup5\n        /* \"#utility.yul\":17903:17914   */\n      sload\n        /* \"#utility.yul\":17875:17966   */\n      tag_321\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17869:17873   */\n      dup3\n        /* \"#utility.yul\":17862:17967   */\n      sstore\n        /* \"#utility.yul\":17780:17973   */\n      pop\n        /* \"#utility.yul\":17704:17973   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17979:18052   */\n    tag_326:\n        /* \"#utility.yul\":18024:18027   */\n      0x00\n        /* \"#utility.yul\":17979:18052   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18058:18247   */\n    tag_327:\n        /* \"#utility.yul\":18135:18167   */\n      tag_498\n      tag_326\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18176:18241   */\n      tag_499\n        /* \"#utility.yul\":18234:18240   */\n      dup2\n        /* \"#utility.yul\":18226:18232   */\n      dup5\n        /* \"#utility.yul\":18220:18224   */\n      dup5\n        /* \"#utility.yul\":18176:18241   */\n      tag_325\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":18111:18247   */\n      pop\n        /* \"#utility.yul\":18058:18247   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18253:18439   */\n    tag_328:\n        /* \"#utility.yul\":18313:18433   */\n    tag_501:\n        /* \"#utility.yul\":18330:18333   */\n      dup2\n        /* \"#utility.yul\":18323:18328   */\n      dup2\n        /* \"#utility.yul\":18320:18334   */\n      lt\n        /* \"#utility.yul\":18313:18433   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":18384:18423   */\n      tag_504\n        /* \"#utility.yul\":18421:18422   */\n      0x00\n        /* \"#utility.yul\":18414:18419   */\n      dup3\n        /* \"#utility.yul\":18384:18423   */\n      tag_327\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18357:18358   */\n      0x01\n        /* \"#utility.yul\":18350:18355   */\n      dup2\n        /* \"#utility.yul\":18346:18359   */\n      add\n        /* \"#utility.yul\":18337:18359   */\n      swap1\n      pop\n        /* \"#utility.yul\":18313:18433   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":18253:18439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18445:18988   */\n    tag_329:\n        /* \"#utility.yul\":18546:18548   */\n      0x1f\n        /* \"#utility.yul\":18541:18544   */\n      dup3\n        /* \"#utility.yul\":18538:18549   */\n      gt\n        /* \"#utility.yul\":18535:18981   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":18580:18618   */\n      tag_507\n        /* \"#utility.yul\":18612:18617   */\n      dup2\n        /* \"#utility.yul\":18580:18618   */\n      tag_318\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":18664:18693   */\n      tag_508\n        /* \"#utility.yul\":18682:18692   */\n      dup5\n        /* \"#utility.yul\":18664:18693   */\n      tag_319\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":18654:18662   */\n      dup2\n        /* \"#utility.yul\":18650:18694   */\n      add\n        /* \"#utility.yul\":18847:18849   */\n      0x20\n        /* \"#utility.yul\":18835:18845   */\n      dup6\n        /* \"#utility.yul\":18832:18850   */\n      lt\n        /* \"#utility.yul\":18829:18878   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":18868:18876   */\n      dup2\n        /* \"#utility.yul\":18853:18876   */\n      swap1\n      pop\n        /* \"#utility.yul\":18829:18878   */\n    tag_509:\n        /* \"#utility.yul\":18891:18971   */\n      tag_510\n        /* \"#utility.yul\":18947:18969   */\n      tag_511\n        /* \"#utility.yul\":18965:18968   */\n      dup6\n        /* \"#utility.yul\":18947:18969   */\n      tag_319\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18937:18945   */\n      dup4\n        /* \"#utility.yul\":18933:18970   */\n      add\n        /* \"#utility.yul\":18920:18931   */\n      dup3\n        /* \"#utility.yul\":18891:18971   */\n      tag_328\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":18550:18981   */\n      pop\n      pop\n        /* \"#utility.yul\":18535:18981   */\n    tag_506:\n        /* \"#utility.yul\":18445:18988   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18994:19111   */\n    tag_330:\n        /* \"#utility.yul\":19048:19056   */\n      0x00\n        /* \"#utility.yul\":19098:19103   */\n      dup3\n        /* \"#utility.yul\":19092:19096   */\n      dup3\n        /* \"#utility.yul\":19088:19104   */\n      shr\n        /* \"#utility.yul\":19067:19104   */\n      swap1\n      pop\n        /* \"#utility.yul\":18994:19111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19117:19286   */\n    tag_331:\n        /* \"#utility.yul\":19161:19167   */\n      0x00\n        /* \"#utility.yul\":19194:19245   */\n      tag_514\n        /* \"#utility.yul\":19242:19243   */\n      0x00\n        /* \"#utility.yul\":19238:19244   */\n      not\n        /* \"#utility.yul\":19230:19235   */\n      dup5\n        /* \"#utility.yul\":19227:19228   */\n      0x08\n        /* \"#utility.yul\":19223:19236   */\n      mul\n        /* \"#utility.yul\":19194:19245   */\n      tag_330\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":19190:19246   */\n      not\n        /* \"#utility.yul\":19275:19279   */\n      dup1\n        /* \"#utility.yul\":19269:19273   */\n      dup4\n        /* \"#utility.yul\":19265:19280   */\n      and\n        /* \"#utility.yul\":19255:19280   */\n      swap2\n      pop\n        /* \"#utility.yul\":19168:19286   */\n      pop\n        /* \"#utility.yul\":19117:19286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19291:19586   */\n    tag_332:\n        /* \"#utility.yul\":19367:19371   */\n      0x00\n        /* \"#utility.yul\":19513:19542   */\n      tag_516\n        /* \"#utility.yul\":19538:19541   */\n      dup4\n        /* \"#utility.yul\":19532:19536   */\n      dup4\n        /* \"#utility.yul\":19513:19542   */\n      tag_331\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":19505:19542   */\n      swap2\n      pop\n        /* \"#utility.yul\":19575:19578   */\n      dup3\n        /* \"#utility.yul\":19572:19573   */\n      0x02\n        /* \"#utility.yul\":19568:19579   */\n      mul\n        /* \"#utility.yul\":19562:19566   */\n      dup3\n        /* \"#utility.yul\":19559:19580   */\n      or\n        /* \"#utility.yul\":19551:19580   */\n      swap1\n      pop\n        /* \"#utility.yul\":19291:19586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19591:20986   */\n    tag_216:\n        /* \"#utility.yul\":19708:19745   */\n      tag_518\n        /* \"#utility.yul\":19741:19744   */\n      dup3\n        /* \"#utility.yul\":19708:19745   */\n      tag_275\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":19810:19828   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19802:19808   */\n      dup2\n        /* \"#utility.yul\":19799:19829   */\n      gt\n        /* \"#utility.yul\":19796:19852   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":19832:19850   */\n      tag_520\n      tag_317\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":19796:19852   */\n    tag_519:\n        /* \"#utility.yul\":19876:19914   */\n      tag_521\n        /* \"#utility.yul\":19908:19912   */\n      dup3\n        /* \"#utility.yul\":19902:19913   */\n      sload\n        /* \"#utility.yul\":19876:19914   */\n      tag_105\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":19961:20028   */\n      tag_522\n        /* \"#utility.yul\":20021:20027   */\n      dup3\n        /* \"#utility.yul\":20013:20019   */\n      dup3\n        /* \"#utility.yul\":20007:20011   */\n      dup6\n        /* \"#utility.yul\":19961:20028   */\n      tag_329\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":20055:20056   */\n      0x00\n        /* \"#utility.yul\":20079:20083   */\n      0x20\n        /* \"#utility.yul\":20066:20083   */\n      swap1\n      pop\n        /* \"#utility.yul\":20111:20113   */\n      0x1f\n        /* \"#utility.yul\":20103:20109   */\n      dup4\n        /* \"#utility.yul\":20100:20114   */\n      gt\n        /* \"#utility.yul\":20128:20129   */\n      0x01\n        /* \"#utility.yul\":20123:20741   */\n      dup2\n      eq\n      tag_524\n      jumpi\n        /* \"#utility.yul\":20785:20786   */\n      0x00\n        /* \"#utility.yul\":20802:20808   */\n      dup5\n        /* \"#utility.yul\":20799:20876   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":20851:20860   */\n      dup3\n        /* \"#utility.yul\":20846:20849   */\n      dup8\n        /* \"#utility.yul\":20842:20861   */\n      add\n        /* \"#utility.yul\":20836:20862   */\n      mload\n        /* \"#utility.yul\":20827:20862   */\n      swap1\n      pop\n        /* \"#utility.yul\":20799:20876   */\n    tag_525:\n        /* \"#utility.yul\":20902:20969   */\n      tag_526\n        /* \"#utility.yul\":20962:20968   */\n      dup6\n        /* \"#utility.yul\":20955:20960   */\n      dup3\n        /* \"#utility.yul\":20902:20969   */\n      tag_332\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":20896:20900   */\n      dup7\n        /* \"#utility.yul\":20889:20970   */\n      sstore\n        /* \"#utility.yul\":20758:20980   */\n      pop\n        /* \"#utility.yul\":20093:20980   */\n      jump(tag_523)\n        /* \"#utility.yul\":20123:20741   */\n    tag_524:\n        /* \"#utility.yul\":20175:20179   */\n      0x1f\n        /* \"#utility.yul\":20171:20180   */\n      not\n        /* \"#utility.yul\":20163:20169   */\n      dup5\n        /* \"#utility.yul\":20159:20181   */\n      and\n        /* \"#utility.yul\":20209:20246   */\n      tag_527\n        /* \"#utility.yul\":20241:20245   */\n      dup7\n        /* \"#utility.yul\":20209:20246   */\n      tag_318\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20268:20269   */\n      0x00\n        /* \"#utility.yul\":20282:20490   */\n    tag_528:\n        /* \"#utility.yul\":20296:20303   */\n      dup3\n        /* \"#utility.yul\":20293:20294   */\n      dup2\n        /* \"#utility.yul\":20290:20304   */\n      lt\n        /* \"#utility.yul\":20282:20490   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":20375:20384   */\n      dup5\n        /* \"#utility.yul\":20370:20373   */\n      dup10\n        /* \"#utility.yul\":20366:20385   */\n      add\n        /* \"#utility.yul\":20360:20386   */\n      mload\n        /* \"#utility.yul\":20352:20358   */\n      dup3\n        /* \"#utility.yul\":20345:20387   */\n      sstore\n        /* \"#utility.yul\":20426:20427   */\n      0x01\n        /* \"#utility.yul\":20418:20424   */\n      dup3\n        /* \"#utility.yul\":20414:20428   */\n      add\n        /* \"#utility.yul\":20404:20428   */\n      swap2\n      pop\n        /* \"#utility.yul\":20473:20475   */\n      0x20\n        /* \"#utility.yul\":20462:20471   */\n      dup6\n        /* \"#utility.yul\":20458:20476   */\n      add\n        /* \"#utility.yul\":20445:20476   */\n      swap5\n      pop\n        /* \"#utility.yul\":20319:20323   */\n      0x20\n        /* \"#utility.yul\":20316:20317   */\n      dup2\n        /* \"#utility.yul\":20312:20324   */\n      add\n        /* \"#utility.yul\":20307:20324   */\n      swap1\n      pop\n        /* \"#utility.yul\":20282:20490   */\n      jump(tag_528)\n    tag_530:\n        /* \"#utility.yul\":20518:20524   */\n      dup7\n        /* \"#utility.yul\":20509:20516   */\n      dup4\n        /* \"#utility.yul\":20506:20525   */\n      lt\n        /* \"#utility.yul\":20503:20682   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":20576:20585   */\n      dup5\n        /* \"#utility.yul\":20571:20574   */\n      dup10\n        /* \"#utility.yul\":20567:20586   */\n      add\n        /* \"#utility.yul\":20561:20587   */\n      mload\n        /* \"#utility.yul\":20619:20667   */\n      tag_532\n        /* \"#utility.yul\":20661:20665   */\n      0x1f\n        /* \"#utility.yul\":20653:20659   */\n      dup10\n        /* \"#utility.yul\":20649:20666   */\n      and\n        /* \"#utility.yul\":20638:20647   */\n      dup3\n        /* \"#utility.yul\":20619:20667   */\n      tag_331\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":20611:20617   */\n      dup4\n        /* \"#utility.yul\":20604:20668   */\n      sstore\n        /* \"#utility.yul\":20526:20682   */\n      pop\n        /* \"#utility.yul\":20503:20682   */\n    tag_531:\n        /* \"#utility.yul\":20728:20729   */\n      0x01\n        /* \"#utility.yul\":20724:20725   */\n      0x02\n        /* \"#utility.yul\":20716:20722   */\n      dup9\n        /* \"#utility.yul\":20712:20726   */\n      mul\n        /* \"#utility.yul\":20708:20730   */\n      add\n        /* \"#utility.yul\":20702:20706   */\n      dup9\n        /* \"#utility.yul\":20695:20731   */\n      sstore\n        /* \"#utility.yul\":20130:20741   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20093:20980   */\n    tag_523:\n      pop\n        /* \"#utility.yul\":19683:20986   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19591:20986   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20992:21434   */\n    tag_234:\n        /* \"#utility.yul\":21141:21145   */\n      0x00\n        /* \"#utility.yul\":21179:21181   */\n      0x60\n        /* \"#utility.yul\":21168:21177   */\n      dup3\n        /* \"#utility.yul\":21164:21182   */\n      add\n        /* \"#utility.yul\":21156:21182   */\n      swap1\n      pop\n        /* \"#utility.yul\":21192:21263   */\n      tag_534\n        /* \"#utility.yul\":21260:21261   */\n      0x00\n        /* \"#utility.yul\":21249:21258   */\n      dup4\n        /* \"#utility.yul\":21245:21262   */\n      add\n        /* \"#utility.yul\":21236:21242   */\n      dup7\n        /* \"#utility.yul\":21192:21263   */\n      tag_305\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21273:21345   */\n      tag_535\n        /* \"#utility.yul\":21341:21343   */\n      0x20\n        /* \"#utility.yul\":21330:21339   */\n      dup4\n        /* \"#utility.yul\":21326:21344   */\n      add\n        /* \"#utility.yul\":21317:21323   */\n      dup6\n        /* \"#utility.yul\":21273:21345   */\n      tag_292\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21355:21427   */\n      tag_536\n        /* \"#utility.yul\":21423:21425   */\n      0x40\n        /* \"#utility.yul\":21412:21421   */\n      dup4\n        /* \"#utility.yul\":21408:21426   */\n      add\n        /* \"#utility.yul\":21399:21405   */\n      dup5\n        /* \"#utility.yul\":21355:21427   */\n      tag_292\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20992:21434   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21440:21631   */\n    tag_268:\n        /* \"#utility.yul\":21480:21483   */\n      0x00\n        /* \"#utility.yul\":21499:21519   */\n      tag_538\n        /* \"#utility.yul\":21517:21518   */\n      dup3\n        /* \"#utility.yul\":21499:21519   */\n      tag_287\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":21494:21519   */\n      swap2\n      pop\n        /* \"#utility.yul\":21533:21553   */\n      tag_539\n        /* \"#utility.yul\":21551:21552   */\n      dup4\n        /* \"#utility.yul\":21533:21553   */\n      tag_287\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":21528:21553   */\n      swap3\n      pop\n        /* \"#utility.yul\":21576:21577   */\n      dup3\n        /* \"#utility.yul\":21573:21574   */\n      dup3\n        /* \"#utility.yul\":21569:21578   */\n      add\n        /* \"#utility.yul\":21562:21578   */\n      swap1\n      pop\n        /* \"#utility.yul\":21597:21600   */\n      dup1\n        /* \"#utility.yul\":21594:21595   */\n      dup3\n        /* \"#utility.yul\":21591:21601   */\n      gt\n        /* \"#utility.yul\":21588:21624   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":21604:21622   */\n      tag_541\n      tag_314\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":21588:21624   */\n    tag_540:\n        /* \"#utility.yul\":21440:21631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012dd45b060d87a7c8b6de272b2f0623552785e605c0a0f439baaca9db0ad5ccf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1000": {
									"entryPoint": null,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 784,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:7",
										"nodeType": "YulBlock",
										"src": "0:5817:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5279:81:7",
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nativeSrc": "5289:65:7",
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nativeSrc": "5300:54:7",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:7",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:7",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nativeSrc": "5411:51:7",
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nativeSrc": "5421:35:7",
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nativeSrc": "5432:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:7",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:7",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nativeSrc": "5533:53:7",
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nativeSrc": "5555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nativeSrc": "5543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nativeSrc": "5543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:7",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:7",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nativeSrc": "5690:124:7",
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nativeSrc": "5700:26:7",
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nativeSrc": "5708:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nativeSrc": "5789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nativeSrc": "5736:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nativeSrc": "5736:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:7",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:7",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x310 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x456E646C657373204261746C6C65000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656D6F6E2048756E7465722053776F72640000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x96 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57696E6474616C6B657200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xFA DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH2 0x734 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x44E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x40A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4C3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH2 0x4CD DUP7 DUP4 PUSH2 0x488 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x511 PUSH2 0x50C PUSH2 0x507 DUP5 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A DUP4 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x53E PUSH2 0x536 DUP3 PUSH2 0x518 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x494 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x55D DUP2 DUP5 DUP5 PUSH2 0x521 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH2 0x575 PUSH0 DUP3 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x563 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5C5 JUMPI PUSH2 0x596 DUP2 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x59F DUP5 PUSH2 0x479 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5AE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5C2 PUSH2 0x5BA DUP6 PUSH2 0x479 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x562 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5CA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FD DUP4 DUP4 PUSH2 0x5D6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x616 DUP3 PUSH2 0x3D3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x3DD JUMP JUMPDEST JUMPDEST PUSH2 0x639 DUP3 SLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x644 DUP3 DUP3 DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x675 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x663 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x66D DUP6 DUP3 PUSH2 0x5F2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x683 DUP7 PUSH2 0x467 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6AA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x685 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6C7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6C3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5D6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x705 DUP3 PUSH2 0x6DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x715 DUP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x72E PUSH0 DUP4 ADD DUP5 PUSH2 0x70C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x209E DUP1 PUSH2 0x741 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x7A97840D EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8CFFA21C EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x304 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x430074C2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x270 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x470 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x519 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP6 DUP3 DUP6 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x531 DUP6 DUP6 DUP6 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x553 DUP3 DUP3 PUSH2 0xFF4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x602 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x602 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH2 0x623 PUSH2 0x61E PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 PUSH2 0x66F PUSH2 0xDD2 JUMP JUMPDEST DUP3 PUSH2 0x1073 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x6CE PUSH0 PUSH2 0x10F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x7C6 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x72D SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x787 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x900 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x867 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x82D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x940 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96C SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CB PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D8 DUP2 DUP6 DUP6 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9F4 PUSH2 0x9EF PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2C SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3F CALLER DUP3 PUSH2 0x466 JUMP JUMPDEST POP PUSH2 0xA4B CALLER DUP4 DUP4 PUSH2 0x50F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xA64 JUMPI POP PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO JUMPDEST PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP4 PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x1CD2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xAF4 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB20 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB42 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0xB8E CALLER PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDD CALLER DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2748AED474E8B2615B65F003A5FAC4B64D8C9EB9C911DAF175B6103F3802CD4C DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xCC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xF6D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x10F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF6 DUP5 DUP5 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE77 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE76 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF68 DUP4 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF75 PUSH2 0xDD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF93 PUSH2 0x909 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF2 JUMPI PUSH2 0xFB6 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1064 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106F PUSH0 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EE DUP3 PUSH0 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1225 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1295 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x137E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x145D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1533 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15DF DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x15E9 DUP2 DUP6 PUSH2 0x15A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x15F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1602 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1625 DUP2 DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP2 EQ PUSH2 0x1674 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1685 DUP2 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169D DUP2 PUSH2 0x168B JUMP JUMPDEST DUP2 EQ PUSH2 0x16A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B8 DUP2 PUSH2 0x1694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1710 DUP2 PUSH2 0x16FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1729 PUSH0 DUP4 ADD DUP5 PUSH2 0x1707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1738 DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1751 PUSH0 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x177B DUP7 DUP3 DUP8 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x178C DUP7 DUP3 DUP8 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x179D DUP7 DUP3 DUP8 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1819 PUSH0 DUP4 ADD DUP7 PUSH2 0x172F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x182B DUP2 DUP6 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x183A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189F DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18BF DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x18C9 DUP2 DUP6 PUSH2 0x18A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1902 PUSH0 DUP7 ADD DUP3 PUSH2 0x1896 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x191A DUP3 DUP3 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x192F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1896 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1963 DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x196D DUP2 DUP6 PUSH2 0x1877 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x197F DUP6 PUSH2 0x1887 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x19BA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x199B DUP6 DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP5 POP PUSH2 0x19A6 DUP4 PUSH2 0x194D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1982 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 DUP5 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH0 DUP4 ADD DUP5 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A37 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A48 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ABD DUP2 PUSH2 0x1694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD8 JUMPI PUSH2 0x1AD7 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820446567656E20546F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B48 PUSH1 0x23 DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B53 DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20696E73756666696369656E74206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD6 PUSH1 0x25 DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP3 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C03 DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206974656D2049440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3E PUSH1 0xF DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6B DUP2 PUSH2 0x1C32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x168B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x168B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1C72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F2072656465656D0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D33 PUSH1 0x1E DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3E DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D60 DUP2 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1DF0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1DFA DUP7 DUP4 PUSH2 0x1DB5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E35 PUSH2 0x1E30 PUSH2 0x1E2B DUP5 PUSH2 0x168B JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x168B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4E DUP4 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1E62 PUSH2 0x1E5A DUP3 PUSH2 0x1E3C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1DC1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1E81 DUP2 DUP5 DUP5 PUSH2 0x1E45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1E99 PUSH0 DUP3 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1E87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EBA DUP2 PUSH2 0x1D94 JUMP JUMPDEST PUSH2 0x1EC3 DUP5 PUSH2 0x1DA6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1ED2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1EE6 PUSH2 0x1EDE DUP6 PUSH2 0x1DA6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1E86 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F09 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1EEE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F21 DUP4 DUP4 PUSH2 0x1EFA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3A DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST PUSH2 0x1F5D DUP3 SLOAD PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1F68 DUP3 DUP3 DUP6 PUSH2 0x1EA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F99 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1F87 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1F91 DUP6 DUP3 PUSH2 0x1F16 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1FA7 DUP7 PUSH2 0x1D94 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FCE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FA9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1FEB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1FE7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1EFA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH0 DUP4 ADD DUP7 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x2020 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172F JUMP JUMPDEST PUSH2 0x202D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203F DUP3 PUSH2 0x168B JUMP JUMPDEST SWAP2 POP PUSH2 0x204A DUP4 PUSH2 0x168B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x1C72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xDD GASLIMIT 0xB0 PUSH1 0xD8 PUSH27 0x7C8B6DE272B2F0623552785E605C0A0F439BAACA9DB0AD5CCF6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "168:2686:6:-:0;;;530:303;;;;;;;;;;574:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;656:9:6::2;671:34;;;;;;;;680:1;671:34;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;701:3;671:34;;::::0;656:50:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;716:9;731:38;;;;;;;;740:1;731:38;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;765:3;731:38;;::::0;716:54:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;780:9;795:30;;;;;;;;804:1;795:30;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;821:3;795:30;;::::0;780:46:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;168:2686:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;168:2686:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3545,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4533,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4211,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3949,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4084,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3538,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3563,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4338,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3709,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4996,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3276,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1126,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1656,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnTokens_1058": {
									"entryPoint": 1554,
									"id": 1058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1024": {
									"entryPoint": 1341,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@gameItems_952": {
									"entryPoint": 1367,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1036": {
									"entryPoint": 1160,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getGameItems_1163": {
									"entryPoint": 1744,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwnedItems_1176": {
									"entryPoint": 1999,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1015": {
									"entryPoint": 1345,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 982,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2313,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeem_1153": {
									"entryPoint": 2640,
									"id": 1153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1725,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2353,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1286,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1295,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3406,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1089": {
									"entryPoint": 2531,
									"id": 1089,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2497,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21634:7",
										"nodeType": "YulBlock",
										"src": "0:21634:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5255:359:7",
													"nodeType": "YulBlock",
													"src": "5255:359:7",
													"statements": [
														{
															"nativeSrc": "5265:26:7",
															"nodeType": "YulAssignment",
															"src": "5265:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5288:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:7"
																},
																"nativeSrc": "5273:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5273:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5265:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5265:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5345:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5358:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5369:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5369:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5354:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:7"
																		},
																		"nativeSrc": "5354:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5301:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5301:43:7"
																},
																"nativeSrc": "5301:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5301:71:7"
															},
															"nativeSrc": "5301:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5301:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5393:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5404:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5404:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:7"
																		},
																		"nativeSrc": "5389:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5413:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5413:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5409:3:7"
																		},
																		"nativeSrc": "5409:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5409:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5382:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5382:6:7"
																},
																"nativeSrc": "5382:48:7",
																"nodeType": "YulFunctionCall",
																"src": "5382:48:7"
															},
															"nativeSrc": "5382:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "5382:48:7"
														},
														{
															"nativeSrc": "5439:86:7",
															"nodeType": "YulAssignment",
															"src": "5439:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5511:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5520:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5520:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5447:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "5447:63:7"
																},
																"nativeSrc": "5447:78:7",
																"nodeType": "YulFunctionCall",
																"src": "5447:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5439:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5439:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5579:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5579:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5592:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5592:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5603:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5603:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5588:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5588:3:7"
																		},
																		"nativeSrc": "5588:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5588:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5535:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5535:43:7"
																},
																"nativeSrc": "5535:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5535:72:7"
															},
															"nativeSrc": "5535:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5535:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "5081:533:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5211:9:7",
														"nodeType": "YulTypedName",
														"src": "5211:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5223:6:7",
														"nodeType": "YulTypedName",
														"src": "5223:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5231:6:7",
														"nodeType": "YulTypedName",
														"src": "5231:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5239:6:7",
														"nodeType": "YulTypedName",
														"src": "5239:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5250:4:7",
														"nodeType": "YulTypedName",
														"src": "5250:4:7",
														"type": ""
													}
												],
												"src": "5081:533:7"
											},
											{
												"body": {
													"nativeSrc": "5686:263:7",
													"nodeType": "YulBlock",
													"src": "5686:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5732:83:7",
																"nodeType": "YulBlock",
																"src": "5732:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5734:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5734:77:7"
																			},
																			"nativeSrc": "5734:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5734:79:7"
																		},
																		"nativeSrc": "5734:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5707:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5707:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5716:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:7"
																		},
																		"nativeSrc": "5703:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5703:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5728:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5728:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5699:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:7"
																},
																"nativeSrc": "5699:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5699:32:7"
															},
															"nativeSrc": "5696:119:7",
															"nodeType": "YulIf",
															"src": "5696:119:7"
														},
														{
															"nativeSrc": "5825:117:7",
															"nodeType": "YulBlock",
															"src": "5825:117:7",
															"statements": [
																{
																	"nativeSrc": "5840:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5840:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5844:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5844:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5869:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5869:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5904:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5904:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5915:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5915:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5900:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5900:3:7"
																				},
																				"nativeSrc": "5900:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5900:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5924:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5924:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5879:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5879:20:7"
																		},
																		"nativeSrc": "5879:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5869:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5869:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5620:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5656:9:7",
														"nodeType": "YulTypedName",
														"src": "5656:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5667:7:7",
														"nodeType": "YulTypedName",
														"src": "5667:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5679:6:7",
														"nodeType": "YulTypedName",
														"src": "5679:6:7",
														"type": ""
													}
												],
												"src": "5620:329:7"
											},
											{
												"body": {
													"nativeSrc": "6054:40:7",
													"nodeType": "YulBlock",
													"src": "6054:40:7",
													"statements": [
														{
															"nativeSrc": "6065:22:7",
															"nodeType": "YulAssignment",
															"src": "6065:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6081:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6081:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6075:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6075:5:7"
																},
																"nativeSrc": "6075:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6075:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5955:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6037:5:7",
														"nodeType": "YulTypedName",
														"src": "6037:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6047:6:7",
														"nodeType": "YulTypedName",
														"src": "6047:6:7",
														"type": ""
													}
												],
												"src": "5955:139:7"
											},
											{
												"body": {
													"nativeSrc": "6236:73:7",
													"nodeType": "YulBlock",
													"src": "6236:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6253:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6253:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6258:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6258:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:7"
																},
																"nativeSrc": "6246:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6246:19:7"
															},
															"nativeSrc": "6246:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6246:19:7"
														},
														{
															"nativeSrc": "6274:29:7",
															"nodeType": "YulAssignment",
															"src": "6274:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6293:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6293:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6298:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6298:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6289:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6289:3:7"
																},
																"nativeSrc": "6289:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6289:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6274:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6274:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6100:209:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6208:3:7",
														"nodeType": "YulTypedName",
														"src": "6208:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6213:6:7",
														"nodeType": "YulTypedName",
														"src": "6213:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6224:11:7",
														"nodeType": "YulTypedName",
														"src": "6224:11:7",
														"type": ""
													}
												],
												"src": "6100:209:7"
											},
											{
												"body": {
													"nativeSrc": "6412:60:7",
													"nodeType": "YulBlock",
													"src": "6412:60:7",
													"statements": [
														{
															"nativeSrc": "6422:11:7",
															"nodeType": "YulAssignment",
															"src": "6422:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "6430:3:7",
																"nodeType": "YulIdentifier",
																"src": "6430:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6422:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6422:4:7"
																}
															]
														},
														{
															"nativeSrc": "6443:22:7",
															"nodeType": "YulAssignment",
															"src": "6443:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6455:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6455:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6460:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6460:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:7"
																},
																"nativeSrc": "6451:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6451:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6443:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6443:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6315:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6399:3:7",
														"nodeType": "YulTypedName",
														"src": "6399:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6407:4:7",
														"nodeType": "YulTypedName",
														"src": "6407:4:7",
														"type": ""
													}
												],
												"src": "6315:157:7"
											},
											{
												"body": {
													"nativeSrc": "6533:53:7",
													"nodeType": "YulBlock",
													"src": "6533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6555:17:7"
																		},
																		"nativeSrc": "6555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6543:6:7"
																},
																"nativeSrc": "6543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6543:37:7"
															},
															"nativeSrc": "6543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6543:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6478:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6521:5:7",
														"nodeType": "YulTypedName",
														"src": "6521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6528:3:7",
														"nodeType": "YulTypedName",
														"src": "6528:3:7",
														"type": ""
													}
												],
												"src": "6478:108:7"
											},
											{
												"body": {
													"nativeSrc": "6678:73:7",
													"nodeType": "YulBlock",
													"src": "6678:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6695:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6695:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6700:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:7"
																},
																"nativeSrc": "6688:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6688:19:7"
															},
															"nativeSrc": "6688:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6688:19:7"
														},
														{
															"nativeSrc": "6716:29:7",
															"nodeType": "YulAssignment",
															"src": "6716:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6735:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6735:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6740:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6740:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:7"
																},
																"nativeSrc": "6731:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6731:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6716:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6716:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "6592:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6650:3:7",
														"nodeType": "YulTypedName",
														"src": "6650:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6655:6:7",
														"nodeType": "YulTypedName",
														"src": "6655:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6666:11:7",
														"nodeType": "YulTypedName",
														"src": "6666:11:7",
														"type": ""
													}
												],
												"src": "6592:159:7"
											},
											{
												"body": {
													"nativeSrc": "6839:275:7",
													"nodeType": "YulBlock",
													"src": "6839:275:7",
													"statements": [
														{
															"nativeSrc": "6849:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6849:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6896:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6896:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6863:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "6863:32:7"
																},
																"nativeSrc": "6863:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6863:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6853:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6853:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6911:68:7",
															"nodeType": "YulAssignment",
															"src": "6911:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6967:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6967:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6972:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6972:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "6918:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "6918:48:7"
																},
																"nativeSrc": "6918:61:7",
																"nodeType": "YulFunctionCall",
																"src": "6918:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6911:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7027:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7027:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7034:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7034:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7023:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7023:3:7"
																		},
																		"nativeSrc": "7023:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7023:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7041:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7041:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7046:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7046:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6988:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "6988:34:7"
																},
																"nativeSrc": "6988:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6988:65:7"
															},
															"nativeSrc": "6988:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6988:65:7"
														},
														{
															"nativeSrc": "7062:46:7",
															"nodeType": "YulAssignment",
															"src": "7062:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7073:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7073:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7100:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7100:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7078:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "7078:21:7"
																		},
																		"nativeSrc": "7078:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7069:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:7"
																},
																"nativeSrc": "7069:39:7",
																"nodeType": "YulFunctionCall",
																"src": "7069:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7062:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "6757:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6820:5:7",
														"nodeType": "YulTypedName",
														"src": "6820:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6827:3:7",
														"nodeType": "YulTypedName",
														"src": "6827:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6835:3:7",
														"nodeType": "YulTypedName",
														"src": "6835:3:7",
														"type": ""
													}
												],
												"src": "6757:357:7"
											},
											{
												"body": {
													"nativeSrc": "7298:666:7",
													"nodeType": "YulBlock",
													"src": "7298:666:7",
													"statements": [
														{
															"nativeSrc": "7308:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7308:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7324:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7324:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7329:4:7",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7320:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7320:3:7"
																},
																"nativeSrc": "7320:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7320:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7312:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7312:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7344:166:7",
															"nodeType": "YulBlock",
															"src": "7344:166:7",
															"statements": [
																{
																	"nativeSrc": "7381:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7381:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7411:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7411:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7418:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7418:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7407:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7407:3:7"
																				},
																				"nativeSrc": "7407:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7407:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7401:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7401:5:7"
																		},
																		"nativeSrc": "7401:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7401:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7385:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7385:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7471:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7471:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7489:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7489:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7494:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7494:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7485:3:7"
																				},
																				"nativeSrc": "7485:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7485:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7437:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7437:33:7"
																		},
																		"nativeSrc": "7437:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7437:63:7"
																	},
																	"nativeSrc": "7437:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7437:63:7"
																}
															]
														},
														{
															"nativeSrc": "7520:239:7",
															"nodeType": "YulBlock",
															"src": "7520:239:7",
															"statements": [
																{
																	"nativeSrc": "7559:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7559:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7589:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7589:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7596:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7596:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7585:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7585:3:7"
																				},
																				"nativeSrc": "7585:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7585:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7579:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7579:5:7"
																		},
																		"nativeSrc": "7579:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7579:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7563:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7563:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7627:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7627:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7632:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7632:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7623:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7623:3:7"
																				},
																				"nativeSrc": "7623:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7623:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "7643:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7643:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "7649:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7649:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7639:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7639:3:7"
																				},
																				"nativeSrc": "7639:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7639:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "7616:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7616:6:7"
																		},
																		"nativeSrc": "7616:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7616:38:7"
																	},
																	"nativeSrc": "7616:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7616:38:7"
																},
																{
																	"nativeSrc": "7667:81:7",
																	"nodeType": "YulAssignment",
																	"src": "7667:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7729:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7729:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "7743:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7743:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "7675:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "7675:53:7"
																		},
																		"nativeSrc": "7675:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "7667:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "7667:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7769:168:7",
															"nodeType": "YulBlock",
															"src": "7769:168:7",
															"statements": [
																{
																	"nativeSrc": "7808:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7808:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7838:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7838:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7845:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7845:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7834:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7834:3:7"
																				},
																				"nativeSrc": "7834:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7834:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7828:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7828:5:7"
																		},
																		"nativeSrc": "7828:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7828:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7812:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7812:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7898:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7898:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7916:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7916:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7921:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7921:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7912:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7912:3:7"
																				},
																				"nativeSrc": "7912:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7912:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7864:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7864:33:7"
																		},
																		"nativeSrc": "7864:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7864:63:7"
																	},
																	"nativeSrc": "7864:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7864:63:7"
																}
															]
														},
														{
															"nativeSrc": "7947:11:7",
															"nodeType": "YulAssignment",
															"src": "7947:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "7954:4:7",
																"nodeType": "YulIdentifier",
																"src": "7954:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7947:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7947:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr",
												"nativeSrc": "7184:780:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7277:5:7",
														"nodeType": "YulTypedName",
														"src": "7277:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7284:3:7",
														"nodeType": "YulTypedName",
														"src": "7284:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7293:3:7",
														"nodeType": "YulTypedName",
														"src": "7293:3:7",
														"type": ""
													}
												],
												"src": "7184:780:7"
											},
											{
												"body": {
													"nativeSrc": "8100:126:7",
													"nodeType": "YulBlock",
													"src": "8100:126:7",
													"statements": [
														{
															"nativeSrc": "8110:110:7",
															"nodeType": "YulAssignment",
															"src": "8110:110:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8208:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8208:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8216:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8216:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr",
																	"nativeSrc": "8124:83:7",
																	"nodeType": "YulIdentifier",
																	"src": "8124:83:7"
																},
																"nativeSrc": "8124:96:7",
																"nodeType": "YulFunctionCall",
																"src": "8124:96:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8110:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8110:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr",
												"nativeSrc": "7970:256:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8073:6:7",
														"nodeType": "YulTypedName",
														"src": "8073:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8081:3:7",
														"nodeType": "YulTypedName",
														"src": "8081:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8089:10:7",
														"nodeType": "YulTypedName",
														"src": "8089:10:7",
														"type": ""
													}
												],
												"src": "7970:256:7"
											},
											{
												"body": {
													"nativeSrc": "8332:38:7",
													"nodeType": "YulBlock",
													"src": "8332:38:7",
													"statements": [
														{
															"nativeSrc": "8342:22:7",
															"nodeType": "YulAssignment",
															"src": "8342:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8354:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8354:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8359:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8359:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8350:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:7"
																},
																"nativeSrc": "8350:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8350:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8342:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8342:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "8232:138:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8319:3:7",
														"nodeType": "YulTypedName",
														"src": "8319:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8327:4:7",
														"nodeType": "YulTypedName",
														"src": "8327:4:7",
														"type": ""
													}
												],
												"src": "8232:138:7"
											},
											{
												"body": {
													"nativeSrc": "8618:937:7",
													"nodeType": "YulBlock",
													"src": "8618:937:7",
													"statements": [
														{
															"nativeSrc": "8628:93:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8628:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8715:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8715:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8642:72:7",
																	"nodeType": "YulIdentifier",
																	"src": "8642:72:7"
																},
																"nativeSrc": "8642:79:7",
																"nodeType": "YulFunctionCall",
																"src": "8642:79:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8632:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8632:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8730:118:7",
															"nodeType": "YulAssignment",
															"src": "8730:118:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8836:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8836:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8841:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8841:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8737:98:7",
																	"nodeType": "YulIdentifier",
																	"src": "8737:98:7"
																},
																"nativeSrc": "8737:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8737:111:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8730:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:7"
																}
															]
														},
														{
															"nativeSrc": "8857:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8857:20:7",
															"value": {
																"name": "pos",
																"nativeSrc": "8874:3:7",
																"nodeType": "YulIdentifier",
																"src": "8874:3:7"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "8861:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8861:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8886:39:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8886:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8902:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8902:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8911:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8911:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8919:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8919:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8907:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:7"
																		},
																		"nativeSrc": "8907:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8907:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8898:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8898:3:7"
																},
																"nativeSrc": "8898:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8898:27:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "8890:4:7",
																	"nodeType": "YulTypedName",
																	"src": "8890:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8934:96:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8934:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9024:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9024:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8949:74:7",
																	"nodeType": "YulIdentifier",
																	"src": "8949:74:7"
																},
																"nativeSrc": "8949:81:7",
																"nodeType": "YulFunctionCall",
																"src": "8949:81:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8938:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8938:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9039:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9039:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9053:7:7",
																"nodeType": "YulIdentifier",
																"src": "9053:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9043:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9043:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9129:381:7",
																"nodeType": "YulBlock",
																"src": "9129:381:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "9150:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9150:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "9159:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9159:4:7"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "9165:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "9165:9:7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "9155:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9155:3:7"
																					},
																					"nativeSrc": "9155:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9155:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9143:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9143:6:7"
																			},
																			"nativeSrc": "9143:33:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9143:33:7"
																		},
																		"nativeSrc": "9143:33:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9143:33:7"
																	},
																	{
																		"nativeSrc": "9189:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9189:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9216:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9216:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9210:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9210:5:7"
																			},
																			"nativeSrc": "9210:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9210:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9193:13:7",
																				"nodeType": "YulTypedName",
																				"src": "9193:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9236:122:7",
																		"nodeType": "YulAssignment",
																		"src": "9236:122:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9338:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "9338:13:7"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "9353:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9353:4:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr",
																				"nativeSrc": "9244:93:7",
																				"nodeType": "YulIdentifier",
																				"src": "9244:93:7"
																			},
																			"nativeSrc": "9244:114:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9244:114:7"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "9236:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9236:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9371:95:7",
																		"nodeType": "YulAssignment",
																		"src": "9371:95:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9459:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9459:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "9381:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9381:77:7"
																			},
																			"nativeSrc": "9381:85:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9381:85:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9371:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9371:6:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9479:21:7",
																		"nodeType": "YulAssignment",
																		"src": "9479:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "9490:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9490:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9495:4:7",
																					"nodeType": "YulLiteral",
																					"src": "9495:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9486:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9486:3:7"
																			},
																			"nativeSrc": "9486:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9486:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9479:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9479:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9091:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9091:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9094:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9094:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9088:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9088:2:7"
																},
																"nativeSrc": "9088:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9088:13:7"
															},
															"nativeSrc": "9069:441:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9102:18:7",
																"nodeType": "YulBlock",
																"src": "9102:18:7",
																"statements": [
																	{
																		"nativeSrc": "9104:14:7",
																		"nodeType": "YulAssignment",
																		"src": "9104:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9113:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "9113:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9116:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9116:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9109:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9109:3:7"
																			},
																			"nativeSrc": "9109:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9109:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9104:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9104:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9073:14:7",
																"nodeType": "YulBlock",
																"src": "9073:14:7",
																"statements": [
																	{
																		"nativeSrc": "9075:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9075:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9084:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9084:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9079:1:7",
																				"nodeType": "YulTypedName",
																				"src": "9079:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9069:441:7"
														},
														{
															"nativeSrc": "9519:11:7",
															"nodeType": "YulAssignment",
															"src": "9519:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "9526:4:7",
																"nodeType": "YulIdentifier",
																"src": "9526:4:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9519:3:7"
																}
															]
														},
														{
															"nativeSrc": "9539:10:7",
															"nodeType": "YulAssignment",
															"src": "9539:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9546:3:7",
																"nodeType": "YulIdentifier",
																"src": "9546:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8444:1111:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8597:5:7",
														"nodeType": "YulTypedName",
														"src": "8597:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8604:3:7",
														"nodeType": "YulTypedName",
														"src": "8604:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8613:3:7",
														"nodeType": "YulTypedName",
														"src": "8613:3:7",
														"type": ""
													}
												],
												"src": "8444:1111:7"
											},
											{
												"body": {
													"nativeSrc": "9759:275:7",
													"nodeType": "YulBlock",
													"src": "9759:275:7",
													"statements": [
														{
															"nativeSrc": "9769:26:7",
															"nodeType": "YulAssignment",
															"src": "9769:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9781:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9781:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9792:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9792:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9777:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9777:3:7"
																},
																"nativeSrc": "9777:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9777:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9769:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9769:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9816:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9816:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9827:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:7"
																		},
																		"nativeSrc": "9812:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9835:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9835:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9841:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9841:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9831:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:7"
																		},
																		"nativeSrc": "9831:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9831:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9805:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9805:6:7"
																},
																"nativeSrc": "9805:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9805:47:7"
															},
															"nativeSrc": "9805:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9805:47:7"
														},
														{
															"nativeSrc": "9861:166:7",
															"nodeType": "YulAssignment",
															"src": "9861:166:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10013:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10013:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10022:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10022:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9869:143:7",
																	"nodeType": "YulIdentifier",
																	"src": "9869:143:7"
																},
																"nativeSrc": "9869:158:7",
																"nodeType": "YulFunctionCall",
																"src": "9869:158:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9861:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9861:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9561:473:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9731:9:7",
														"nodeType": "YulTypedName",
														"src": "9731:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9743:6:7",
														"nodeType": "YulTypedName",
														"src": "9743:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9754:4:7",
														"nodeType": "YulTypedName",
														"src": "9754:4:7",
														"type": ""
													}
												],
												"src": "9561:473:7"
											},
											{
												"body": {
													"nativeSrc": "10105:53:7",
													"nodeType": "YulBlock",
													"src": "10105:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10122:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10122:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10145:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10145:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10127:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10127:17:7"
																		},
																		"nativeSrc": "10127:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10127:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10115:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:7"
																},
																"nativeSrc": "10115:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10115:37:7"
															},
															"nativeSrc": "10115:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10115:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10040:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10093:5:7",
														"nodeType": "YulTypedName",
														"src": "10093:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10100:3:7",
														"nodeType": "YulTypedName",
														"src": "10100:3:7",
														"type": ""
													}
												],
												"src": "10040:118:7"
											},
											{
												"body": {
													"nativeSrc": "10262:124:7",
													"nodeType": "YulBlock",
													"src": "10262:124:7",
													"statements": [
														{
															"nativeSrc": "10272:26:7",
															"nodeType": "YulAssignment",
															"src": "10272:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10284:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10284:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10295:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10295:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:7"
																},
																"nativeSrc": "10280:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10280:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10272:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10272:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10352:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10352:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10365:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10365:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10376:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10376:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10361:3:7"
																		},
																		"nativeSrc": "10361:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10361:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10308:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10308:43:7"
																},
																"nativeSrc": "10308:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10308:71:7"
															},
															"nativeSrc": "10308:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10308:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10164:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:7",
														"nodeType": "YulTypedName",
														"src": "10234:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10246:6:7",
														"nodeType": "YulTypedName",
														"src": "10246:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10257:4:7",
														"nodeType": "YulTypedName",
														"src": "10257:4:7",
														"type": ""
													}
												],
												"src": "10164:222:7"
											},
											{
												"body": {
													"nativeSrc": "10475:391:7",
													"nodeType": "YulBlock",
													"src": "10475:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10521:83:7",
																"nodeType": "YulBlock",
																"src": "10521:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10523:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10523:77:7"
																			},
																			"nativeSrc": "10523:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10523:79:7"
																		},
																		"nativeSrc": "10523:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10523:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10496:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10496:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10505:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10505:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10492:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10492:3:7"
																		},
																		"nativeSrc": "10492:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10492:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10517:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:7"
																},
																"nativeSrc": "10488:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10488:32:7"
															},
															"nativeSrc": "10485:119:7",
															"nodeType": "YulIf",
															"src": "10485:119:7"
														},
														{
															"nativeSrc": "10614:117:7",
															"nodeType": "YulBlock",
															"src": "10614:117:7",
															"statements": [
																{
																	"nativeSrc": "10629:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10629:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10643:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10643:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10633:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10633:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10658:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10658:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10693:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10693:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10704:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10704:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10689:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10689:3:7"
																				},
																				"nativeSrc": "10689:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10689:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10713:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10713:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10668:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10668:20:7"
																		},
																		"nativeSrc": "10668:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10668:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10658:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10658:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10741:118:7",
															"nodeType": "YulBlock",
															"src": "10741:118:7",
															"statements": [
																{
																	"nativeSrc": "10756:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10756:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10770:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10770:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10760:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10760:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10786:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10786:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10821:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10821:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10832:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10832:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10817:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10817:3:7"
																				},
																				"nativeSrc": "10817:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10817:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10841:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10841:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10796:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10796:20:7"
																		},
																		"nativeSrc": "10796:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10796:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10786:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10786:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10392:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10437:9:7",
														"nodeType": "YulTypedName",
														"src": "10437:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10448:7:7",
														"nodeType": "YulTypedName",
														"src": "10448:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10460:6:7",
														"nodeType": "YulTypedName",
														"src": "10460:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10468:6:7",
														"nodeType": "YulTypedName",
														"src": "10468:6:7",
														"type": ""
													}
												],
												"src": "10392:474:7"
											},
											{
												"body": {
													"nativeSrc": "10900:152:7",
													"nodeType": "YulBlock",
													"src": "10900:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10917:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10917:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10920:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10920:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10910:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:7"
																},
																"nativeSrc": "10910:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10910:88:7"
															},
															"nativeSrc": "10910:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10910:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11014:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11014:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11017:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11017:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11007:6:7"
																},
																"nativeSrc": "11007:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11007:15:7"
															},
															"nativeSrc": "11007:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11007:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11038:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11038:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11041:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11041:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11031:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:7"
																},
																"nativeSrc": "11031:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11031:15:7"
															},
															"nativeSrc": "11031:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11031:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10872:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10872:180:7"
											},
											{
												"body": {
													"nativeSrc": "11109:269:7",
													"nodeType": "YulBlock",
													"src": "11109:269:7",
													"statements": [
														{
															"nativeSrc": "11119:22:7",
															"nodeType": "YulAssignment",
															"src": "11119:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11133:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11133:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11129:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:7"
																},
																"nativeSrc": "11129:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11129:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:7"
																}
															]
														},
														{
															"nativeSrc": "11150:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11150:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11180:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11180:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11186:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11176:3:7"
																},
																"nativeSrc": "11176:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11176:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11154:18:7",
																	"nodeType": "YulTypedName",
																	"src": "11154:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11227:51:7",
																"nodeType": "YulBlock",
																"src": "11227:51:7",
																"statements": [
																	{
																		"nativeSrc": "11241:27:7",
																		"nodeType": "YulAssignment",
																		"src": "11241:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11255:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11255:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11263:4:7",
																					"nodeType": "YulLiteral",
																					"src": "11263:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11251:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11251:3:7"
																			},
																			"nativeSrc": "11251:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11251:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11241:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11241:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11207:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11207:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:7"
																},
																"nativeSrc": "11200:26:7",
																"nodeType": "YulFunctionCall",
																"src": "11200:26:7"
															},
															"nativeSrc": "11197:81:7",
															"nodeType": "YulIf",
															"src": "11197:81:7"
														},
														{
															"body": {
																"nativeSrc": "11330:42:7",
																"nodeType": "YulBlock",
																"src": "11330:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11344:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11344:16:7"
																			},
																			"nativeSrc": "11344:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11344:18:7"
																		},
																		"nativeSrc": "11344:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11344:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11294:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11294:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11317:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11317:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11325:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11325:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11314:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11314:2:7"
																		},
																		"nativeSrc": "11314:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11291:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11291:2:7"
																},
																"nativeSrc": "11291:38:7",
																"nodeType": "YulFunctionCall",
																"src": "11291:38:7"
															},
															"nativeSrc": "11288:84:7",
															"nodeType": "YulIf",
															"src": "11288:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11058:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11093:4:7",
														"nodeType": "YulTypedName",
														"src": "11093:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11102:6:7",
														"nodeType": "YulTypedName",
														"src": "11102:6:7",
														"type": ""
													}
												],
												"src": "11058:320:7"
											},
											{
												"body": {
													"nativeSrc": "11447:80:7",
													"nodeType": "YulBlock",
													"src": "11447:80:7",
													"statements": [
														{
															"nativeSrc": "11457:22:7",
															"nodeType": "YulAssignment",
															"src": "11457:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11472:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11472:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11466:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11466:5:7"
																},
																"nativeSrc": "11466:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11466:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11457:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11457:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11515:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11515:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11488:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "11488:26:7"
																},
																"nativeSrc": "11488:33:7",
																"nodeType": "YulFunctionCall",
																"src": "11488:33:7"
															},
															"nativeSrc": "11488:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "11488:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11384:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11425:6:7",
														"nodeType": "YulTypedName",
														"src": "11425:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11433:3:7",
														"nodeType": "YulTypedName",
														"src": "11433:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11441:5:7",
														"nodeType": "YulTypedName",
														"src": "11441:5:7",
														"type": ""
													}
												],
												"src": "11384:143:7"
											},
											{
												"body": {
													"nativeSrc": "11610:274:7",
													"nodeType": "YulBlock",
													"src": "11610:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11656:83:7",
																"nodeType": "YulBlock",
																"src": "11656:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11658:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11658:77:7"
																			},
																			"nativeSrc": "11658:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11658:79:7"
																		},
																		"nativeSrc": "11658:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11631:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11631:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11640:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11627:3:7"
																		},
																		"nativeSrc": "11627:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11627:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11652:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11652:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11623:3:7"
																},
																"nativeSrc": "11623:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11623:32:7"
															},
															"nativeSrc": "11620:119:7",
															"nodeType": "YulIf",
															"src": "11620:119:7"
														},
														{
															"nativeSrc": "11749:128:7",
															"nodeType": "YulBlock",
															"src": "11749:128:7",
															"statements": [
																{
																	"nativeSrc": "11764:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11764:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11778:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11778:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11768:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11768:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11793:74:7",
																	"nodeType": "YulAssignment",
																	"src": "11793:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11839:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11839:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11850:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11850:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11835:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11835:3:7"
																				},
																				"nativeSrc": "11835:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11835:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11859:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11859:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11803:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "11803:31:7"
																		},
																		"nativeSrc": "11803:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11803:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11793:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11793:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11533:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11580:9:7",
														"nodeType": "YulTypedName",
														"src": "11580:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11591:7:7",
														"nodeType": "YulTypedName",
														"src": "11591:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11603:6:7",
														"nodeType": "YulTypedName",
														"src": "11603:6:7",
														"type": ""
													}
												],
												"src": "11533:351:7"
											},
											{
												"body": {
													"nativeSrc": "11996:116:7",
													"nodeType": "YulBlock",
													"src": "11996:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12018:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12018:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12026:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12026:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12014:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12014:3:7"
																		},
																		"nativeSrc": "12014:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12014:14:7"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206861766520656e6f75676820446567656e20546f6b",
																		"kind": "string",
																		"nativeSrc": "12030:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12030:34:7",
																		"type": "",
																		"value": "You do not have enough Degen Tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12007:6:7"
																},
																"nativeSrc": "12007:58:7",
																"nodeType": "YulFunctionCall",
																"src": "12007:58:7"
															},
															"nativeSrc": "12007:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "12007:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12086:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12086:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12094:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12094:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12082:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12082:3:7"
																		},
																		"nativeSrc": "12082:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12082:15:7"
																	},
																	{
																		"hexValue": "656e73",
																		"kind": "string",
																		"nativeSrc": "12099:5:7",
																		"nodeType": "YulLiteral",
																		"src": "12099:5:7",
																		"type": "",
																		"value": "ens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12075:6:7"
																},
																"nativeSrc": "12075:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12075:30:7"
															},
															"nativeSrc": "12075:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12075:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70",
												"nativeSrc": "11890:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11988:6:7",
														"nodeType": "YulTypedName",
														"src": "11988:6:7",
														"type": ""
													}
												],
												"src": "11890:222:7"
											},
											{
												"body": {
													"nativeSrc": "12264:220:7",
													"nodeType": "YulBlock",
													"src": "12264:220:7",
													"statements": [
														{
															"nativeSrc": "12274:74:7",
															"nodeType": "YulAssignment",
															"src": "12274:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12340:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12345:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12281:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12281:58:7"
																},
																"nativeSrc": "12281:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12281:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12274:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12446:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12446:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70",
																	"nativeSrc": "12357:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12357:88:7"
																},
																"nativeSrc": "12357:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12357:93:7"
															},
															"nativeSrc": "12357:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12357:93:7"
														},
														{
															"nativeSrc": "12459:19:7",
															"nodeType": "YulAssignment",
															"src": "12459:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12470:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12475:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12466:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:7"
																},
																"nativeSrc": "12466:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12466:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12459:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12118:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12252:3:7",
														"nodeType": "YulTypedName",
														"src": "12252:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12260:3:7",
														"nodeType": "YulTypedName",
														"src": "12260:3:7",
														"type": ""
													}
												],
												"src": "12118:366:7"
											},
											{
												"body": {
													"nativeSrc": "12661:248:7",
													"nodeType": "YulBlock",
													"src": "12661:248:7",
													"statements": [
														{
															"nativeSrc": "12671:26:7",
															"nodeType": "YulAssignment",
															"src": "12671:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12683:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12683:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12694:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12694:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12679:3:7"
																},
																"nativeSrc": "12679:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12679:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12671:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12671:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12718:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12718:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12729:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12729:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12714:3:7"
																		},
																		"nativeSrc": "12714:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12714:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12737:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12737:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12743:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12733:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12733:3:7"
																		},
																		"nativeSrc": "12733:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12733:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12707:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:7"
																},
																"nativeSrc": "12707:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12707:47:7"
															},
															"nativeSrc": "12707:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12707:47:7"
														},
														{
															"nativeSrc": "12763:139:7",
															"nodeType": "YulAssignment",
															"src": "12763:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12897:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12897:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12771:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12771:124:7"
																},
																"nativeSrc": "12771:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12771:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12763:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12763:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12490:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12641:9:7",
														"nodeType": "YulTypedName",
														"src": "12641:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12656:4:7",
														"nodeType": "YulTypedName",
														"src": "12656:4:7",
														"type": ""
													}
												],
												"src": "12490:419:7"
											},
											{
												"body": {
													"nativeSrc": "13021:118:7",
													"nodeType": "YulBlock",
													"src": "13021:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13043:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13043:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13051:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13051:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13039:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13039:3:7"
																		},
																		"nativeSrc": "13039:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13039:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20696e73756666696369656e74206261",
																		"kind": "string",
																		"nativeSrc": "13055:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13055:34:7",
																		"type": "",
																		"value": "Transfer failed: insufficient ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13032:6:7"
																},
																"nativeSrc": "13032:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13032:58:7"
															},
															"nativeSrc": "13032:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13032:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13111:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13111:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13119:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13119:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13107:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13107:3:7"
																		},
																		"nativeSrc": "13107:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13107:15:7"
																	},
																	{
																		"hexValue": "6c616e6365",
																		"kind": "string",
																		"nativeSrc": "13124:7:7",
																		"nodeType": "YulLiteral",
																		"src": "13124:7:7",
																		"type": "",
																		"value": "lance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13100:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13100:6:7"
																},
																"nativeSrc": "13100:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13100:32:7"
															},
															"nativeSrc": "13100:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "13100:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
												"nativeSrc": "12915:224:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13013:6:7",
														"nodeType": "YulTypedName",
														"src": "13013:6:7",
														"type": ""
													}
												],
												"src": "12915:224:7"
											},
											{
												"body": {
													"nativeSrc": "13291:220:7",
													"nodeType": "YulBlock",
													"src": "13291:220:7",
													"statements": [
														{
															"nativeSrc": "13301:74:7",
															"nodeType": "YulAssignment",
															"src": "13301:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13367:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13367:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13372:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13372:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13308:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13308:58:7"
																},
																"nativeSrc": "13308:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13308:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13301:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13473:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13473:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																	"nativeSrc": "13384:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13384:88:7"
																},
																"nativeSrc": "13384:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13384:93:7"
															},
															"nativeSrc": "13384:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13384:93:7"
														},
														{
															"nativeSrc": "13486:19:7",
															"nodeType": "YulAssignment",
															"src": "13486:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13497:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13497:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13502:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13502:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13493:3:7"
																},
																"nativeSrc": "13493:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13493:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13486:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13145:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13279:3:7",
														"nodeType": "YulTypedName",
														"src": "13279:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13287:3:7",
														"nodeType": "YulTypedName",
														"src": "13287:3:7",
														"type": ""
													}
												],
												"src": "13145:366:7"
											},
											{
												"body": {
													"nativeSrc": "13688:248:7",
													"nodeType": "YulBlock",
													"src": "13688:248:7",
													"statements": [
														{
															"nativeSrc": "13698:26:7",
															"nodeType": "YulAssignment",
															"src": "13698:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13710:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13710:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13721:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13721:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13706:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13706:3:7"
																},
																"nativeSrc": "13706:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13706:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13698:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13698:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13745:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13756:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13756:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13741:3:7"
																		},
																		"nativeSrc": "13741:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13741:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13764:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13764:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13770:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13770:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13760:3:7"
																		},
																		"nativeSrc": "13760:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13760:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13734:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13734:6:7"
																},
																"nativeSrc": "13734:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13734:47:7"
															},
															"nativeSrc": "13734:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13734:47:7"
														},
														{
															"nativeSrc": "13790:139:7",
															"nodeType": "YulAssignment",
															"src": "13790:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13924:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13924:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13798:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13798:124:7"
																},
																"nativeSrc": "13798:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13798:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13790:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13790:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13517:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13668:9:7",
														"nodeType": "YulTypedName",
														"src": "13668:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13683:4:7",
														"nodeType": "YulTypedName",
														"src": "13683:4:7",
														"type": ""
													}
												],
												"src": "13517:419:7"
											},
											{
												"body": {
													"nativeSrc": "14048:59:7",
													"nodeType": "YulBlock",
													"src": "14048:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14070:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14070:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14078:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14078:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14066:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14066:3:7"
																		},
																		"nativeSrc": "14066:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14066:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964206974656d204944",
																		"kind": "string",
																		"nativeSrc": "14082:17:7",
																		"nodeType": "YulLiteral",
																		"src": "14082:17:7",
																		"type": "",
																		"value": "Invalid item ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14059:6:7"
																},
																"nativeSrc": "14059:41:7",
																"nodeType": "YulFunctionCall",
																"src": "14059:41:7"
															},
															"nativeSrc": "14059:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "14059:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0",
												"nativeSrc": "13942:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14040:6:7",
														"nodeType": "YulTypedName",
														"src": "14040:6:7",
														"type": ""
													}
												],
												"src": "13942:165:7"
											},
											{
												"body": {
													"nativeSrc": "14259:220:7",
													"nodeType": "YulBlock",
													"src": "14259:220:7",
													"statements": [
														{
															"nativeSrc": "14269:74:7",
															"nodeType": "YulAssignment",
															"src": "14269:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14335:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14335:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14340:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14276:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14276:58:7"
																},
																"nativeSrc": "14276:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14276:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14269:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14269:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14441:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14441:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0",
																	"nativeSrc": "14352:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14352:88:7"
																},
																"nativeSrc": "14352:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14352:93:7"
															},
															"nativeSrc": "14352:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14352:93:7"
														},
														{
															"nativeSrc": "14454:19:7",
															"nodeType": "YulAssignment",
															"src": "14454:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14465:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14465:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14470:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14470:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14461:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14461:3:7"
																},
																"nativeSrc": "14461:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14461:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14454:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14454:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14113:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14247:3:7",
														"nodeType": "YulTypedName",
														"src": "14247:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14255:3:7",
														"nodeType": "YulTypedName",
														"src": "14255:3:7",
														"type": ""
													}
												],
												"src": "14113:366:7"
											},
											{
												"body": {
													"nativeSrc": "14656:248:7",
													"nodeType": "YulBlock",
													"src": "14656:248:7",
													"statements": [
														{
															"nativeSrc": "14666:26:7",
															"nodeType": "YulAssignment",
															"src": "14666:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14678:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14678:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14689:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14689:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14674:3:7"
																},
																"nativeSrc": "14674:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14674:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14666:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14666:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14713:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14713:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14724:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14724:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14709:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14709:3:7"
																		},
																		"nativeSrc": "14709:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14709:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14732:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14732:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14738:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14738:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14728:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14728:3:7"
																		},
																		"nativeSrc": "14728:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14728:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14702:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14702:6:7"
																},
																"nativeSrc": "14702:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14702:47:7"
															},
															"nativeSrc": "14702:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14702:47:7"
														},
														{
															"nativeSrc": "14758:139:7",
															"nodeType": "YulAssignment",
															"src": "14758:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14892:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14892:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14766:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14766:124:7"
																},
																"nativeSrc": "14766:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14766:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14758:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14758:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14485:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14636:9:7",
														"nodeType": "YulTypedName",
														"src": "14636:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14651:4:7",
														"nodeType": "YulTypedName",
														"src": "14651:4:7",
														"type": ""
													}
												],
												"src": "14485:419:7"
											},
											{
												"body": {
													"nativeSrc": "14938:152:7",
													"nodeType": "YulBlock",
													"src": "14938:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14955:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14955:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14958:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14958:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14948:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14948:6:7"
																},
																"nativeSrc": "14948:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14948:88:7"
															},
															"nativeSrc": "14948:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14948:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15052:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15052:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15055:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15055:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15045:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15045:6:7"
																},
																"nativeSrc": "15045:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15045:15:7"
															},
															"nativeSrc": "15045:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15045:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15076:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15076:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15079:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15079:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15069:6:7"
																},
																"nativeSrc": "15069:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15069:15:7"
															},
															"nativeSrc": "15069:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15069:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14910:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14910:180:7"
											},
											{
												"body": {
													"nativeSrc": "15141:149:7",
													"nodeType": "YulBlock",
													"src": "15141:149:7",
													"statements": [
														{
															"nativeSrc": "15151:25:7",
															"nodeType": "YulAssignment",
															"src": "15151:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15174:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15174:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15156:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15156:17:7"
																},
																"nativeSrc": "15156:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15156:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15151:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15151:1:7"
																}
															]
														},
														{
															"nativeSrc": "15185:25:7",
															"nodeType": "YulAssignment",
															"src": "15185:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15208:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15208:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15190:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15190:17:7"
																},
																"nativeSrc": "15190:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15190:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15185:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15185:1:7"
																}
															]
														},
														{
															"nativeSrc": "15219:17:7",
															"nodeType": "YulAssignment",
															"src": "15219:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15231:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15231:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15234:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15234:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15227:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15227:3:7"
																},
																"nativeSrc": "15227:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15227:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15219:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15219:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15261:22:7",
																"nodeType": "YulBlock",
																"src": "15261:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15263:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15263:16:7"
																			},
																			"nativeSrc": "15263:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15263:18:7"
																		},
																		"nativeSrc": "15263:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15263:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15252:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15252:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15258:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15258:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15249:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15249:2:7"
																},
																"nativeSrc": "15249:11:7",
																"nodeType": "YulFunctionCall",
																"src": "15249:11:7"
															},
															"nativeSrc": "15246:37:7",
															"nodeType": "YulIf",
															"src": "15246:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15096:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15127:1:7",
														"nodeType": "YulTypedName",
														"src": "15127:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15130:1:7",
														"nodeType": "YulTypedName",
														"src": "15130:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15136:4:7",
														"nodeType": "YulTypedName",
														"src": "15136:4:7",
														"type": ""
													}
												],
												"src": "15096:194:7"
											},
											{
												"body": {
													"nativeSrc": "15324:152:7",
													"nodeType": "YulBlock",
													"src": "15324:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15341:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15344:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15344:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15334:6:7"
																},
																"nativeSrc": "15334:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15334:88:7"
															},
															"nativeSrc": "15334:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15334:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15438:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15438:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15441:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15441:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15431:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15431:6:7"
																},
																"nativeSrc": "15431:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15431:15:7"
															},
															"nativeSrc": "15431:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15431:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15462:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15462:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15465:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15465:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15455:6:7"
																},
																"nativeSrc": "15455:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15455:15:7"
															},
															"nativeSrc": "15455:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15455:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15296:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15296:180:7"
											},
											{
												"body": {
													"nativeSrc": "15588:74:7",
													"nodeType": "YulBlock",
													"src": "15588:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15610:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15610:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15606:3:7"
																		},
																		"nativeSrc": "15606:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15606:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f2072656465656d",
																		"kind": "string",
																		"nativeSrc": "15622:32:7",
																		"nodeType": "YulLiteral",
																		"src": "15622:32:7",
																		"type": "",
																		"value": "Insufficient balance to redeem"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15599:6:7"
																},
																"nativeSrc": "15599:56:7",
																"nodeType": "YulFunctionCall",
																"src": "15599:56:7"
															},
															"nativeSrc": "15599:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "15599:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967",
												"nativeSrc": "15482:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15580:6:7",
														"nodeType": "YulTypedName",
														"src": "15580:6:7",
														"type": ""
													}
												],
												"src": "15482:180:7"
											},
											{
												"body": {
													"nativeSrc": "15814:220:7",
													"nodeType": "YulBlock",
													"src": "15814:220:7",
													"statements": [
														{
															"nativeSrc": "15824:74:7",
															"nodeType": "YulAssignment",
															"src": "15824:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15890:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15890:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15895:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15895:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15831:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15831:58:7"
																},
																"nativeSrc": "15831:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15831:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15824:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15996:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15996:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967",
																	"nativeSrc": "15907:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15907:88:7"
																},
																"nativeSrc": "15907:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15907:93:7"
															},
															"nativeSrc": "15907:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15907:93:7"
														},
														{
															"nativeSrc": "16009:19:7",
															"nodeType": "YulAssignment",
															"src": "16009:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16020:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16020:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16025:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16016:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16016:3:7"
																},
																"nativeSrc": "16016:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16016:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16009:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15668:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15802:3:7",
														"nodeType": "YulTypedName",
														"src": "15802:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15810:3:7",
														"nodeType": "YulTypedName",
														"src": "15810:3:7",
														"type": ""
													}
												],
												"src": "15668:366:7"
											},
											{
												"body": {
													"nativeSrc": "16211:248:7",
													"nodeType": "YulBlock",
													"src": "16211:248:7",
													"statements": [
														{
															"nativeSrc": "16221:26:7",
															"nodeType": "YulAssignment",
															"src": "16221:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16233:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16233:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16244:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16229:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16229:3:7"
																},
																"nativeSrc": "16229:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16229:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16221:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16221:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16268:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16268:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16279:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16279:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16264:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:7"
																		},
																		"nativeSrc": "16264:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16264:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16287:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16287:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16293:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16293:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16283:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16283:3:7"
																		},
																		"nativeSrc": "16283:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16283:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16257:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16257:6:7"
																},
																"nativeSrc": "16257:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16257:47:7"
															},
															"nativeSrc": "16257:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16257:47:7"
														},
														{
															"nativeSrc": "16313:139:7",
															"nodeType": "YulAssignment",
															"src": "16313:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16447:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16447:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16321:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16321:124:7"
																},
																"nativeSrc": "16321:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16321:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16313:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16040:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16191:9:7",
														"nodeType": "YulTypedName",
														"src": "16191:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16206:4:7",
														"nodeType": "YulTypedName",
														"src": "16206:4:7",
														"type": ""
													}
												],
												"src": "16040:419:7"
											},
											{
												"body": {
													"nativeSrc": "16493:152:7",
													"nodeType": "YulBlock",
													"src": "16493:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16510:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16510:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16513:77:7",
																		"nodeType": "YulLiteral",
																		"src": "16513:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16503:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16503:6:7"
																},
																"nativeSrc": "16503:88:7",
																"nodeType": "YulFunctionCall",
																"src": "16503:88:7"
															},
															"nativeSrc": "16503:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "16503:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16607:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16607:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16610:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16610:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:7"
																},
																"nativeSrc": "16600:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16600:15:7"
															},
															"nativeSrc": "16600:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16600:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16631:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16631:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16634:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16634:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16624:6:7"
																},
																"nativeSrc": "16624:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16624:15:7"
															},
															"nativeSrc": "16624:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16624:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "16465:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "16465:180:7"
											},
											{
												"body": {
													"nativeSrc": "16705:87:7",
													"nodeType": "YulBlock",
													"src": "16705:87:7",
													"statements": [
														{
															"nativeSrc": "16715:11:7",
															"nodeType": "YulAssignment",
															"src": "16715:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "16723:3:7",
																"nodeType": "YulIdentifier",
																"src": "16723:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16715:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16715:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16743:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16743:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16746:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16746:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16736:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16736:6:7"
																},
																"nativeSrc": "16736:14:7",
																"nodeType": "YulFunctionCall",
																"src": "16736:14:7"
															},
															"nativeSrc": "16736:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "16736:14:7"
														},
														{
															"nativeSrc": "16759:26:7",
															"nodeType": "YulAssignment",
															"src": "16759:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16777:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16777:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16780:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16780:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16767:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "16767:9:7"
																},
																"nativeSrc": "16767:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16767:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16759:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16759:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16651:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16692:3:7",
														"nodeType": "YulTypedName",
														"src": "16692:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16700:4:7",
														"nodeType": "YulTypedName",
														"src": "16700:4:7",
														"type": ""
													}
												],
												"src": "16651:141:7"
											},
											{
												"body": {
													"nativeSrc": "16842:49:7",
													"nodeType": "YulBlock",
													"src": "16842:49:7",
													"statements": [
														{
															"nativeSrc": "16852:33:7",
															"nodeType": "YulAssignment",
															"src": "16852:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16870:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "16870:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16877:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16877:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16866:3:7"
																		},
																		"nativeSrc": "16866:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16866:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16862:3:7"
																},
																"nativeSrc": "16862:23:7",
																"nodeType": "YulFunctionCall",
																"src": "16862:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16852:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16852:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16798:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16825:5:7",
														"nodeType": "YulTypedName",
														"src": "16825:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16835:6:7",
														"nodeType": "YulTypedName",
														"src": "16835:6:7",
														"type": ""
													}
												],
												"src": "16798:93:7"
											},
											{
												"body": {
													"nativeSrc": "16950:54:7",
													"nodeType": "YulBlock",
													"src": "16950:54:7",
													"statements": [
														{
															"nativeSrc": "16960:37:7",
															"nodeType": "YulAssignment",
															"src": "16960:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16985:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16985:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16991:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16991:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16981:3:7"
																},
																"nativeSrc": "16981:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16981:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16960:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16960:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16897:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16925:4:7",
														"nodeType": "YulTypedName",
														"src": "16925:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16931:5:7",
														"nodeType": "YulTypedName",
														"src": "16931:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16941:8:7",
														"nodeType": "YulTypedName",
														"src": "16941:8:7",
														"type": ""
													}
												],
												"src": "16897:107:7"
											},
											{
												"body": {
													"nativeSrc": "17086:317:7",
													"nodeType": "YulBlock",
													"src": "17086:317:7",
													"statements": [
														{
															"nativeSrc": "17096:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17096:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "17117:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "17117:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17129:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17129:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17113:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17113:3:7"
																},
																"nativeSrc": "17113:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17113:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "17100:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17100:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17140:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17140:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17171:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17171:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17182:66:7",
																		"nodeType": "YulLiteral",
																		"src": "17182:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17152:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17152:18:7"
																},
																"nativeSrc": "17152:97:7",
																"nodeType": "YulFunctionCall",
																"src": "17152:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17144:4:7",
																	"nodeType": "YulTypedName",
																	"src": "17144:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17258:51:7",
															"nodeType": "YulAssignment",
															"src": "17258:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17289:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17289:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "17300:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "17300:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17270:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17270:18:7"
																},
																"nativeSrc": "17270:39:7",
																"nodeType": "YulFunctionCall",
																"src": "17270:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "17258:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "17258:8:7"
																}
															]
														},
														{
															"nativeSrc": "17318:30:7",
															"nodeType": "YulAssignment",
															"src": "17318:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17331:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17331:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "17342:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17342:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17338:3:7"
																		},
																		"nativeSrc": "17338:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17338:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17327:3:7"
																},
																"nativeSrc": "17327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "17327:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17318:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17318:5:7"
																}
															]
														},
														{
															"nativeSrc": "17357:40:7",
															"nodeType": "YulAssignment",
															"src": "17357:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17370:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17370:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17381:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "17381:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17391:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17391:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17377:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17377:3:7"
																		},
																		"nativeSrc": "17377:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17377:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17367:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17367:2:7"
																},
																"nativeSrc": "17367:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17367:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17357:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17357:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "17010:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17047:5:7",
														"nodeType": "YulTypedName",
														"src": "17047:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "17054:10:7",
														"nodeType": "YulTypedName",
														"src": "17054:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "17066:8:7",
														"nodeType": "YulTypedName",
														"src": "17066:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17079:6:7",
														"nodeType": "YulTypedName",
														"src": "17079:6:7",
														"type": ""
													}
												],
												"src": "17010:393:7"
											},
											{
												"body": {
													"nativeSrc": "17441:28:7",
													"nodeType": "YulBlock",
													"src": "17441:28:7",
													"statements": [
														{
															"nativeSrc": "17451:12:7",
															"nodeType": "YulAssignment",
															"src": "17451:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "17458:5:7",
																"nodeType": "YulIdentifier",
																"src": "17458:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17451:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17409:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17427:5:7",
														"nodeType": "YulTypedName",
														"src": "17427:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17437:3:7",
														"nodeType": "YulTypedName",
														"src": "17437:3:7",
														"type": ""
													}
												],
												"src": "17409:60:7"
											},
											{
												"body": {
													"nativeSrc": "17535:82:7",
													"nodeType": "YulBlock",
													"src": "17535:82:7",
													"statements": [
														{
															"nativeSrc": "17545:66:7",
															"nodeType": "YulAssignment",
															"src": "17545:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17603:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "17603:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17585:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "17585:17:7"
																				},
																				"nativeSrc": "17585:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17585:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17576:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "17576:8:7"
																		},
																		"nativeSrc": "17576:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17576:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17558:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17558:17:7"
																},
																"nativeSrc": "17558:53:7",
																"nodeType": "YulFunctionCall",
																"src": "17558:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17545:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "17545:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17475:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17515:5:7",
														"nodeType": "YulTypedName",
														"src": "17515:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17525:9:7",
														"nodeType": "YulTypedName",
														"src": "17525:9:7",
														"type": ""
													}
												],
												"src": "17475:142:7"
											},
											{
												"body": {
													"nativeSrc": "17670:28:7",
													"nodeType": "YulBlock",
													"src": "17670:28:7",
													"statements": [
														{
															"nativeSrc": "17680:12:7",
															"nodeType": "YulAssignment",
															"src": "17680:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "17687:5:7",
																"nodeType": "YulIdentifier",
																"src": "17687:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17680:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17623:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17656:5:7",
														"nodeType": "YulTypedName",
														"src": "17656:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17666:3:7",
														"nodeType": "YulTypedName",
														"src": "17666:3:7",
														"type": ""
													}
												],
												"src": "17623:75:7"
											},
											{
												"body": {
													"nativeSrc": "17780:193:7",
													"nodeType": "YulBlock",
													"src": "17780:193:7",
													"statements": [
														{
															"nativeSrc": "17790:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17790:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17845:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "17845:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17814:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "17814:30:7"
																},
																"nativeSrc": "17814:39:7",
																"nodeType": "YulFunctionCall",
																"src": "17814:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17794:16:7",
																	"nodeType": "YulTypedName",
																	"src": "17794:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17869:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17869:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17909:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "17909:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17903:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "17903:5:7"
																				},
																				"nativeSrc": "17903:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17903:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17916:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17916:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17948:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "17948:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17924:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "17924:23:7"
																				},
																				"nativeSrc": "17924:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17924:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17875:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "17875:27:7"
																		},
																		"nativeSrc": "17875:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17875:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17862:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17862:6:7"
																},
																"nativeSrc": "17862:105:7",
																"nodeType": "YulFunctionCall",
																"src": "17862:105:7"
															},
															"nativeSrc": "17862:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "17862:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17704:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17757:4:7",
														"nodeType": "YulTypedName",
														"src": "17757:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17763:6:7",
														"nodeType": "YulTypedName",
														"src": "17763:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17771:7:7",
														"nodeType": "YulTypedName",
														"src": "17771:7:7",
														"type": ""
													}
												],
												"src": "17704:269:7"
											},
											{
												"body": {
													"nativeSrc": "18028:24:7",
													"nodeType": "YulBlock",
													"src": "18028:24:7",
													"statements": [
														{
															"nativeSrc": "18038:8:7",
															"nodeType": "YulAssignment",
															"src": "18038:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18045:1:7",
																"nodeType": "YulLiteral",
																"src": "18045:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18038:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18038:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17979:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18024:3:7",
														"nodeType": "YulTypedName",
														"src": "18024:3:7",
														"type": ""
													}
												],
												"src": "17979:73:7"
											},
											{
												"body": {
													"nativeSrc": "18111:136:7",
													"nodeType": "YulBlock",
													"src": "18111:136:7",
													"statements": [
														{
															"nativeSrc": "18121:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18121:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "18135:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "18135:30:7"
																},
																"nativeSrc": "18135:32:7",
																"nodeType": "YulFunctionCall",
																"src": "18135:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "18125:6:7",
																	"nodeType": "YulTypedName",
																	"src": "18125:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18220:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18220:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18226:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18226:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "18234:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18234:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "18176:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18176:43:7"
																},
																"nativeSrc": "18176:65:7",
																"nodeType": "YulFunctionCall",
																"src": "18176:65:7"
															},
															"nativeSrc": "18176:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "18176:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "18058:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18097:4:7",
														"nodeType": "YulTypedName",
														"src": "18097:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "18103:6:7",
														"nodeType": "YulTypedName",
														"src": "18103:6:7",
														"type": ""
													}
												],
												"src": "18058:189:7"
											},
											{
												"body": {
													"nativeSrc": "18303:136:7",
													"nodeType": "YulBlock",
													"src": "18303:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "18370:63:7",
																"nodeType": "YulBlock",
																"src": "18370:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18414:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "18414:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18421:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18421:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18384:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "18384:29:7"
																			},
																			"nativeSrc": "18384:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18384:39:7"
																		},
																		"nativeSrc": "18384:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18384:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18323:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18323:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18330:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18330:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18320:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18320:2:7"
																},
																"nativeSrc": "18320:14:7",
																"nodeType": "YulFunctionCall",
																"src": "18320:14:7"
															},
															"nativeSrc": "18313:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18335:26:7",
																"nodeType": "YulBlock",
																"src": "18335:26:7",
																"statements": [
																	{
																		"nativeSrc": "18337:22:7",
																		"nodeType": "YulAssignment",
																		"src": "18337:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18350:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "18350:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18357:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18357:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18346:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18346:3:7"
																			},
																			"nativeSrc": "18346:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18346:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18337:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "18337:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18317:2:7",
																"nodeType": "YulBlock",
																"src": "18317:2:7",
																"statements": []
															},
															"src": "18313:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "18253:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18291:5:7",
														"nodeType": "YulTypedName",
														"src": "18291:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18298:3:7",
														"nodeType": "YulTypedName",
														"src": "18298:3:7",
														"type": ""
													}
												],
												"src": "18253:186:7"
											},
											{
												"body": {
													"nativeSrc": "18524:464:7",
													"nodeType": "YulBlock",
													"src": "18524:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "18550:431:7",
																"nodeType": "YulBlock",
																"src": "18550:431:7",
																"statements": [
																	{
																		"nativeSrc": "18564:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18564:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18612:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "18612:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18580:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "18580:31:7"
																			},
																			"nativeSrc": "18580:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18580:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18568:8:7",
																				"nodeType": "YulTypedName",
																				"src": "18568:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18631:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18631:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18654:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "18654:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18682:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "18682:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18664:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "18664:17:7"
																					},
																					"nativeSrc": "18664:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18664:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18650:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18650:3:7"
																			},
																			"nativeSrc": "18650:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18650:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18635:11:7",
																				"nodeType": "YulTypedName",
																				"src": "18635:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18851:27:7",
																			"nodeType": "YulBlock",
																			"src": "18851:27:7",
																			"statements": [
																				{
																					"nativeSrc": "18853:23:7",
																					"nodeType": "YulAssignment",
																					"src": "18853:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18868:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "18868:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18853:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "18853:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18835:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "18835:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18847:2:7",
																					"nodeType": "YulLiteral",
																					"src": "18847:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18832:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "18832:2:7"
																			},
																			"nativeSrc": "18832:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18832:18:7"
																		},
																		"nativeSrc": "18829:49:7",
																		"nodeType": "YulIf",
																		"src": "18829:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18920:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "18920:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18937:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "18937:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18965:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18965:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18947:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "18947:17:7"
																							},
																							"nativeSrc": "18947:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18947:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18933:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "18933:3:7"
																					},
																					"nativeSrc": "18933:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18933:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18891:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "18891:28:7"
																			},
																			"nativeSrc": "18891:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18891:80:7"
																		},
																		"nativeSrc": "18891:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18891:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18541:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18541:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18546:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18546:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18538:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18538:2:7"
																},
																"nativeSrc": "18538:11:7",
																"nodeType": "YulFunctionCall",
																"src": "18538:11:7"
															},
															"nativeSrc": "18535:446:7",
															"nodeType": "YulIf",
															"src": "18535:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18445:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18500:5:7",
														"nodeType": "YulTypedName",
														"src": "18500:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18507:3:7",
														"nodeType": "YulTypedName",
														"src": "18507:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18512:10:7",
														"nodeType": "YulTypedName",
														"src": "18512:10:7",
														"type": ""
													}
												],
												"src": "18445:543:7"
											},
											{
												"body": {
													"nativeSrc": "19057:54:7",
													"nodeType": "YulBlock",
													"src": "19057:54:7",
													"statements": [
														{
															"nativeSrc": "19067:37:7",
															"nodeType": "YulAssignment",
															"src": "19067:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19092:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19092:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19098:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19098:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19088:3:7"
																},
																"nativeSrc": "19088:16:7",
																"nodeType": "YulFunctionCall",
																"src": "19088:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19067:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "19067:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18994:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19032:4:7",
														"nodeType": "YulTypedName",
														"src": "19032:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19038:5:7",
														"nodeType": "YulTypedName",
														"src": "19038:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19048:8:7",
														"nodeType": "YulTypedName",
														"src": "19048:8:7",
														"type": ""
													}
												],
												"src": "18994:117:7"
											},
											{
												"body": {
													"nativeSrc": "19168:118:7",
													"nodeType": "YulBlock",
													"src": "19168:118:7",
													"statements": [
														{
															"nativeSrc": "19178:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19178:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19227:1:7",
																						"nodeType": "YulLiteral",
																						"src": "19227:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "19230:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19230:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "19223:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19223:3:7"
																				},
																				"nativeSrc": "19223:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19223:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19242:1:7",
																						"nodeType": "YulLiteral",
																						"src": "19242:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19238:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19238:3:7"
																				},
																				"nativeSrc": "19238:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19238:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "19194:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "19194:28:7"
																		},
																		"nativeSrc": "19194:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19194:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "19190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19190:3:7"
																},
																"nativeSrc": "19190:56:7",
																"nodeType": "YulFunctionCall",
																"src": "19190:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19182:4:7",
																	"nodeType": "YulTypedName",
																	"src": "19182:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19255:25:7",
															"nodeType": "YulAssignment",
															"src": "19255:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19269:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19269:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "19275:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19275:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19265:3:7"
																},
																"nativeSrc": "19265:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19265:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19255:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19255:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "19117:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19145:4:7",
														"nodeType": "YulTypedName",
														"src": "19145:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "19151:5:7",
														"nodeType": "YulTypedName",
														"src": "19151:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19161:6:7",
														"nodeType": "YulTypedName",
														"src": "19161:6:7",
														"type": ""
													}
												],
												"src": "19117:169:7"
											},
											{
												"body": {
													"nativeSrc": "19372:214:7",
													"nodeType": "YulBlock",
													"src": "19372:214:7",
													"statements": [
														{
															"nativeSrc": "19505:37:7",
															"nodeType": "YulAssignment",
															"src": "19505:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19532:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19532:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19538:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19538:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19513:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "19513:18:7"
																},
																"nativeSrc": "19513:29:7",
																"nodeType": "YulFunctionCall",
																"src": "19513:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19505:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19505:4:7"
																}
															]
														},
														{
															"nativeSrc": "19551:29:7",
															"nodeType": "YulAssignment",
															"src": "19551:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19562:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19562:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19572:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19572:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19575:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19575:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19568:3:7"
																		},
																		"nativeSrc": "19568:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19568:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19559:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19559:2:7"
																},
																"nativeSrc": "19559:21:7",
																"nodeType": "YulFunctionCall",
																"src": "19559:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19551:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19551:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19291:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19353:4:7",
														"nodeType": "YulTypedName",
														"src": "19353:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19359:3:7",
														"nodeType": "YulTypedName",
														"src": "19359:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19367:4:7",
														"nodeType": "YulTypedName",
														"src": "19367:4:7",
														"type": ""
													}
												],
												"src": "19291:295:7"
											},
											{
												"body": {
													"nativeSrc": "19683:1303:7",
													"nodeType": "YulBlock",
													"src": "19683:1303:7",
													"statements": [
														{
															"nativeSrc": "19694:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19694:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19741:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19708:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "19708:32:7"
																},
																"nativeSrc": "19708:37:7",
																"nodeType": "YulFunctionCall",
																"src": "19708:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19698:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19698:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19830:22:7",
																"nodeType": "YulBlock",
																"src": "19830:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19832:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "19832:16:7"
																			},
																			"nativeSrc": "19832:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19832:18:7"
																		},
																		"nativeSrc": "19832:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19832:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19802:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19802:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19810:18:7",
																		"nodeType": "YulLiteral",
																		"src": "19810:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19799:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19799:2:7"
																},
																"nativeSrc": "19799:30:7",
																"nodeType": "YulFunctionCall",
																"src": "19799:30:7"
															},
															"nativeSrc": "19796:56:7",
															"nodeType": "YulIf",
															"src": "19796:56:7"
														},
														{
															"nativeSrc": "19862:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19862:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19908:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19908:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19902:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "19902:5:7"
																		},
																		"nativeSrc": "19902:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19902:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19876:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "19876:25:7"
																},
																"nativeSrc": "19876:38:7",
																"nodeType": "YulFunctionCall",
																"src": "19876:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19866:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19866:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20007:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20007:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "20013:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20013:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "20021:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20021:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19961:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "19961:45:7"
																},
																"nativeSrc": "19961:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19961:67:7"
															},
															"nativeSrc": "19961:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "19961:67:7"
														},
														{
															"nativeSrc": "20038:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20038:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20055:1:7",
																"nodeType": "YulLiteral",
																"src": "20055:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20042:9:7",
																	"nodeType": "YulTypedName",
																	"src": "20042:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20066:17:7",
															"nodeType": "YulAssignment",
															"src": "20066:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20079:4:7",
																"nodeType": "YulLiteral",
																"src": "20079:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20066:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "20066:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20130:611:7",
																		"nodeType": "YulBlock",
																		"src": "20130:611:7",
																		"statements": [
																			{
																				"nativeSrc": "20144:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20144:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "20163:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "20163:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "20175:4:7",
																									"nodeType": "YulLiteral",
																									"src": "20175:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "20171:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "20171:3:7"
																							},
																							"nativeSrc": "20171:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20171:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "20159:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "20159:3:7"
																					},
																					"nativeSrc": "20159:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20159:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "20148:7:7",
																						"nodeType": "YulTypedName",
																						"src": "20148:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20195:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20195:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20241:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20241:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20209:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "20209:31:7"
																					},
																					"nativeSrc": "20209:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20209:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "20199:6:7",
																						"nodeType": "YulTypedName",
																						"src": "20199:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20259:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20259:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20263:1:7",
																						"nodeType": "YulTypedName",
																						"src": "20263:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20327:163:7",
																					"nodeType": "YulBlock",
																					"src": "20327:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20352:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "20352:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20370:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "20370:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20375:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "20375:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20366:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "20366:3:7"
																												},
																												"nativeSrc": "20366:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "20366:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20360:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "20360:5:7"
																										},
																										"nativeSrc": "20360:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20360:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20345:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20345:6:7"
																								},
																								"nativeSrc": "20345:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20345:42:7"
																							},
																							"nativeSrc": "20345:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "20345:42:7"
																						},
																						{
																							"nativeSrc": "20404:24:7",
																							"nodeType": "YulAssignment",
																							"src": "20404:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20418:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "20418:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20426:1:7",
																										"nodeType": "YulLiteral",
																										"src": "20426:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20414:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "20414:3:7"
																								},
																								"nativeSrc": "20414:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20414:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20404:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20404:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20445:31:7",
																							"nodeType": "YulAssignment",
																							"src": "20445:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20462:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "20462:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20473:2:7",
																										"nodeType": "YulLiteral",
																										"src": "20473:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20458:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "20458:3:7"
																								},
																								"nativeSrc": "20458:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20458:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20445:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "20445:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20293:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "20293:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20296:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "20296:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20290:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "20290:2:7"
																					},
																					"nativeSrc": "20290:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20290:14:7"
																				},
																				"nativeSrc": "20282:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20305:21:7",
																					"nodeType": "YulBlock",
																					"src": "20305:21:7",
																					"statements": [
																						{
																							"nativeSrc": "20307:17:7",
																							"nodeType": "YulAssignment",
																							"src": "20307:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20316:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "20316:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20319:4:7",
																										"nodeType": "YulLiteral",
																										"src": "20319:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20312:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "20312:3:7"
																								},
																								"nativeSrc": "20312:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20312:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20307:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "20307:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20286:3:7",
																					"nodeType": "YulBlock",
																					"src": "20286:3:7",
																					"statements": []
																				},
																				"src": "20282:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "20526:156:7",
																					"nodeType": "YulBlock",
																					"src": "20526:156:7",
																					"statements": [
																						{
																							"nativeSrc": "20544:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20544:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20571:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "20571:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20576:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "20576:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20567:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "20567:3:7"
																										},
																										"nativeSrc": "20567:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20567:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20561:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20561:5:7"
																								},
																								"nativeSrc": "20561:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20561:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20548:9:7",
																									"nodeType": "YulTypedName",
																									"src": "20548:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20611:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "20611:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20638:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "20638:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20653:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "20653:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20661:4:7",
																														"nodeType": "YulLiteral",
																														"src": "20661:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20649:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "20649:3:7"
																												},
																												"nativeSrc": "20649:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "20649:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20619:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "20619:18:7"
																										},
																										"nativeSrc": "20619:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20619:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20604:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20604:6:7"
																								},
																								"nativeSrc": "20604:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20604:64:7"
																							},
																							"nativeSrc": "20604:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "20604:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20509:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "20509:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20518:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "20518:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20506:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "20506:2:7"
																					},
																					"nativeSrc": "20506:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20506:19:7"
																				},
																				"nativeSrc": "20503:179:7",
																				"nodeType": "YulIf",
																				"src": "20503:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20702:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20702:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20716:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "20716:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20724:1:7",
																											"nodeType": "YulLiteral",
																											"src": "20724:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20712:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "20712:3:7"
																									},
																									"nativeSrc": "20712:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "20712:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20728:1:7",
																									"nodeType": "YulLiteral",
																									"src": "20728:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20708:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "20708:3:7"
																							},
																							"nativeSrc": "20708:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20708:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20695:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20695:6:7"
																					},
																					"nativeSrc": "20695:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20695:36:7"
																				},
																				"nativeSrc": "20695:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "20695:36:7"
																			}
																		]
																	},
																	"nativeSrc": "20123:618:7",
																	"nodeType": "YulCase",
																	"src": "20123:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20128:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20128:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20758:222:7",
																		"nodeType": "YulBlock",
																		"src": "20758:222:7",
																		"statements": [
																			{
																				"nativeSrc": "20772:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20772:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20785:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20785:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20776:5:7",
																						"nodeType": "YulTypedName",
																						"src": "20776:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20809:67:7",
																					"nodeType": "YulBlock",
																					"src": "20809:67:7",
																					"statements": [
																						{
																							"nativeSrc": "20827:35:7",
																							"nodeType": "YulAssignment",
																							"src": "20827:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20846:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "20846:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20851:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "20851:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20842:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "20842:3:7"
																										},
																										"nativeSrc": "20842:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20842:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20836:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20836:5:7"
																								},
																								"nativeSrc": "20836:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20836:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20827:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20827:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20802:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "20802:6:7"
																				},
																				"nativeSrc": "20799:77:7",
																				"nodeType": "YulIf",
																				"src": "20799:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20896:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20896:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20955:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20955:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20962:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20962:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20902:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "20902:52:7"
																							},
																							"nativeSrc": "20902:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20902:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20889:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20889:6:7"
																					},
																					"nativeSrc": "20889:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20889:81:7"
																				},
																				"nativeSrc": "20889:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "20889:81:7"
																			}
																		]
																	},
																	"nativeSrc": "20750:230:7",
																	"nodeType": "YulCase",
																	"src": "20750:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20103:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20111:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20111:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20100:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20100:2:7"
																},
																"nativeSrc": "20100:14:7",
																"nodeType": "YulFunctionCall",
																"src": "20100:14:7"
															},
															"nativeSrc": "20093:887:7",
															"nodeType": "YulSwitch",
															"src": "20093:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19591:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19672:4:7",
														"nodeType": "YulTypedName",
														"src": "19672:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19678:3:7",
														"nodeType": "YulTypedName",
														"src": "19678:3:7",
														"type": ""
													}
												],
												"src": "19591:1395:7"
											},
											{
												"body": {
													"nativeSrc": "21146:288:7",
													"nodeType": "YulBlock",
													"src": "21146:288:7",
													"statements": [
														{
															"nativeSrc": "21156:26:7",
															"nodeType": "YulAssignment",
															"src": "21156:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21168:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21168:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21179:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21164:3:7"
																},
																"nativeSrc": "21164:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21164:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21156:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21156:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21236:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21236:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21249:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21249:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21260:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21260:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21245:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21245:3:7"
																		},
																		"nativeSrc": "21245:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21245:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21192:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "21192:43:7"
																},
																"nativeSrc": "21192:71:7",
																"nodeType": "YulFunctionCall",
																"src": "21192:71:7"
															},
															"nativeSrc": "21192:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "21192:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21317:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21317:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21330:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21330:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21341:2:7",
																				"nodeType": "YulLiteral",
																				"src": "21341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21326:3:7"
																		},
																		"nativeSrc": "21326:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21273:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "21273:43:7"
																},
																"nativeSrc": "21273:72:7",
																"nodeType": "YulFunctionCall",
																"src": "21273:72:7"
															},
															"nativeSrc": "21273:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "21273:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21399:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21412:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21423:2:7",
																				"nodeType": "YulLiteral",
																				"src": "21423:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21408:3:7"
																		},
																		"nativeSrc": "21408:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21408:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21355:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "21355:43:7"
																},
																"nativeSrc": "21355:72:7",
																"nodeType": "YulFunctionCall",
																"src": "21355:72:7"
															},
															"nativeSrc": "21355:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "21355:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20992:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21102:9:7",
														"nodeType": "YulTypedName",
														"src": "21102:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21114:6:7",
														"nodeType": "YulTypedName",
														"src": "21114:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21122:6:7",
														"nodeType": "YulTypedName",
														"src": "21122:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21130:6:7",
														"nodeType": "YulTypedName",
														"src": "21130:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21141:4:7",
														"nodeType": "YulTypedName",
														"src": "21141:4:7",
														"type": ""
													}
												],
												"src": "20992:442:7"
											},
											{
												"body": {
													"nativeSrc": "21484:147:7",
													"nodeType": "YulBlock",
													"src": "21484:147:7",
													"statements": [
														{
															"nativeSrc": "21494:25:7",
															"nodeType": "YulAssignment",
															"src": "21494:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21517:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21517:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21499:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21499:17:7"
																},
																"nativeSrc": "21499:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21499:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21494:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21494:1:7"
																}
															]
														},
														{
															"nativeSrc": "21528:25:7",
															"nodeType": "YulAssignment",
															"src": "21528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21551:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21533:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21533:17:7"
																},
																"nativeSrc": "21533:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21533:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21528:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21528:1:7"
																}
															]
														},
														{
															"nativeSrc": "21562:16:7",
															"nodeType": "YulAssignment",
															"src": "21562:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21573:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21573:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21576:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21576:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21569:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21569:3:7"
																},
																"nativeSrc": "21569:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21569:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21562:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21602:22:7",
																"nodeType": "YulBlock",
																"src": "21602:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21604:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21604:16:7"
																			},
																			"nativeSrc": "21604:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21604:18:7"
																		},
																		"nativeSrc": "21604:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21604:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21594:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21594:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21597:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21597:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21591:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21591:2:7"
																},
																"nativeSrc": "21591:10:7",
																"nodeType": "YulFunctionCall",
																"src": "21591:10:7"
															},
															"nativeSrc": "21588:36:7",
															"nodeType": "YulIf",
															"src": "21588:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21440:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21471:1:7",
														"nodeType": "YulTypedName",
														"src": "21471:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21474:1:7",
														"nodeType": "YulTypedName",
														"src": "21474:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21480:3:7",
														"nodeType": "YulTypedName",
														"src": "21480:3:7",
														"type": ""
													}
												],
												"src": "21440:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct DegenToken.GameItem -> struct DegenToken.GameItem\n    function abi_encode_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // itemId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // itemName\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // itemCost\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DegenToken.GameItem[] -> struct DegenToken.GameItem[]\n    function abi_encode_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_GameItem_$948_memory_ptr_to_t_struct$_GameItem_$948_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough Degen Tok\")\n\n        mstore(add(memPtr, 32), \"ens\")\n\n    }\n\n    function abi_encode_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: insufficient ba\")\n\n        mstore(add(memPtr, 32), \"lance\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid item ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to redeem\")\n\n    }\n\n    function abi_encode_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x7A97840D EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8CFFA21C EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x304 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x430074C2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x270 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x470 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x519 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP6 DUP3 DUP6 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x531 DUP6 DUP6 DUP6 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x553 DUP3 DUP3 PUSH2 0xFF4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B7 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x602 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x602 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH2 0x623 PUSH2 0x61E PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 PUSH2 0x66F PUSH2 0xDD2 JUMP JUMPDEST DUP3 PUSH2 0x1073 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x6CE PUSH0 PUSH2 0x10F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x7C6 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x72D SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x787 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x900 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x867 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x82D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x940 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96C SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CB PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D8 DUP2 DUP6 DUP6 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9F4 PUSH2 0x9EF PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2C SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3F CALLER DUP3 PUSH2 0x466 JUMP JUMPDEST POP PUSH2 0xA4B CALLER DUP4 DUP4 PUSH2 0x50F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xA64 JUMPI POP PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO JUMPDEST PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP4 PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x1CD2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xAF4 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB20 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB42 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0xB8E CALLER PUSH2 0x678 JUMP JUMPDEST LT ISZERO PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDD CALLER DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2748AED474E8B2615B65F003A5FAC4B64D8C9EB9C911DAF175B6103F3802CD4C DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xCC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xF6D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x10F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF6 DUP5 DUP5 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE77 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE76 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF68 DUP4 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF75 PUSH2 0xDD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF93 PUSH2 0x909 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF2 JUMPI PUSH2 0xFB6 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1064 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106F PUSH0 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EE DUP3 PUSH0 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1225 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1295 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x137E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x145D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1533 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15DF DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x15E9 DUP2 DUP6 PUSH2 0x15A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x15F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1602 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1625 DUP2 DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP2 EQ PUSH2 0x1674 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1685 DUP2 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169D DUP2 PUSH2 0x168B JUMP JUMPDEST DUP2 EQ PUSH2 0x16A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B8 DUP2 PUSH2 0x1694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1710 DUP2 PUSH2 0x16FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1729 PUSH0 DUP4 ADD DUP5 PUSH2 0x1707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1738 DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1751 PUSH0 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x177B DUP7 DUP3 DUP8 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x178C DUP7 DUP3 DUP8 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x179D DUP7 DUP3 DUP8 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1819 PUSH0 DUP4 ADD DUP7 PUSH2 0x172F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x182B DUP2 DUP6 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x183A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189F DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18BF DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x18C9 DUP2 DUP6 PUSH2 0x18A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1902 PUSH0 DUP7 ADD DUP3 PUSH2 0x1896 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x191A DUP3 DUP3 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x192F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1896 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1963 DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x196D DUP2 DUP6 PUSH2 0x1877 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x197F DUP6 PUSH2 0x1887 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x19BA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x199B DUP6 DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP5 POP PUSH2 0x19A6 DUP4 PUSH2 0x194D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1982 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 DUP5 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH0 DUP4 ADD DUP5 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A37 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A48 DUP6 DUP3 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ABD DUP2 PUSH2 0x1694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD8 JUMPI PUSH2 0x1AD7 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820446567656E20546F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B48 PUSH1 0x23 DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B53 DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20696E73756666696369656E74206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD6 PUSH1 0x25 DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP3 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C03 DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206974656D2049440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3E PUSH1 0xF DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6B DUP2 PUSH2 0x1C32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x168B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x168B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1C72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F2072656465656D0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D33 PUSH1 0x1E DUP4 PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3E DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D60 DUP2 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1DF0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1DFA DUP7 DUP4 PUSH2 0x1DB5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E35 PUSH2 0x1E30 PUSH2 0x1E2B DUP5 PUSH2 0x168B JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x168B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4E DUP4 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1E62 PUSH2 0x1E5A DUP3 PUSH2 0x1E3C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1DC1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1E81 DUP2 DUP5 DUP5 PUSH2 0x1E45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1E99 PUSH0 DUP3 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1E87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EBA DUP2 PUSH2 0x1D94 JUMP JUMPDEST PUSH2 0x1EC3 DUP5 PUSH2 0x1DA6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1ED2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1EE6 PUSH2 0x1EDE DUP6 PUSH2 0x1DA6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1E86 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F09 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1EEE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F21 DUP4 DUP4 PUSH2 0x1EFA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3A DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST PUSH2 0x1F5D DUP3 SLOAD PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1F68 DUP3 DUP3 DUP6 PUSH2 0x1EA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F99 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1F87 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1F91 DUP6 DUP3 PUSH2 0x1F16 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1FA7 DUP7 PUSH2 0x1D94 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FCE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FA9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1FEB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1FE7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1EFA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH0 DUP4 ADD DUP7 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x2020 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172F JUMP JUMPDEST PUSH2 0x202D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x172F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203F DUP3 PUSH2 0x168B JUMP JUMPDEST SWAP2 POP PUSH2 0x204A DUP4 PUSH2 0x168B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x1C72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xDD GASLIMIT 0xB0 PUSH1 0xD8 PUSH27 0x7C8B6DE272B2F0623552785E605C0A0F439BAACA9DB0AD5CCF6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "168:2686:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1050:104:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;938:106:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;362:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1160:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2423:99:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2568:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:292:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1722:657;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1050:104:6:-;1095:7;1121:4;:14;;;1136:10;1121:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1114:33;;1050:104;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;938:106:6:-;988:5;938:106;:::o;839:93::-;1531:13:0;:11;:13::i;:::-;908:17:6::1;914:2;918:6;908:5;:17::i;:::-;839:93:::0;;:::o;362:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1160:212::-;1261:6;1234:23;1244:12;:10;:12::i;:::-;1234:9;:23::i;:::-;:33;;1213:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1338:27;1344:12;:10;:12::i;:::-;1358:6;1338:5;:27::i;:::-;1160:212;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2423:99:6:-;2470:17;2506:9;2499:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:99;:::o;2568:113::-;2616:17;2652:10;:22;2663:10;2652:22;;;;;;;;;;;;;;;2645:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:113;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1378:292:6:-;1504:6;1477:23;1487:12;:10;:12::i;:::-;1477:9;:23::i;:::-;:33;;1456:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1583:27;1591:10;1603:6;1583:7;:27::i;:::-;;1620:43;1633:10;1645:9;1656:6;1620:12;:43::i;:::-;;1378:292;;:::o;1722:657::-;1790:1;1781:6;:10;:40;;;;;1805:9;:16;;;;1795:6;:26;;1781:40;1773:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:20;1874:9;1893:1;1884:6;:10;;;;:::i;:::-;1874:21;;;;;;;;:::i;:::-;;;;;;;;;;;;1851:44;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:4;:13;;;1956:21;1966:10;1956:9;:21::i;:::-;:38;;1935:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2061:32;2067:10;2079:4;:13;;;2061:5;:32::i;:::-;2154:10;:22;2165:10;2154:22;;;;;;;;;;;;;;;2182:4;2154:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2273:10;2247:125;;;2297:4;:11;;;2322:4;:13;;;2349:4;:13;;;2247:125;;;;;;;;:::i;:::-;;;;;;;;1763:616;1722:657;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:533::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:71;5369:1;5358:9;5354:17;5345:6;5301:71;:::i;:::-;5419:9;5413:4;5409:20;5404:2;5393:9;5389:18;5382:48;5447:78;5520:4;5511:6;5447:78;:::i;:::-;5439:86;;5535:72;5603:2;5592:9;5588:18;5579:6;5535:72;:::i;:::-;5081:533;;;;;;:::o;5620:329::-;5679:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:119;;;5734:79;;:::i;:::-;5696:119;5854:1;5879:53;5924:7;5915:6;5904:9;5900:22;5879:53;:::i;:::-;5869:63;;5825:117;5620:329;;;;:::o;5955:139::-;6047:6;6081:5;6075:12;6065:22;;5955:139;;;:::o;6100:209::-;6224:11;6258:6;6253:3;6246:19;6298:4;6293:3;6289:14;6274:29;;6100:209;;;;:::o;6315:157::-;6407:4;6430:3;6422:11;;6460:4;6455:3;6451:14;6443:22;;6315:157;;;:::o;6478:108::-;6555:24;6573:5;6555:24;:::i;:::-;6550:3;6543:37;6478:108;;:::o;6592:159::-;6666:11;6700:6;6695:3;6688:19;6740:4;6735:3;6731:14;6716:29;;6592:159;;;;:::o;6757:357::-;6835:3;6863:39;6896:5;6863:39;:::i;:::-;6918:61;6972:6;6967:3;6918:61;:::i;:::-;6911:68;;6988:65;7046:6;7041:3;7034:4;7027:5;7023:16;6988:65;:::i;:::-;7078:29;7100:6;7078:29;:::i;:::-;7073:3;7069:39;7062:46;;6839:275;6757:357;;;;:::o;7184:780::-;7293:3;7329:4;7324:3;7320:14;7418:4;7411:5;7407:16;7401:23;7437:63;7494:4;7489:3;7485:14;7471:12;7437:63;:::i;:::-;7344:166;7596:4;7589:5;7585:16;7579:23;7649:3;7643:4;7639:14;7632:4;7627:3;7623:14;7616:38;7675:73;7743:4;7729:12;7675:73;:::i;:::-;7667:81;;7520:239;7845:4;7838:5;7834:16;7828:23;7864:63;7921:4;7916:3;7912:14;7898:12;7864:63;:::i;:::-;7769:168;7954:4;7947:11;;7298:666;7184:780;;;;:::o;7970:256::-;8089:10;8124:96;8216:3;8208:6;8124:96;:::i;:::-;8110:110;;7970:256;;;;:::o;8232:138::-;8327:4;8359;8354:3;8350:14;8342:22;;8232:138;;;:::o;8444:1111::-;8613:3;8642:79;8715:5;8642:79;:::i;:::-;8737:111;8841:6;8836:3;8737:111;:::i;:::-;8730:118;;8874:3;8919:4;8911:6;8907:17;8902:3;8898:27;8949:81;9024:5;8949:81;:::i;:::-;9053:7;9084:1;9069:441;9094:6;9091:1;9088:13;9069:441;;;9165:9;9159:4;9155:20;9150:3;9143:33;9216:6;9210:13;9244:114;9353:4;9338:13;9244:114;:::i;:::-;9236:122;;9381:85;9459:6;9381:85;:::i;:::-;9371:95;;9495:4;9490:3;9486:14;9479:21;;9129:381;9116:1;9113;9109:9;9104:14;;9069:441;;;9073:14;9526:4;9519:11;;9546:3;9539:10;;8618:937;;;;;8444:1111;;;;:::o;9561:473::-;9754:4;9792:2;9781:9;9777:18;9769:26;;9841:9;9835:4;9831:20;9827:1;9816:9;9812:17;9805:47;9869:158;10022:4;10013:6;9869:158;:::i;:::-;9861:166;;9561:473;;;;:::o;10040:118::-;10127:24;10145:5;10127:24;:::i;:::-;10122:3;10115:37;10040:118;;:::o;10164:222::-;10257:4;10295:2;10284:9;10280:18;10272:26;;10308:71;10376:1;10365:9;10361:17;10352:6;10308:71;:::i;:::-;10164:222;;;;:::o;10392:474::-;10460:6;10468;10517:2;10505:9;10496:7;10492:23;10488:32;10485:119;;;10523:79;;:::i;:::-;10485:119;10643:1;10668:53;10713:7;10704:6;10693:9;10689:22;10668:53;:::i;:::-;10658:63;;10614:117;10770:2;10796:53;10841:7;10832:6;10821:9;10817:22;10796:53;:::i;:::-;10786:63;;10741:118;10392:474;;;;;:::o;10872:180::-;10920:77;10917:1;10910:88;11017:4;11014:1;11007:15;11041:4;11038:1;11031:15;11058:320;11102:6;11139:1;11133:4;11129:12;11119:22;;11186:1;11180:4;11176:12;11207:18;11197:81;;11263:4;11255:6;11251:17;11241:27;;11197:81;11325:2;11317:6;11314:14;11294:18;11291:38;11288:84;;11344:18;;:::i;:::-;11288:84;11109:269;11058:320;;;:::o;11384:143::-;11441:5;11472:6;11466:13;11457:22;;11488:33;11515:5;11488:33;:::i;:::-;11384:143;;;;:::o;11533:351::-;11603:6;11652:2;11640:9;11631:7;11627:23;11623:32;11620:119;;;11658:79;;:::i;:::-;11620:119;11778:1;11803:64;11859:7;11850:6;11839:9;11835:22;11803:64;:::i;:::-;11793:74;;11749:128;11533:351;;;;:::o;11890:222::-;12030:34;12026:1;12018:6;12014:14;12007:58;12099:5;12094:2;12086:6;12082:15;12075:30;11890:222;:::o;12118:366::-;12260:3;12281:67;12345:2;12340:3;12281:67;:::i;:::-;12274:74;;12357:93;12446:3;12357:93;:::i;:::-;12475:2;12470:3;12466:12;12459:19;;12118:366;;;:::o;12490:419::-;12656:4;12694:2;12683:9;12679:18;12671:26;;12743:9;12737:4;12733:20;12729:1;12718:9;12714:17;12707:47;12771:131;12897:4;12771:131;:::i;:::-;12763:139;;12490:419;;;:::o;12915:224::-;13055:34;13051:1;13043:6;13039:14;13032:58;13124:7;13119:2;13111:6;13107:15;13100:32;12915:224;:::o;13145:366::-;13287:3;13308:67;13372:2;13367:3;13308:67;:::i;:::-;13301:74;;13384:93;13473:3;13384:93;:::i;:::-;13502:2;13497:3;13493:12;13486:19;;13145:366;;;:::o;13517:419::-;13683:4;13721:2;13710:9;13706:18;13698:26;;13770:9;13764:4;13760:20;13756:1;13745:9;13741:17;13734:47;13798:131;13924:4;13798:131;:::i;:::-;13790:139;;13517:419;;;:::o;13942:165::-;14082:17;14078:1;14070:6;14066:14;14059:41;13942:165;:::o;14113:366::-;14255:3;14276:67;14340:2;14335:3;14276:67;:::i;:::-;14269:74;;14352:93;14441:3;14352:93;:::i;:::-;14470:2;14465:3;14461:12;14454:19;;14113:366;;;:::o;14485:419::-;14651:4;14689:2;14678:9;14674:18;14666:26;;14738:9;14732:4;14728:20;14724:1;14713:9;14709:17;14702:47;14766:131;14892:4;14766:131;:::i;:::-;14758:139;;14485:419;;;:::o;14910:180::-;14958:77;14955:1;14948:88;15055:4;15052:1;15045:15;15079:4;15076:1;15069:15;15096:194;15136:4;15156:20;15174:1;15156:20;:::i;:::-;15151:25;;15190:20;15208:1;15190:20;:::i;:::-;15185:25;;15234:1;15231;15227:9;15219:17;;15258:1;15252:4;15249:11;15246:37;;;15263:18;;:::i;:::-;15246:37;15096:194;;;;:::o;15296:180::-;15344:77;15341:1;15334:88;15441:4;15438:1;15431:15;15465:4;15462:1;15455:15;15482:180;15622:32;15618:1;15610:6;15606:14;15599:56;15482:180;:::o;15668:366::-;15810:3;15831:67;15895:2;15890:3;15831:67;:::i;:::-;15824:74;;15907:93;15996:3;15907:93;:::i;:::-;16025:2;16020:3;16016:12;16009:19;;15668:366;;;:::o;16040:419::-;16206:4;16244:2;16233:9;16229:18;16221:26;;16293:9;16287:4;16283:20;16279:1;16268:9;16264:17;16257:47;16321:131;16447:4;16321:131;:::i;:::-;16313:139;;16040:419;;;:::o;16465:180::-;16513:77;16510:1;16503:88;16610:4;16607:1;16600:15;16634:4;16631:1;16624:15;16651:141;16700:4;16723:3;16715:11;;16746:3;16743:1;16736:14;16780:4;16777:1;16767:18;16759:26;;16651:141;;;:::o;16798:93::-;16835:6;16882:2;16877;16870:5;16866:14;16862:23;16852:33;;16798:93;;;:::o;16897:107::-;16941:8;16991:5;16985:4;16981:16;16960:37;;16897:107;;;;:::o;17010:393::-;17079:6;17129:1;17117:10;17113:18;17152:97;17182:66;17171:9;17152:97;:::i;:::-;17270:39;17300:8;17289:9;17270:39;:::i;:::-;17258:51;;17342:4;17338:9;17331:5;17327:21;17318:30;;17391:4;17381:8;17377:19;17370:5;17367:30;17357:40;;17086:317;;17010:393;;;;;:::o;17409:60::-;17437:3;17458:5;17451:12;;17409:60;;;:::o;17475:142::-;17525:9;17558:53;17576:34;17585:24;17603:5;17585:24;:::i;:::-;17576:34;:::i;:::-;17558:53;:::i;:::-;17545:66;;17475:142;;;:::o;17623:75::-;17666:3;17687:5;17680:12;;17623:75;;;:::o;17704:269::-;17814:39;17845:7;17814:39;:::i;:::-;17875:91;17924:41;17948:16;17924:41;:::i;:::-;17916:6;17909:4;17903:11;17875:91;:::i;:::-;17869:4;17862:105;17780:193;17704:269;;;:::o;17979:73::-;18024:3;17979:73;:::o;18058:189::-;18135:32;;:::i;:::-;18176:65;18234:6;18226;18220:4;18176:65;:::i;:::-;18111:136;18058:189;;:::o;18253:186::-;18313:120;18330:3;18323:5;18320:14;18313:120;;;18384:39;18421:1;18414:5;18384:39;:::i;:::-;18357:1;18350:5;18346:13;18337:22;;18313:120;;;18253:186;;:::o;18445:543::-;18546:2;18541:3;18538:11;18535:446;;;18580:38;18612:5;18580:38;:::i;:::-;18664:29;18682:10;18664:29;:::i;:::-;18654:8;18650:44;18847:2;18835:10;18832:18;18829:49;;;18868:8;18853:23;;18829:49;18891:80;18947:22;18965:3;18947:22;:::i;:::-;18937:8;18933:37;18920:11;18891:80;:::i;:::-;18550:431;;18535:446;18445:543;;;:::o;18994:117::-;19048:8;19098:5;19092:4;19088:16;19067:37;;18994:117;;;;:::o;19117:169::-;19161:6;19194:51;19242:1;19238:6;19230:5;19227:1;19223:13;19194:51;:::i;:::-;19190:56;19275:4;19269;19265:15;19255:25;;19168:118;19117:169;;;;:::o;19291:295::-;19367:4;19513:29;19538:3;19532:4;19513:29;:::i;:::-;19505:37;;19575:3;19572:1;19568:11;19562:4;19559:21;19551:29;;19291:295;;;;:::o;19591:1395::-;19708:37;19741:3;19708:37;:::i;:::-;19810:18;19802:6;19799:30;19796:56;;;19832:18;;:::i;:::-;19796:56;19876:38;19908:4;19902:11;19876:38;:::i;:::-;19961:67;20021:6;20013;20007:4;19961:67;:::i;:::-;20055:1;20079:4;20066:17;;20111:2;20103:6;20100:14;20128:1;20123:618;;;;20785:1;20802:6;20799:77;;;20851:9;20846:3;20842:19;20836:26;20827:35;;20799:77;20902:67;20962:6;20955:5;20902:67;:::i;:::-;20896:4;20889:81;20758:222;20093:887;;20123:618;20175:4;20171:9;20163:6;20159:22;20209:37;20241:4;20209:37;:::i;:::-;20268:1;20282:208;20296:7;20293:1;20290:14;20282:208;;;20375:9;20370:3;20366:19;20360:26;20352:6;20345:42;20426:1;20418:6;20414:14;20404:24;;20473:2;20462:9;20458:18;20445:31;;20319:4;20316:1;20312:12;20307:17;;20282:208;;;20518:6;20509:7;20506:19;20503:179;;;20576:9;20571:3;20567:19;20561:26;20619:48;20661:4;20653:6;20649:17;20638:9;20619:48;:::i;:::-;20611:6;20604:64;20526:156;20503:179;20728:1;20724;20716:6;20712:14;20708:22;20702:4;20695:36;20130:611;;;20093:887;;19683:1303;;;19591:1395;;:::o;20992:442::-;21141:4;21179:2;21168:9;21164:18;21156:26;;21192:71;21260:1;21249:9;21245:17;21236:6;21192:71;:::i;:::-;21273:72;21341:2;21330:9;21326:18;21317:6;21273:72;:::i;:::-;21355;21423:2;21412:9;21408:18;21399:6;21355:72;:::i;:::-;20992:442;;;;;;:::o;21440:191::-;21480:3;21499:20;21517:1;21499:20;:::i;:::-;21494:25;;21533:20;21551:1;21533:20;:::i;:::-;21528:25;;21576:1;21573;21569:9;21562:16;;21597:3;21594:1;21591:10;21588:36;;;21604:18;;:::i;:::-;21588:36;21440:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1670000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"burnTokens(uint256)": "infinite",
								"decimals()": "353",
								"gameItems(uint256)": "infinite",
								"getBalance()": "infinite",
								"getGameItems()": "infinite",
								"getOwnedItems()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"redeem(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 530,
									"end": 833,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 530,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 530,
									"end": 833,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 584,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 665,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "456E646C657373204261746C6C65000000000000000000000000000000000000"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 704,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 671,
									"end": 705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 656,
									"end": 706,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 740,
									"end": 741,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "44656D6F6E2048756E7465722053776F72640000000000000000000000000000"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 765,
									"end": 768,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 731,
									"end": 769,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 716,
									"end": 770,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 770,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 789,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "57696E6474616C6B657200000000000000000000000000000000000000000000"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 821,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FA"
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 780,
									"end": 826,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 826,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2854,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012dd45b060d87a7c8b6de272b2f0623552785e605c0a0f439baaca9db0ad5ccf64736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "BEC3FA17"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "DB006A75"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "7A97840D"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "8CFFA21C"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "430074C2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "6D1B229D"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "12065FE0"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2854,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1050,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 938,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 938,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 839,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 839,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1160,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1160,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2423,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2423,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2568,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2568,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1378,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1378,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1722,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1722,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1121,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1121,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1121,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 839,
											"end": 932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 914,
											"end": 916,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 918,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 908,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 908,
											"end": 925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 908,
											"end": 925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1244,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1244,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1244,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1234,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1267,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1213,
											"end": 1328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1213,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1344,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1344,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1338,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2499,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2499,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2673,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2645,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2645,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1487,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1487,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1477,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1510,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1510,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1456,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1456,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1591,
											"end": 1601,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1583,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1633,
											"end": 1643,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1620,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1805,
											"end": 1821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1821,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1781,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1773,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1773,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1884,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1874,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1966,
											"end": 1976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1956,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1956,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1935,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2092,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2061,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2175,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2154,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2283,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH",
											"source": 6,
											"value": "2748AED474E8B2615B65F003A5FAC4B64D8C9EB9C911DAF175B6103F3802CD4C"
										},
										{
											"begin": 2297,
											"end": 2301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2247,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2372,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 2379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5301,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 5520,
											"end": 5524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5447,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5525,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 5447,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5603,
											"end": 5605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5535,
											"end": 5607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5607,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5535,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5731,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 5696,
											"end": 5815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 5734,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5734,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5813,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 5734,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5815,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 5696,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5924,
											"end": 5931,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5879,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6472,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6315,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6430,
											"end": 6433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6586,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6478,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 6573,
											"end": 6578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6555,
											"end": 6579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6550,
											"end": 6553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6735,
											"end": 6738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 6896,
											"end": 6901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6863,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6902,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 6863,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 6972,
											"end": 6978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6970,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6918,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6979,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7044,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6988,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 6988,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7100,
											"end": 7106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7078,
											"end": 7107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7062,
											"end": 7108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7062,
											"end": 7108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 7114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7416,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7401,
											"end": 7424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 7494,
											"end": 7498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7492,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7485,
											"end": 7499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7437,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7500,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 7437,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7579,
											"end": 7602,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7649,
											"end": 7652,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7636,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7627,
											"end": 7630,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7654,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7675,
											"end": 7748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7748,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7675,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7838,
											"end": 7843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7828,
											"end": 7851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7921,
											"end": 7925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7916,
											"end": 7919,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7864,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7927,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7864,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7954,
											"end": 7958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 7958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 7958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8124,
											"end": 8220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8220,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8124,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 8226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8370,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8232,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8715,
											"end": 8720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 8642,
											"end": 8721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8721,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8642,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8737,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8848,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8737,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8848,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8924,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8905,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9024,
											"end": 9029,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8949,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 9030,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8949,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9084,
											"end": 9085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9100,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9101,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9175,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9153,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9353,
											"end": 9357,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9338,
											"end": 9351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 9244,
											"end": 9358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9358,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9244,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9358,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 9381,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9466,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9381,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9495,
											"end": 9499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9493,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9069,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9073,
											"end": 9087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9519,
											"end": 9530,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9519,
											"end": 9530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9549,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 9555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9794,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9831,
											"end": 9851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 10022,
											"end": 10026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10019,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9869,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 10027,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9869,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 10027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 10027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 10034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10158,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 10040,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10145,
											"end": 10150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10127,
											"end": 10151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10151,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10127,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10297,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10365,
											"end": 10374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10358,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 10308,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10379,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10308,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10468,
											"end": 10474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10505,
											"end": 10514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10503,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10492,
											"end": 10515,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10520,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10485,
											"end": 10604,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10485,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10485,
											"end": 10604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10523,
											"end": 10602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10485,
											"end": 10604,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10485,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10643,
											"end": 10644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10689,
											"end": 10711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10668,
											"end": 10721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10614,
											"end": 10731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10770,
											"end": 10772,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10841,
											"end": 10848,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10838,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10796,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10786,
											"end": 10849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10786,
											"end": 10849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10741,
											"end": 10859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 11052,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10872,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10920,
											"end": 10997,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11021,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11007,
											"end": 11022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11045,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11133,
											"end": 11137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11186,
											"end": 11187,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11207,
											"end": 11225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11267,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11317,
											"end": 11323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11328,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11291,
											"end": 11329,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 11344,
											"end": 11362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11441,
											"end": 11446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11466,
											"end": 11479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11457,
											"end": 11479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11457,
											"end": 11479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11515,
											"end": 11520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11488,
											"end": 11521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11521,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11488,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11654,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11640,
											"end": 11649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11638,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11627,
											"end": 11650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11623,
											"end": 11655,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11620,
											"end": 11739,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11620,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11620,
											"end": 11739,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11658,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11658,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11658,
											"end": 11737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11658,
											"end": 11737,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11658,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11620,
											"end": 11739,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11620,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11859,
											"end": 11866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11850,
											"end": 11856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11835,
											"end": 11857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11803,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 11803,
											"end": 11867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11803,
											"end": 11867,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11803,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 11877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11533,
											"end": 11884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 12112,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 11890,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12064,
											"name": "PUSH",
											"source": 7,
											"value": "596F7520646F206E6F74206861766520656E6F75676820446567656E20546F6B"
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12018,
											"end": 12024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12007,
											"end": 12065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12099,
											"end": 12104,
											"name": "PUSH",
											"source": 7,
											"value": "656E730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12094,
											"end": 12096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 12112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 12340,
											"end": 12343,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 12281,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 12446,
											"end": 12449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12357,
											"end": 12450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12475,
											"end": 12477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12470,
											"end": 12473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12466,
											"end": 12478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12459,
											"end": 12478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12459,
											"end": 12478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12694,
											"end": 12696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12683,
											"end": 12692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12671,
											"end": 12697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12671,
											"end": 12697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12743,
											"end": 12752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12733,
											"end": 12753,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12718,
											"end": 12727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12771,
											"end": 12902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13139,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 12915,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13089,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65643A20696E73756666696369656E74206261"
										},
										{
											"begin": 13051,
											"end": 13052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13043,
											"end": 13049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13039,
											"end": 13053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13032,
											"end": 13090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13124,
											"end": 13131,
											"name": "PUSH",
											"source": 7,
											"value": "6C616E6365000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13119,
											"end": 13121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13107,
											"end": 13122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13100,
											"end": 13132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13511,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13145,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13308,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 13372,
											"end": 13374,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 13367,
											"end": 13370,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 13308,
											"end": 13375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13375,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 13308,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13301,
											"end": 13375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13301,
											"end": 13375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13384,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13384,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 13384,
											"end": 13477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13384,
											"end": 13477,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 13384,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13936,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 13517,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13721,
											"end": 13723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13710,
											"end": 13719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13770,
											"end": 13779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13764,
											"end": 13768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13780,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13756,
											"end": 13757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13734,
											"end": 13781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13798,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13924,
											"end": 13928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13798,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13798,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13798,
											"end": 13929,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13798,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13790,
											"end": 13929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13790,
											"end": 13929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13942,
											"end": 14107,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 13942,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14082,
											"end": 14099,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964206974656D2049440000000000000000000000000000000000"
										},
										{
											"begin": 14078,
											"end": 14079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14070,
											"end": 14076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14066,
											"end": 14080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14059,
											"end": 14100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13942,
											"end": 14107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13942,
											"end": 14107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14479,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14113,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 14340,
											"end": 14342,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 14335,
											"end": 14338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 14276,
											"end": 14343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14343,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 14276,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14269,
											"end": 14343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14269,
											"end": 14343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 14441,
											"end": 14444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14352,
											"end": 14445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14445,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 14352,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14470,
											"end": 14472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14465,
											"end": 14468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14461,
											"end": 14473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14454,
											"end": 14473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14454,
											"end": 14473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14485,
											"end": 14904,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 14485,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14651,
											"end": 14655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14689,
											"end": 14691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14678,
											"end": 14687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14674,
											"end": 14692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14738,
											"end": 14747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14732,
											"end": 14736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14748,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14724,
											"end": 14725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14713,
											"end": 14722,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14766,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 14892,
											"end": 14896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14766,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14766,
											"end": 14897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14766,
											"end": 14897,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 14766,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14758,
											"end": 14897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14758,
											"end": 14897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14485,
											"end": 14904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14485,
											"end": 14904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14485,
											"end": 14904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14485,
											"end": 14904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14910,
											"end": 15090,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14910,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14958,
											"end": 15035,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14955,
											"end": 14956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 15036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15055,
											"end": 15059,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 15052,
											"end": 15053,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15045,
											"end": 15060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15079,
											"end": 15083,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15076,
											"end": 15077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15069,
											"end": 15084,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15136,
											"end": 15140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15156,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15174,
											"end": 15175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15156,
											"end": 15176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15176,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15156,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15151,
											"end": 15176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15151,
											"end": 15176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15190,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15208,
											"end": 15209,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15190,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15190,
											"end": 15210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15190,
											"end": 15210,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15190,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15185,
											"end": 15210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15185,
											"end": 15210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15234,
											"end": 15235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15227,
											"end": 15236,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15258,
											"end": 15259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15249,
											"end": 15260,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15283,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 15246,
											"end": 15283,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15263,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 15263,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 15263,
											"end": 15281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15263,
											"end": 15281,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 15263,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15283,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 15246,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15476,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 15296,
											"end": 15476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15344,
											"end": 15421,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15334,
											"end": 15422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15441,
											"end": 15445,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 15438,
											"end": 15439,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15431,
											"end": 15446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15465,
											"end": 15469,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15462,
											"end": 15463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15455,
											"end": 15470,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15662,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 15482,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15622,
											"end": 15654,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E636520746F2072656465656D0000"
										},
										{
											"begin": 15618,
											"end": 15619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 15616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15599,
											"end": 15655,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 16034,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 15668,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15831,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 15895,
											"end": 15897,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 15890,
											"end": 15893,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15831,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 15831,
											"end": 15898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15831,
											"end": 15898,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 15831,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15824,
											"end": 15898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15824,
											"end": 15898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15996,
											"end": 15999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 15907,
											"end": 16000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 16000,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15907,
											"end": 16000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16025,
											"end": 16027,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16020,
											"end": 16023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16016,
											"end": 16028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16009,
											"end": 16028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16009,
											"end": 16028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 16034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 16034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 16034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 16034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16459,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 16040,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16206,
											"end": 16210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16244,
											"end": 16246,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16233,
											"end": 16242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16221,
											"end": 16247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16221,
											"end": 16247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16293,
											"end": 16302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16283,
											"end": 16303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16268,
											"end": 16277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16264,
											"end": 16281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16257,
											"end": 16304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16321,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 16447,
											"end": 16451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16321,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16321,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16321,
											"end": 16452,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 16321,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16465,
											"end": 16645,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 16465,
											"end": 16645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16513,
											"end": 16590,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16510,
											"end": 16511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16503,
											"end": 16591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16610,
											"end": 16614,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 16607,
											"end": 16608,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16600,
											"end": 16615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16634,
											"end": 16638,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16631,
											"end": 16632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16624,
											"end": 16639,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 16792,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16651,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16715,
											"end": 16726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16715,
											"end": 16726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16746,
											"end": 16749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16736,
											"end": 16750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16780,
											"end": 16784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16777,
											"end": 16778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 16759,
											"end": 16785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16759,
											"end": 16785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 16792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 16792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 16792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 16792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16891,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 16798,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16835,
											"end": 16841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16877,
											"end": 16879,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16870,
											"end": 16875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 16880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16852,
											"end": 16885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16852,
											"end": 16885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 16949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16991,
											"end": 16996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16985,
											"end": 16989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16981,
											"end": 16997,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 17004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17079,
											"end": 17085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17129,
											"end": 17130,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 17117,
											"end": 17127,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17113,
											"end": 17131,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17182,
											"end": 17248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17171,
											"end": 17180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17152,
											"end": 17249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17300,
											"end": 17308,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17289,
											"end": 17298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17270,
											"end": 17309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17342,
											"end": 17346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17347,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17331,
											"end": 17336,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17318,
											"end": 17348,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17318,
											"end": 17348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17381,
											"end": 17389,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17377,
											"end": 17396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17370,
											"end": 17375,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17367,
											"end": 17397,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17397,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17086,
											"end": 17403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17086,
											"end": 17403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17010,
											"end": 17403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17469,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 17409,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17437,
											"end": 17440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17458,
											"end": 17463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17451,
											"end": 17463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17451,
											"end": 17463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17617,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 17475,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17525,
											"end": 17534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17558,
											"end": 17611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 17576,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17585,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17603,
											"end": 17608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 17585,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17609,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17585,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17576,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 17576,
											"end": 17610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17576,
											"end": 17610,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17576,
											"end": 17610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17558,
											"end": 17611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 17558,
											"end": 17611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17558,
											"end": 17611,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 17558,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17545,
											"end": 17611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17545,
											"end": 17611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17698,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 17623,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17666,
											"end": 17669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17687,
											"end": 17692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 17692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 17692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17704,
											"end": 17973,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 17704,
											"end": 17973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17845,
											"end": 17852,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 17814,
											"end": 17853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17853,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17814,
											"end": 17853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17875,
											"end": 17966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17924,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17948,
											"end": 17964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 17924,
											"end": 17965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 17965,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17924,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17916,
											"end": 17922,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17909,
											"end": 17913,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 17914,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17875,
											"end": 17966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 17875,
											"end": 17966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17875,
											"end": 17966,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17875,
											"end": 17966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 17873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17862,
											"end": 17967,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17780,
											"end": 17973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17704,
											"end": 17973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17704,
											"end": 17973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17704,
											"end": 17973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17704,
											"end": 17973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17979,
											"end": 18052,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 17979,
											"end": 18052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18024,
											"end": 18027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17979,
											"end": 18052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17979,
											"end": 18052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18247,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 18058,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18135,
											"end": 18167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18135,
											"end": 18167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 18135,
											"end": 18167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18135,
											"end": 18167,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18135,
											"end": 18167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18234,
											"end": 18240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18226,
											"end": 18232,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18224,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 18176,
											"end": 18241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18241,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18176,
											"end": 18241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18111,
											"end": 18247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18439,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 18253,
											"end": 18439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18334,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18421,
											"end": 18422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18414,
											"end": 18419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 18384,
											"end": 18423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18423,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18384,
											"end": 18423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18357,
											"end": 18358,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18350,
											"end": 18355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18337,
											"end": 18359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18337,
											"end": 18359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 18313,
											"end": 18433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18445,
											"end": 18988,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 18445,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18546,
											"end": 18548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18541,
											"end": 18544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18538,
											"end": 18549,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18981,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18535,
											"end": 18981,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18580,
											"end": 18618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 18612,
											"end": 18617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18580,
											"end": 18618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 18580,
											"end": 18618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18580,
											"end": 18618,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 18580,
											"end": 18618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 18682,
											"end": 18692,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 18664,
											"end": 18693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18693,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 18664,
											"end": 18693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18650,
											"end": 18694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18847,
											"end": 18849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18835,
											"end": 18845,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 18878,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 18829,
											"end": 18878,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18868,
											"end": 18876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18853,
											"end": 18876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18853,
											"end": 18876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 18878,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 18829,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18891,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 18947,
											"end": 18969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 18965,
											"end": 18968,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 18969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 18947,
											"end": 18969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 18969,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 18947,
											"end": 18969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18937,
											"end": 18945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18933,
											"end": 18970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18920,
											"end": 18931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18891,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 18891,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18891,
											"end": 18971,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 18891,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18550,
											"end": 18981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18550,
											"end": 18981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18981,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18535,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18445,
											"end": 18988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18445,
											"end": 18988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18445,
											"end": 18988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18445,
											"end": 18988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19048,
											"end": 19056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19098,
											"end": 19103,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19092,
											"end": 19096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19088,
											"end": 19104,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 19067,
											"end": 19104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19067,
											"end": 19104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18994,
											"end": 19111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19161,
											"end": 19167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19194,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 19242,
											"end": 19243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19238,
											"end": 19244,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19230,
											"end": 19235,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19227,
											"end": 19228,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 19223,
											"end": 19236,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 19194,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 19194,
											"end": 19245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19194,
											"end": 19245,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 19194,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19190,
											"end": 19246,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19275,
											"end": 19279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19265,
											"end": 19280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19117,
											"end": 19286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19367,
											"end": 19371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19513,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 19538,
											"end": 19541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19532,
											"end": 19536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19513,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 19513,
											"end": 19542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19513,
											"end": 19542,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 19513,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19575,
											"end": 19578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19572,
											"end": 19573,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 19568,
											"end": 19579,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 19562,
											"end": 19566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19559,
											"end": 19580,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 19551,
											"end": 19580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19551,
											"end": 19580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 20986,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 19591,
											"end": 20986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19708,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 19741,
											"end": 19744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19708,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 19708,
											"end": 19745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19708,
											"end": 19745,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 19708,
											"end": 19745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19810,
											"end": 19828,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19802,
											"end": 19808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19799,
											"end": 19829,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19796,
											"end": 19852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19796,
											"end": 19852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 19796,
											"end": 19852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19832,
											"end": 19850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 19832,
											"end": 19850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 19832,
											"end": 19850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19832,
											"end": 19850,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 19832,
											"end": 19850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19796,
											"end": 19852,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 19796,
											"end": 19852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19876,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 19908,
											"end": 19912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19902,
											"end": 19913,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19876,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 19876,
											"end": 19914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19876,
											"end": 19914,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 19876,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19961,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 20021,
											"end": 20027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20013,
											"end": 20019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20007,
											"end": 20011,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19961,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 19961,
											"end": 20028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19961,
											"end": 20028,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 19961,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20055,
											"end": 20056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20079,
											"end": 20083,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20066,
											"end": 20083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20066,
											"end": 20083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20111,
											"end": 20113,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20103,
											"end": 20109,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20100,
											"end": 20114,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20128,
											"end": 20129,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20802,
											"end": 20808,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20799,
											"end": 20876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20799,
											"end": 20876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 20799,
											"end": 20876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20851,
											"end": 20860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20846,
											"end": 20849,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 20861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20836,
											"end": 20862,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20827,
											"end": 20862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20827,
											"end": 20862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20799,
											"end": 20876,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 20799,
											"end": 20876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20902,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 20962,
											"end": 20968,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20955,
											"end": 20960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20902,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 20902,
											"end": 20969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20902,
											"end": 20969,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 20902,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20896,
											"end": 20900,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20889,
											"end": 20970,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20758,
											"end": 20980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20093,
											"end": 20980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 20093,
											"end": 20980,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 20123,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20175,
											"end": 20179,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20171,
											"end": 20180,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 20163,
											"end": 20169,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20159,
											"end": 20181,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20209,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 20241,
											"end": 20245,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20209,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 20209,
											"end": 20246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20209,
											"end": 20246,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 20209,
											"end": 20246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20268,
											"end": 20269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20296,
											"end": 20303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20293,
											"end": 20294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20290,
											"end": 20304,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20375,
											"end": 20384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20370,
											"end": 20373,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 20366,
											"end": 20385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20360,
											"end": 20386,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20345,
											"end": 20387,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20426,
											"end": 20427,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20418,
											"end": 20424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20414,
											"end": 20428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20404,
											"end": 20428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20404,
											"end": 20428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20473,
											"end": 20475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20462,
											"end": 20471,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20458,
											"end": 20476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20445,
											"end": 20476,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 20445,
											"end": 20476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20323,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20316,
											"end": 20317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20312,
											"end": 20324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20307,
											"end": 20324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20307,
											"end": 20324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 20282,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20518,
											"end": 20524,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20516,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20506,
											"end": 20525,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20503,
											"end": 20682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20503,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 20503,
											"end": 20682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20576,
											"end": 20585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20571,
											"end": 20574,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 20586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20561,
											"end": 20587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20619,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 20661,
											"end": 20665,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20653,
											"end": 20659,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 20649,
											"end": 20666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20638,
											"end": 20647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20619,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 20619,
											"end": 20667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20619,
											"end": 20667,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 20619,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20611,
											"end": 20617,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20604,
											"end": 20668,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20526,
											"end": 20682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20503,
											"end": 20682,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 20503,
											"end": 20682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20728,
											"end": 20729,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20724,
											"end": 20725,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 20716,
											"end": 20722,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 20712,
											"end": 20726,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 20708,
											"end": 20730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20702,
											"end": 20706,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 20695,
											"end": 20731,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20130,
											"end": 20741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20130,
											"end": 20741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20130,
											"end": 20741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20093,
											"end": 20980,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 20093,
											"end": 20980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20093,
											"end": 20980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 20986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21141,
											"end": 21145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21179,
											"end": 21181,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 21168,
											"end": 21177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21156,
											"end": 21182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21156,
											"end": 21182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21192,
											"end": 21263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 21260,
											"end": 21261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21249,
											"end": 21258,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21245,
											"end": 21262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21236,
											"end": 21242,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21192,
											"end": 21263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 21192,
											"end": 21263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21192,
											"end": 21263,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 21192,
											"end": 21263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21273,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 21341,
											"end": 21343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21330,
											"end": 21339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21326,
											"end": 21344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21317,
											"end": 21323,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21273,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 21273,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21273,
											"end": 21345,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 21273,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21355,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 21423,
											"end": 21425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21412,
											"end": 21421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21408,
											"end": 21426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21399,
											"end": 21405,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21355,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 21355,
											"end": 21427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21355,
											"end": 21427,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 21355,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 21434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21480,
											"end": 21483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 21517,
											"end": 21518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 21499,
											"end": 21519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21494,
											"end": 21519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21494,
											"end": 21519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21533,
											"end": 21553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 21551,
											"end": 21552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21533,
											"end": 21553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 21533,
											"end": 21553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21533,
											"end": 21553,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 21533,
											"end": 21553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21528,
											"end": 21553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21528,
											"end": 21553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21576,
											"end": 21577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21573,
											"end": 21574,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21569,
											"end": 21578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21562,
											"end": 21578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21562,
											"end": 21578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21597,
											"end": 21600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21594,
											"end": 21595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21591,
											"end": 21601,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21588,
											"end": 21624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21588,
											"end": 21624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 21588,
											"end": 21624,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21604,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 21604,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 21604,
											"end": 21622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21604,
											"end": 21622,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 21604,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21588,
											"end": 21624,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 21588,
											"end": 21624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MetaCraftersAssesment6-main/contracts/DegenToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnTokens(uint256)": "6d1b229d",
							"decimals()": "313ce567",
							"gameItems(uint256)": "430074c2",
							"getBalance()": "12065fe0",
							"getGameItems()": "7a97840d",
							"getOwnedItems()": "8cffa21c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"redeem(uint256)": "db006a75",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,uint256)": "bec3fa17"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemCost\",\"type\":\"uint256\"}],\"name\":\"ItemRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"itemCost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"itemCost\",\"type\":\"uint256\"}],\"internalType\":\"struct DegenToken.GameItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnedItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"itemCost\",\"type\":\"uint256\"}],\"internalType\":\"struct DegenToken.GameItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MetaCraftersAssesment6-main/contracts/DegenToken.sol\":{\"keccak256\":\"0xa1179d0130a5cc7b002ec732ee5ef6af1e26d5b58925fb56b030e95974d830f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccff438436cbaaecf8291d3dd14453da0eba885921990cb7c6ac1e37a738e8f2\",\"dweb:/ipfs/QmTxZEKH4P5xNWB5pUkVW8CmvCfx7QxvXaCiK4nLdbHqq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 952,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "gameItems",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(GameItem)948_storage)dyn_storage"
							},
							{
								"astId": 958,
								"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
								"label": "ownedItems",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(GameItem)948_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(GameItem)948_storage)dyn_storage": {
								"base": "t_struct(GameItem)948_storage",
								"encoding": "dynamic_array",
								"label": "struct DegenToken.GameItem[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(GameItem)948_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegenToken.GameItem[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(GameItem)948_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(GameItem)948_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.GameItem",
								"members": [
									{
										"astId": 943,
										"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
										"label": "itemName",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 947,
										"contract": "MetaCraftersAssesment6-main/contracts/DegenToken.sol:DegenToken",
										"label": "itemCost",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"MetaCraftersAssesment6-main/contracts/DegenToken.sol": {
				"ast": {
					"absolutePath": "MetaCraftersAssesment6-main/contracts/DegenToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"DegenToken": [
							1187
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"191:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "191:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "191:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"198:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "198:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "198:7:6"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "DegenToken",
							"nameLocation": "177:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.GameItem",
									"id": 948,
									"members": [
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "292:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "284:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "284:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "itemName",
											"nameLocation": "315:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "308:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 944,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "308:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "itemCost",
											"nameLocation": "341:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "333:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "333:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GameItem",
									"nameLocation": "265:8:6",
									"nodeType": "StructDefinition",
									"scope": 1187,
									"src": "258:98:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "430074c2",
									"id": 952,
									"mutability": "mutable",
									"name": "gameItems",
									"nameLocation": "380:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "362:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
										"typeString": "struct DegenToken.GameItem[]"
									},
									"typeName": {
										"baseType": {
											"id": 950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 949,
												"name": "GameItem",
												"nameLocations": [
													"362:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "362:8:6"
											},
											"referencedDeclaration": 948,
											"src": "362:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GameItem_$948_storage_ptr",
												"typeString": "struct DegenToken.GameItem"
											}
										},
										"id": 951,
										"nodeType": "ArrayTypeName",
										"src": "362:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr",
											"typeString": "struct DegenToken.GameItem[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 958,
									"mutability": "mutable",
									"name": "ownedItems",
									"nameLocation": "513:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "474:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DegenToken.GameItem[])"
									},
									"typeName": {
										"id": 957,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 953,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "482:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "474:30:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DegenToken.GameItem[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 955,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 954,
													"name": "GameItem",
													"nameLocations": [
														"493:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 948,
													"src": "493:8:6"
												},
												"referencedDeclaration": 948,
												"src": "493:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GameItem_$948_storage_ptr",
													"typeString": "struct DegenToken.GameItem"
												}
											},
											"id": 956,
											"nodeType": "ArrayTypeName",
											"src": "493:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr",
												"typeString": "struct DegenToken.GameItem[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "586:247:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "680:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"hexValue": "456e646c657373204261746c6c65",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "683:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d79c7553ecb57ce99619fa7efa6ff0231f17084d9f4f06e61f32b3e1624237dd",
																		"typeString": "literal_string \"Endless Batlle\""
																	},
																	"value": "Endless Batlle"
																},
																{
																	"hexValue": "313030",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "701:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d79c7553ecb57ce99619fa7efa6ff0231f17084d9f4f06e61f32b3e1624237dd",
																		"typeString": "literal_string \"Endless Batlle\""
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 972,
																"name": "GameItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "671:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_GameItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.GameItem storage pointer)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:34:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														],
														"expression": {
															"id": 969,
															"name": "gameItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "656:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "666:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "656:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$_t_struct$_GameItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.GameItem storage ref[] storage pointer,struct DegenToken.GameItem storage ref)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "656:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "740:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																{
																	"hexValue": "44656d6f6e2048756e7465722053776f7264",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "743:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8279794b3bf0aeed9a3172986211e7d2e0abb8612df1cdae047e584dabdd9ce1",
																		"typeString": "literal_string \"Demon Hunter Sword\""
																	},
																	"value": "Demon Hunter Sword"
																},
																{
																	"hexValue": "313530",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "765:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_150_by_1",
																		"typeString": "int_const 150"
																	},
																	"value": "150"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8279794b3bf0aeed9a3172986211e7d2e0abb8612df1cdae047e584dabdd9ce1",
																		"typeString": "literal_string \"Demon Hunter Sword\""
																	},
																	{
																		"typeIdentifier": "t_rational_150_by_1",
																		"typeString": "int_const 150"
																	}
																],
																"id": 982,
																"name": "GameItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "731:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_GameItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.GameItem storage pointer)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "731:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														],
														"expression": {
															"id": 979,
															"name": "gameItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "716:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "726:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "716:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$_t_struct$_GameItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.GameItem storage ref[] storage pointer,struct DegenToken.GameItem storage ref)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "716:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "716:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																{
																	"hexValue": "57696e6474616c6b6572",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "807:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c89f1030d0930874e741edb6ff8f0a833aa16dda4f408bda83f6ea49ac24e425",
																		"typeString": "literal_string \"Windtalker\""
																	},
																	"value": "Windtalker"
																},
																{
																	"hexValue": "323530",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_250_by_1",
																		"typeString": "int_const 250"
																	},
																	"value": "250"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c89f1030d0930874e741edb6ff8f0a833aa16dda4f408bda83f6ea49ac24e425",
																		"typeString": "literal_string \"Windtalker\""
																	},
																	{
																		"typeIdentifier": "t_rational_250_by_1",
																		"typeString": "int_const 250"
																	}
																],
																"id": 992,
																"name": "GameItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "795:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_GameItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.GameItem storage pointer)"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "795:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														],
														"expression": {
															"id": 989,
															"name": "gameItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "780:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "790:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "780:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$_t_struct$_GameItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.GameItem storage ref[] storage pointer,struct DegenToken.GameItem storage ref)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "780:46:6"
											}
										]
									},
									"id": 1000,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "550:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 963,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 960,
												"name": "ERC20",
												"nameLocations": [
													"544:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "544:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "544:21:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 965,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "574:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "578:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "574:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 967,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "Ownable",
												"nameLocations": [
													"566:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "566:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "566:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:6"
									},
									"scope": 1187,
									"src": "530:303:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "898:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "914:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "918:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "908:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "908:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "onlyOwner",
												"nameLocations": [
													"888:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "888:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "888:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "848:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "861:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "853:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "873:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "865:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:28:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "898:0:6"
									},
									"scope": 1187,
									"src": "839:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "995:49:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1012:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1020,
												"id": 1022,
												"nodeType": "Return",
												"src": "1005:8:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "947:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "970:8:6"
									},
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "988:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1018,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "988:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:7:6"
									},
									"scope": 1187,
									"src": "938:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "1104:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1136:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1140:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1136:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1029,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1121:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DegenToken_$1187",
																"typeString": "contract DegenToken"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1126:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "1121:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1034,
												"nodeType": "Return",
												"src": "1114:33:6"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1059:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1069:2:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1095:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:9:6"
									},
									"scope": 1187,
									"src": "1050:104:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1203:169:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1043,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1244:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1244:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1042,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1234:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1234:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1046,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1261:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1234:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206861766520656e6f75676820446567656e20546f6b656e73",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1281:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70",
																"typeString": "literal_string \"You do not have enough Degen Tokens\""
															},
															"value": "You do not have enough Degen Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9059f531256e5bb73080455d24609c39a1f461018447fcc3a8ceec24764dfb70",
																"typeString": "literal_string \"You do not have enough Degen Tokens\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1213:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1213:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1213:115:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1052,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "1344:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1344:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "1358:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1338:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1338:27:6"
											}
										]
									},
									"functionSelector": "6d1b229d",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "1169:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1188:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1180:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:16:6"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:6"
									},
									"scope": 1187,
									"src": "1160:212:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "1446:224:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1067,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1487:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1487:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1477:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1477:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1070,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1504:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1477:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20696e73756666696369656e742062616c616e6365",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1524:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																"typeString": "literal_string \"Transfer failed: insufficient balance\""
															},
															"value": "Transfer failed: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																"typeString": "literal_string \"Transfer failed: insufficient balance\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1456:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1456:117:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1076,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1591:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1595:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1591:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1603:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1583:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1583:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1583:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1633:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1637:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1633:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1645:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1656:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1620:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1620:43:6"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1387:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1410:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1402:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1429:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1421:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:35:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:6"
									},
									"scope": 1187,
									"src": "1378:292:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1763:616:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "1781:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1790:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1781:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "1795:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1099,
																		"name": "gameItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "1805:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
																			"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1815:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1805:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1781:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206974656d204944",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1823:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0",
																"typeString": "literal_string \"Invalid item ID\""
															},
															"value": "Invalid item ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f36b5dd1a75028dc73b151fc4f4b97db1d9a2ddcff5d82e6c15c93afc0265a0",
																"typeString": "literal_string \"Invalid item ID\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1773:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1773:68:6"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "1867:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1152,
														"src": "1851:20:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
															"typeString": "struct DegenToken.GameItem"
														},
														"typeName": {
															"id": 1107,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1106,
																"name": "GameItem",
																"nameLocations": [
																	"1851:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 948,
																"src": "1851:8:6"
															},
															"referencedDeclaration": 948,
															"src": "1851:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameItem_$948_storage_ptr",
																"typeString": "struct DegenToken.GameItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"baseExpression": {
														"id": 1109,
														"name": "gameItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1874:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
															"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
														}
													},
													"id": 1113,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1110,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "1884:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1893:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1884:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameItem_$948_storage",
														"typeString": "struct DegenToken.GameItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1851:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1117,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1966:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1970:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1966:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1116,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1956:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1956:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1120,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "1981:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																		"typeString": "struct DegenToken.GameItem memory"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1986:8:6",
																"memberName": "itemCost",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "1981:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1956:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f2072656465656d",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967",
																"typeString": "literal_string \"Insufficient balance to redeem\""
															},
															"value": "Insufficient balance to redeem"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f66d1079117810e9731ff1d435c131515f13130632127307d77687bb6c39d967",
																"typeString": "literal_string \"Insufficient balance to redeem\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1935:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "1935:115:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2067:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2071:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2067:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1129,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2079:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.GameItem memory"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2084:8:6",
															"memberName": "itemCost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "2079:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2061:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "2061:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1138,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "2182:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																"typeString": "struct DegenToken.GameItem memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1133,
																"name": "ownedItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2154:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DegenToken.GameItem storage ref[] storage ref)"
																}
															},
															"id": 1136,
															"indexExpression": {
																"expression": {
																	"id": 1134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2165:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2169:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2165:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2154:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2177:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2154:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$_t_struct$_GameItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.GameItem storage ref[] storage pointer,struct DegenToken.GameItem storage ref)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2154:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2273:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2277:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2273:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1144,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2297:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.GameItem memory"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2302:6:6",
															"memberName": "itemId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "2297:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1146,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2322:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.GameItem memory"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2327:8:6",
															"memberName": "itemName",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 945,
															"src": "2322:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1148,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2349:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.GameItem memory"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2354:8:6",
															"memberName": "itemCost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "2349:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "ItemRedeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2247:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,string memory,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "EmitStatement",
												"src": "2242:130:6"
											}
										]
									},
									"functionSelector": "db006a75",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "1731:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1746:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1738:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:16:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1763:0:6"
									},
									"scope": 1187,
									"src": "1722:657:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "2489:33:6",
										"statements": [
											{
												"expression": {
													"id": 1160,
													"name": "gameItems",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "2506:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
														"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "2499:16:6"
											}
										]
									},
									"functionSelector": "7a97840d",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGameItems",
									"nameLocation": "2432:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2470:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DegenToken.GameItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 1156,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1155,
															"name": "GameItem",
															"nameLocations": [
																"2470:8:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 948,
															"src": "2470:8:6"
														},
														"referencedDeclaration": 948,
														"src": "2470:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameItem_$948_storage_ptr",
															"typeString": "struct DegenToken.GameItem"
														}
													},
													"id": 1157,
													"nodeType": "ArrayTypeName",
													"src": "2470:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr",
														"typeString": "struct DegenToken.GameItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:19:6"
									},
									"scope": 1187,
									"src": "2423:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2635:46:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1170,
														"name": "ownedItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2652:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DegenToken.GameItem storage ref[] storage ref)"
														}
													},
													"id": 1173,
													"indexExpression": {
														"expression": {
															"id": 1171,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2663:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2667:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2663:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2652:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage",
														"typeString": "struct DegenToken.GameItem storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1169,
												"id": 1174,
												"nodeType": "Return",
												"src": "2645:29:6"
											}
										]
									},
									"functionSelector": "8cffa21c",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnedItems",
									"nameLocation": "2577:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2590:2:6"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_GameItem_$948_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DegenToken.GameItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 1166,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1165,
															"name": "GameItem",
															"nameLocations": [
																"2616:8:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 948,
															"src": "2616:8:6"
														},
														"referencedDeclaration": 948,
														"src": "2616:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameItem_$948_storage_ptr",
															"typeString": "struct DegenToken.GameItem"
														}
													},
													"id": 1167,
													"nodeType": "ArrayTypeName",
													"src": "2616:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_GameItem_$948_storage_$dyn_storage_ptr",
														"typeString": "struct DegenToken.GameItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:19:6"
									},
									"scope": 1187,
									"src": "2568:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "2748aed474e8b2615b65f003a5fac4b64d8c9eb9c911daf175b6103f3802cd4c",
									"id": 1186,
									"name": "ItemRedeemed",
									"nameLocation": "2724:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "redeemer",
												"nameLocation": "2762:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2746:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "2788:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2780:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "2811:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2804:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2804:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemCost",
												"nameLocation": "2837:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2829:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:115:6"
									},
									"src": "2718:134:6"
								}
							],
							"scope": 1188,
							"src": "168:2686:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1186
							]
						}
					],
					"src": "32:2823:6"
				},
				"id": 6
			}
		}
	}
}